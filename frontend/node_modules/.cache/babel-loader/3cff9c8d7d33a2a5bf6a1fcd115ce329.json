{"ast":null,"code":"/*!\n * Splide.js\n * Version  : 2.4.14\n * License  : MIT\n * Copyright: 2020 Naotoshi Fujita\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"Splide\"] = factory();else root[\"Splide\"] = factory();\n})(window, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __webpack_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, __webpack_exports__, __webpack_require__) {\n      \"use strict\"; // ESM COMPAT FLAG\n\n      __webpack_require__.r(__webpack_exports__); // EXPORTS\n\n\n      __webpack_require__.d(__webpack_exports__, \"default\", function () {\n        return (\n          /* binding */\n          module_Splide\n        );\n      }); // NAMESPACE OBJECT: ./src/js/constants/states.js\n\n\n      var states_namespaceObject = {};\n\n      __webpack_require__.r(states_namespaceObject);\n\n      __webpack_require__.d(states_namespaceObject, \"CREATED\", function () {\n        return CREATED;\n      });\n\n      __webpack_require__.d(states_namespaceObject, \"MOUNTED\", function () {\n        return MOUNTED;\n      });\n\n      __webpack_require__.d(states_namespaceObject, \"IDLE\", function () {\n        return IDLE;\n      });\n\n      __webpack_require__.d(states_namespaceObject, \"MOVING\", function () {\n        return MOVING;\n      });\n\n      __webpack_require__.d(states_namespaceObject, \"DESTROYED\", function () {\n        return DESTROYED;\n      }); // CONCATENATED MODULE: ./src/js/core/event.js\n\n      /**\r\n       * The function for providing an Event object simply managing events.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The function for providing an Event object simply managing events.\r\n       */\n\n      /* harmony default export */\n\n\n      var core_event = function core_event() {\n        /**\r\n         * Store all event data.\r\n         *\r\n         * @type {Array}\r\n         */\n        var data = [];\n        var Event = {\n          /**\r\n           * Subscribe the given event(s).\r\n           *\r\n           * @param {string}   events  - An event name. Use space to separate multiple events.\r\n           *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n           * @param {function} handler - A callback function.\r\n           * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n           * @param {Object}   options - Optional. Options for addEventListener.\r\n           */\n          on: function on(events, handler, elm, options) {\n            if (elm === void 0) {\n              elm = null;\n            }\n\n            if (options === void 0) {\n              options = {};\n            }\n\n            events.split(' ').forEach(function (event) {\n              if (elm) {\n                elm.addEventListener(event, handler, options);\n              }\n\n              data.push({\n                event: event,\n                handler: handler,\n                elm: elm,\n                options: options\n              });\n            });\n          },\n\n          /**\r\n           * Unsubscribe the given event(s).\r\n           *\r\n           * @param {string}  events - A event name or names split by space.\r\n           * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n           */\n          off: function off(events, elm) {\n            if (elm === void 0) {\n              elm = null;\n            }\n\n            events.split(' ').forEach(function (event) {\n              data = data.filter(function (item) {\n                if (item && item.event === event && item.elm === elm) {\n                  unsubscribe(item);\n                  return false;\n                }\n\n                return true;\n              });\n            });\n          },\n\n          /**\r\n           * Emit an event.\r\n           * This method is only for custom events.\r\n           *\r\n           * @param {string}  event - An event name.\r\n           * @param {*}       args  - Any number of arguments passed to handlers.\r\n           */\n          emit: function emit(event) {\n            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n\n            data.forEach(function (item) {\n              if (!item.elm && item.event.split('.')[0] === event) {\n                item.handler.apply(item, args);\n              }\n            });\n          },\n\n          /**\r\n           * Clear event data.\r\n           */\n          destroy: function destroy() {\n            data.forEach(unsubscribe);\n            data = [];\n          }\n        };\n        /**\r\n         * Remove the registered event listener.\r\n         *\r\n         * @param {Object} item - An object containing event data.\r\n         */\n\n        function unsubscribe(item) {\n          if (item.elm) {\n            item.elm.removeEventListener(item.event, item.handler, item.options);\n          }\n        }\n\n        return Event;\n      }; // CONCATENATED MODULE: ./src/js/core/state.js\n\n      /**\r\n       * The function providing a super simple state system.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The function providing a super simple state system.\r\n       *\r\n       * @param {string|number} initialState - Provide the initial state value.\r\n       */\n\n      /* harmony default export */\n\n\n      var state = function state(initialState) {\n        /**\r\n         * Store the current state.\r\n         *\r\n         * @type {string|number}\r\n         */\n        var curr = initialState;\n        return {\n          /**\r\n           * Change state.\r\n           *\r\n           * @param {string|number} state - A new state.\r\n           */\n          set: function set(state) {\n            curr = state;\n          },\n\n          /**\r\n           * Verify if the current state is given one or not.\r\n           *\r\n           * @param {string|number} state - A state name to be verified.\r\n           *\r\n           * @return {boolean} - True if the current state is the given one.\r\n           */\n          is: function is(state) {\n            return state === curr;\n          }\n        };\n      }; // CONCATENATED MODULE: ./src/js/utils/object.js\n\n\n      function _extends() {\n        _extends = Object.assign || function (target) {\n          for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n              if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n              }\n            }\n          }\n\n          return target;\n        };\n\n        return _extends.apply(this, arguments);\n      }\n      /**\r\n       * Some utility functions related with Object, supporting IE.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n\n      var keys = Object.keys;\n      /**\r\n       * Iterate an object like Array.forEach.\r\n       * IE doesn't support forEach of HTMLCollection.\r\n       *\r\n       * @param {Object}    obj       - An object.\r\n       * @param {function}  callback  - A function handling each value. Arguments are value, property and index.\r\n       */\n\n      function each(obj, callback) {\n        keys(obj).some(function (key, index) {\n          return callback(obj[key], key, index);\n        });\n      }\n      /**\r\n       * Return values of the given object as an array.\r\n       * IE doesn't support Object.values.\r\n       *\r\n       * @param {Object} obj - An object.\r\n       *\r\n       * @return {Array} - An array containing all values of the given object.\r\n       */\n\n\n      function values(obj) {\n        return keys(obj).map(function (key) {\n          return obj[key];\n        });\n      }\n      /**\r\n       * Check if the given subject is object or not.\r\n       *\r\n       * @param {*} subject - A subject to be verified.\r\n       *\r\n       * @return {boolean} - True if object, false otherwise.\r\n       */\n\n\n      function isObject(subject) {\n        return typeof subject === 'object';\n      }\n      /**\r\n       * Merge two objects deeply.\r\n       *\r\n       * @param {Object} to   - An object where \"from\" is merged.\r\n       * @param {Object} from - An object merged to \"to\".\r\n       *\r\n       * @return {Object} - A merged object.\r\n       */\n\n\n      function merge(_ref, from) {\n        var to = _extends({}, _ref);\n\n        each(from, function (value, key) {\n          if (isObject(value)) {\n            if (!isObject(to[key])) {\n              to[key] = {};\n            }\n\n            to[key] = merge(to[key], value);\n          } else {\n            to[key] = value;\n          }\n        });\n        return to;\n      }\n      /**\r\n       * Assign all properties \"from\" to \"to\" object.\r\n       *\r\n       * @param {Object} to   - An object where properties are assigned.\r\n       * @param {Object} from - An object whose properties are assigned to \"to\".\r\n       *\r\n       * @return {Object} - An assigned object.\r\n       */\n\n\n      function object_assign(to, from) {\n        keys(from).forEach(function (key) {\n          if (!to[key]) {\n            Object.defineProperty(to, key, Object.getOwnPropertyDescriptor(from, key));\n          }\n        });\n        return to;\n      } // CONCATENATED MODULE: ./src/js/utils/utils.js\n\n      /**\r\n       * A package of some miscellaneous utility functions.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Convert the given value to array.\r\n       *\r\n       * @param {*} value - Any value.\r\n       *\r\n       * @return {*[]} - Array containing the given value.\r\n       */\n\n\n      function toArray(value) {\n        return Array.isArray(value) ? value : [value];\n      }\n      /**\r\n       * Check if the given value is between min and max.\r\n       * Min will be returned when the value is less than min or max will do when greater than max.\r\n       *\r\n       * @param {number} value - A number to be checked.\r\n       * @param {number} m1    - Minimum or maximum number.\r\n       * @param {number} m2    - Maximum or minimum number.\r\n       *\r\n       * @return {number} - A value itself, min or max.\r\n       */\n\n\n      function between(value, m1, m2) {\n        return Math.min(Math.max(value, m1 > m2 ? m2 : m1), m1 > m2 ? m1 : m2);\n      }\n      /**\r\n       * The sprintf method with minimum functionality.\r\n       *\r\n       * @param {string}       format       - The string format.\r\n       * @param {string|Array} replacements - Replacements accepting multiple arguments.\r\n       *\r\n       * @returns {string} - Converted string.\r\n       */\n\n\n      function sprintf(format, replacements) {\n        var i = 0;\n        return format.replace(/%s/g, function () {\n          return toArray(replacements)[i++];\n        });\n      }\n      /**\r\n       * Append px unit to the given subject if necessary.\r\n       *\r\n       * @param {number|string} value - A value that may not include an unit.\r\n       *\r\n       * @return {string} - If the value is string, return itself.\r\n       *                    If number, do value + \"px\". An empty string, otherwise.\r\n       */\n\n\n      function unit(value) {\n        var type = typeof value;\n\n        if (type === 'number' && value > 0) {\n          return parseFloat(value) + 'px';\n        }\n\n        return type === 'string' ? value : '';\n      }\n      /**\r\n       * Pad start with 0.\r\n       *\r\n       * @param {number} number - A number to be filled with 0.\r\n       *\r\n       * @return {string|number} - Padded number.\r\n       */\n\n\n      function pad(number) {\n        return number < 10 ? '0' + number : number;\n      }\n      /**\r\n       * Convert the given value to pixel.\r\n       *\r\n       * @param {Element}       root  - Root element where a dummy div is appended.\r\n       * @param {string|number} value - CSS value to be converted, such as 10rem.\r\n       *\r\n       * @return {number} - Pixel.\r\n       */\n\n\n      function toPixel(root, value) {\n        if (typeof value === 'string') {\n          var div = create('div', {});\n          applyStyle(div, {\n            position: 'absolute',\n            width: value\n          });\n          append(root, div);\n          value = div.clientWidth;\n          dom_remove(div);\n        }\n\n        return +value || 0;\n      } // CONCATENATED MODULE: ./src/js/utils/dom.js\n\n      /**\r\n       * Some utility functions related with DOM.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Find the first element matching the given selector.\r\n       * Be aware that all selectors after a space are ignored.\r\n       *\r\n       * @param {Element|Node}  elm       - An ancestor element.\r\n       * @param {string}        selector  - DOMString.\r\n       *\r\n       * @return {Element|null} - A found element or null.\r\n       */\n\n\n      function find(elm, selector) {\n        return elm ? elm.querySelector(selector.split(' ')[0]) : null;\n      }\n      /**\r\n       * Find a first child having the given tag or class name.\r\n       *\r\n       * @param {Element} parent         - A parent element.\r\n       * @param {string}  tagOrClassName - A tag or class name.\r\n       *\r\n       * @return {Element|undefined} - A found element on success or undefined on failure.\r\n       */\n\n\n      function child(parent, tagOrClassName) {\n        return children(parent, tagOrClassName)[0];\n      }\n      /**\r\n       * Return chile elements that matches the provided tag or class name.\r\n       *\r\n       * @param {Element} parent         - A parent element.\r\n       * @param {string}  tagOrClassName - A tag or class name.\r\n       *\r\n       * @return {Element[]} - Found elements.\r\n       */\n\n\n      function children(parent, tagOrClassName) {\n        if (parent) {\n          return values(parent.children).filter(function (child) {\n            return hasClass(child, tagOrClassName.split(' ')[0]) || child.tagName === tagOrClassName;\n          });\n        }\n\n        return [];\n      }\n      /**\r\n       * Create an element with some optional attributes.\r\n       *\r\n       * @param {string} tag   - A tag name.\r\n       * @param {Object} attrs - An object any attribute pairs of name and value.\r\n       *\r\n       * @return {Element} - A created element.\r\n       */\n\n\n      function create(tag, attrs) {\n        var elm = document.createElement(tag);\n        each(attrs, function (value, key) {\n          return setAttribute(elm, key, value);\n        });\n        return elm;\n      }\n      /**\r\n       * Convert HTML string to DOM node.\r\n       *\r\n       * @param {string} html - HTML string.\r\n       *\r\n       * @return {Node} - A created node.\r\n       */\n\n\n      function domify(html) {\n        var div = create('div', {});\n        div.innerHTML = html;\n        return div.firstChild;\n      }\n      /**\r\n       * Remove a given element from a DOM tree.\r\n       *\r\n       * @param {Element|Element[]} elms - Element(s) to be removed.\r\n       */\n\n\n      function dom_remove(elms) {\n        toArray(elms).forEach(function (elm) {\n          if (elm) {\n            var parent = elm.parentElement;\n            parent && parent.removeChild(elm);\n          }\n        });\n      }\n      /**\r\n       * Append a child to a given element.\r\n       *\r\n       * @param {Element} parent - A parent element.\r\n       * @param {Element} child  - An element to be appended.\r\n       */\n\n\n      function append(parent, child) {\n        if (parent) {\n          parent.appendChild(child);\n        }\n      }\n      /**\r\n       * Insert an element before the reference element.\r\n       *\r\n       * @param {Element|Node} ref - A reference element.\r\n       * @param {Element}      elm - An element to be inserted.\r\n       */\n\n\n      function before(elm, ref) {\n        if (elm && ref) {\n          var parent = ref.parentElement;\n          parent && parent.insertBefore(elm, ref);\n        }\n      }\n      /**\r\n       * Apply styles to the given element.\r\n       *\r\n       * @param {Element} elm     - An element where styles are applied.\r\n       * @param {Object}  styles  - Object containing styles.\r\n       */\n\n\n      function applyStyle(elm, styles) {\n        if (elm) {\n          each(styles, function (value, prop) {\n            if (value !== null) {\n              elm.style[prop] = value;\n            }\n          });\n        }\n      }\n      /**\r\n       * Add or remove classes to/from the element.\r\n       * This function is for internal usage.\r\n       *\r\n       * @param {Element}         elm     - An element where classes are added.\r\n       * @param {string|string[]} classes - Class names being added.\r\n       * @param {boolean}         remove  - Whether to remove or add classes.\r\n       */\n\n\n      function addOrRemoveClasses(elm, classes, remove) {\n        if (elm) {\n          toArray(classes).forEach(function (name) {\n            if (name) {\n              elm.classList[remove ? 'remove' : 'add'](name);\n            }\n          });\n        }\n      }\n      /**\r\n       * Add classes to the element.\r\n       *\r\n       * @param {Element}          elm     - An element where classes are added.\r\n       * @param {string|string[]}  classes - Class names being added.\r\n       */\n\n\n      function addClass(elm, classes) {\n        addOrRemoveClasses(elm, classes, false);\n      }\n      /**\r\n       * Remove a class from the element.\r\n       *\r\n       * @param {Element}         elm     - An element where classes are removed.\r\n       * @param {string|string[]} classes - A class name being removed.\r\n       */\n\n\n      function removeClass(elm, classes) {\n        addOrRemoveClasses(elm, classes, true);\n      }\n      /**\r\n       * Verify if the provided element has the class or not.\r\n       *\r\n       * @param {Element} elm       - An element.\r\n       * @param {string}  className - A class name.\r\n       *\r\n       * @return {boolean} - True if the element has the class or false if not.\r\n       */\n\n\n      function hasClass(elm, className) {\n        return !!elm && elm.classList.contains(className);\n      }\n      /**\r\n       * Set attribute to the given element.\r\n       *\r\n       * @param {Element}                 elm   - An element where an attribute is assigned.\r\n       * @param {string}                  name  - Attribute name.\r\n       * @param {string|number|boolean}   value - Attribute value.\r\n       */\n\n\n      function setAttribute(elm, name, value) {\n        if (elm) {\n          elm.setAttribute(name, value);\n        }\n      }\n      /**\r\n       * Get attribute from the given element.\r\n       *\r\n       * @param {Element} elm  - An element where an attribute is assigned.\r\n       * @param {string}  name - Attribute name.\r\n       *\r\n       * @return {string} - The value of the given attribute if available. An empty string if not.\r\n       */\n\n\n      function getAttribute(elm, name) {\n        return elm ? elm.getAttribute(name) : '';\n      }\n      /**\r\n       * Remove attribute from the given element.\r\n       *\r\n       * @param {Element|Element[]} elms  - An element where an attribute is removed.\r\n       * @param {string|string[]}      names - Attribute name.\r\n       */\n\n\n      function removeAttribute(elms, names) {\n        toArray(names).forEach(function (name) {\n          toArray(elms).forEach(function (elm) {\n            return elm && elm.removeAttribute(name);\n          });\n        });\n      }\n      /**\r\n       * Return the Rect object of the provided object.\r\n       *\r\n       * @param {Element} elm - An element.\r\n       *\r\n       * @return {ClientRect|DOMRect} - A rect object.\r\n       */\n\n\n      function getRect(elm) {\n        return elm.getBoundingClientRect();\n      }\n      /**\r\n       * Trigger the given callback after all images contained by the element are loaded.\r\n       *\r\n       * @param {Element}  elm      - Element that may contain images.\r\n       * @param {Function} callback - Callback function fired right after all images are loaded.\r\n       */\n\n\n      function dom_loaded(elm, callback) {\n        var images = elm.querySelectorAll('img');\n        var length = images.length;\n\n        if (length) {\n          var count = 0;\n          each(images, function (img) {\n            img.onload = img.onerror = function () {\n              if (++count === length) {\n                callback();\n              }\n            };\n          });\n        } else {\n          // Trigger the callback immediately if there is no image.\n          callback();\n        }\n      } // CONCATENATED MODULE: ./src/js/constants/types.js\n\n      /**\r\n       * Export slider types.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Normal slider.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var SLIDE = 'slide';\n      /**\r\n       * Loop after the last slide and before the first one.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var LOOP = 'loop';\n      /**\r\n       * The track doesn't move.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var FADE = 'fade'; // CONCATENATED MODULE: ./src/js/transitions/slide/index.js\n\n      /**\r\n       * The component for general slide effect transition.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for general slide effect transition.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var transitions_slide = function transitions_slide(Splide, Components) {\n        /**\r\n         * Hold the list element.\r\n         *\r\n         * @type {Element}\r\n         */\n        var list;\n        /**\r\n         * Hold the onEnd callback function.\r\n         *\r\n         * @type {function}\r\n         */\n\n        var endCallback;\n        return {\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            list = Components.Elements.list;\n            Splide.on('transitionend', function (e) {\n              if (e.target === list && endCallback) {\n                endCallback();\n              }\n            }, list);\n          },\n\n          /**\r\n           * Start transition.\r\n           *\r\n           * @param {number}   destIndex - Destination slide index that might be clone's.\r\n           * @param {number}   newIndex  - New index.\r\n           * @param {number}   prevIndex - Previous index.\r\n           * @param {Object}   coord     - Destination coordinates.\r\n           * @param {function} done      - Callback function must be invoked when transition is completed.\r\n           */\n          start: function start(destIndex, newIndex, prevIndex, coord, done) {\n            var options = Splide.options;\n            var edgeIndex = Components.Controller.edgeIndex;\n            var speed = options.speed;\n            endCallback = done;\n\n            if (Splide.is(SLIDE)) {\n              if (prevIndex === 0 && newIndex >= edgeIndex || prevIndex >= edgeIndex && newIndex === 0) {\n                speed = options.rewindSpeed || speed;\n              }\n            }\n\n            applyStyle(list, {\n              transition: \"transform \" + speed + \"ms \" + options.easing,\n              transform: \"translate(\" + coord.x + \"px,\" + coord.y + \"px)\"\n            });\n          }\n        };\n      }; // CONCATENATED MODULE: ./src/js/transitions/fade/index.js\n\n      /**\r\n       * The component for fade transition.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for fade transition.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n\n      var fade = function fade(Splide, Components) {\n        var Fade = {\n          /**\r\n           * Called when the component is mounted.\r\n           * Apply transition style to the first slide.\r\n           */\n          mount: function mount() {\n            apply(Splide.index);\n          },\n\n          /**\r\n           * Start transition.\r\n           *\r\n           * @param {number}    destIndex - Destination slide index that might be clone's.\r\n           * @param {number}    newIndex  - New index.\r\n           * @param {number}    prevIndex - Previous index.\r\n           * @param {Object}    coord     - Destination coordinates.\r\n           * @param {function}  done      - Callback function must be invoked when transition is completed.\r\n           */\n          start: function start(destIndex, newIndex, prevIndex, coord, done) {\n            var track = Components.Elements.track;\n            applyStyle(track, {\n              height: unit(track.clientHeight)\n            });\n            apply(newIndex);\n            setTimeout(function () {\n              done();\n              applyStyle(track, {\n                height: ''\n              });\n            });\n          }\n        };\n        /**\r\n         * Apply transition style to the slide specified by the given index.\r\n         *\r\n         * @param {number} index - A slide index.\r\n         */\n\n        function apply(index) {\n          var options = Splide.options;\n          applyStyle(Components.Elements.slides[index], {\n            transition: \"opacity \" + options.speed + \"ms \" + options.easing\n          });\n        }\n\n        return Fade;\n      }; // CONCATENATED MODULE: ./src/js/transitions/index.js\n\n      /**\r\n       * Export transition components.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n      // CONCATENATED MODULE: ./src/js/core/composer.js\n\n      /**\r\n       * Provide a function for composing components.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Compose components.\r\n       *\r\n       * @param {Splide}   Splide     - Splide instance.\r\n       * @param {Object}   Components - Additional components.\r\n       * @param {function} Transition - Change component for transition.\r\n       *\r\n       * @return {Object} - An object containing all components.\r\n       */\n\n\n      function compose(Splide, Components, Transition) {\n        var components = {};\n        each(Components, function (Component, name) {\n          components[name] = Component(Splide, components, name.toLowerCase());\n        });\n\n        if (!Transition) {\n          Transition = Splide.is(FADE) ? fade : transitions_slide;\n        }\n\n        components.Transition = Transition(Splide, components);\n        return components;\n      } // CONCATENATED MODULE: ./src/js/utils/error.js\n\n      /**\r\n       * Utility functions for outputting logs.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Prefix of an error massage.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var MESSAGE_PREFIX = '[SPLIDE]';\n      /**\r\n       * Display an error message on the browser console.\r\n       *\r\n       * @param {string} message - An error message.\r\n       */\n\n      function error_error(message) {\n        console.error(MESSAGE_PREFIX + \" \" + message);\n      }\n      /**\r\n       * Check existence of the given object and throw an error if it doesn't.\r\n       *\r\n       * @throws {Error}\r\n       *\r\n       * @param {*}      subject - A subject to be confirmed.\r\n       * @param {string} message - An error message.\r\n       */\n\n\n      function exist(subject, message) {\n        if (!subject) {\n          throw new Error(message);\n        }\n      } // CONCATENATED MODULE: ./src/js/constants/classes.js\n\n      /**\r\n       * Export class names.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * A root class name.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var ROOT = 'splide';\n      /**\r\n       * The definition table of all classes for elements.\r\n       * They might be modified by options.\r\n       *\r\n       * @type {Object}\r\n       */\n\n      var ELEMENT_CLASSES = {\n        root: ROOT,\n        slider: ROOT + \"__slider\",\n        track: ROOT + \"__track\",\n        list: ROOT + \"__list\",\n        slide: ROOT + \"__slide\",\n        container: ROOT + \"__slide__container\",\n        arrows: ROOT + \"__arrows\",\n        arrow: ROOT + \"__arrow\",\n        prev: ROOT + \"__arrow--prev\",\n        next: ROOT + \"__arrow--next\",\n        pagination: ROOT + \"__pagination\",\n        page: ROOT + \"__pagination__page\",\n        clone: ROOT + \"__slide--clone\",\n        progress: ROOT + \"__progress\",\n        bar: ROOT + \"__progress__bar\",\n        autoplay: ROOT + \"__autoplay\",\n        play: ROOT + \"__play\",\n        pause: ROOT + \"__pause\",\n        spinner: ROOT + \"__spinner\",\n        sr: ROOT + \"__sr\"\n      };\n      /**\r\n       * Definitions of status classes.\r\n       *\r\n       * @type {Object}\r\n       */\n\n      var STATUS_CLASSES = {\n        active: 'is-active',\n        visible: 'is-visible',\n        loading: 'is-loading'\n      }; // CONCATENATED MODULE: ./src/js/constants/i18n.js\n\n      /**\r\n       * Export i18n texts as object.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Texts for i18n.\r\n       *\r\n       * @type {Object}\r\n       */\n\n      var I18N = {\n        prev: 'Previous slide',\n        next: 'Next slide',\n        first: 'Go to first slide',\n        last: 'Go to last slide',\n        slideX: 'Go to slide %s',\n        pageX: 'Go to page %s',\n        play: 'Start autoplay',\n        pause: 'Pause autoplay'\n      }; // CONCATENATED MODULE: ./src/js/constants/defaults.js\n\n      /**\r\n       * Export default options.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      var DEFAULTS = {\n        /**\r\n         * Determine a slider type.\r\n         * - 'slide': Regular slider.\r\n         * - 'loop' : Carousel slider.\r\n         * - 'fade' : Change slides with fade transition. perPage, drag options are ignored.\r\n         *\r\n         * @type {string}\r\n         */\n        type: 'slide',\n\n        /**\r\n         * Whether to rewind a slider before the first slide or after the last one.\r\n         * In \"loop\" mode, this option is ignored.\r\n         *\r\n         * @type {boolean}\r\n         */\n        rewind: false,\n\n        /**\r\n         * Transition speed in milliseconds.\r\n         *\r\n         * @type {number}\r\n         */\n        speed: 400,\n\n        /**\r\n         * Transition speed on rewind in milliseconds.\r\n         *\r\n         * @type {number}\r\n         */\n        rewindSpeed: 0,\n\n        /**\r\n         * Whether to prevent any actions while a slider is transitioning.\r\n         * If false, navigation, drag and swipe work while the slider is running.\r\n         * Even so, it will be forced to wait for transition in some cases in the loop mode to shift a slider.\r\n         *\r\n         * @type {boolean}\r\n         */\n        waitForTransition: true,\n\n        /**\r\n         * Define slider max width.\r\n         *\r\n         * @type {number}\r\n         */\n        width: 0,\n\n        /**\r\n         * Define slider height.\r\n         *\r\n         * @type {number}\r\n         */\n        height: 0,\n\n        /**\r\n         * Fix width of slides. CSS format is allowed such as 10em, 80% or 80vw.\r\n         * perPage number will be ignored when this option is falsy.\r\n         *\r\n         * @type {number|string}\r\n         */\n        fixedWidth: 0,\n\n        /**\r\n         * Fix height of slides. CSS format is allowed such as 10em, 80vh but % unit is not accepted.\r\n         * heightRatio option will be ignored when this option is falsy.\r\n         *\r\n         * @type {number|string}\r\n         */\n        fixedHeight: 0,\n\n        /**\r\n         * Determine height of slides by ratio to a slider width.\r\n         * This will be ignored when the fixedHeight is provided.\r\n         *\r\n         * @type {number}\r\n         */\n        heightRatio: 0,\n\n        /**\r\n         * If true, slide width will be determined by the element width itself.\r\n         * - perPage/perMove should be 1.\r\n         *\r\n         * @type {boolean}\r\n         */\n        autoWidth: false,\n\n        /**\r\n         * If true, slide height will be determined by the element width itself.\r\n         * - perPage/perMove should be 1.\r\n         *\r\n         * @type {boolean}\r\n         */\n        autoHeight: false,\n\n        /**\r\n         * Determine how many slides should be displayed per page.\r\n         *\r\n         * @type {number}\r\n         */\n        perPage: 1,\n\n        /**\r\n         * Determine how many slides should be moved when a slider goes to next or perv.\r\n         *\r\n         * @type {number}\r\n         */\n        perMove: 0,\n\n        /**\r\n         * Determine manually how many clones should be generated on the left and right side.\r\n         * The total number of clones will be twice of this number.\r\n         *\r\n         * @type {number}\r\n         */\n        clones: 0,\n\n        /**\r\n         * Start index.\r\n         *\r\n         * @type {number}\r\n         */\n        start: 0,\n\n        /**\r\n         * Determine which slide should be focused if there are multiple slides in a page.\r\n         * A string \"center\" is acceptable for centering slides.\r\n         *\r\n         * @type {boolean|number|string}\r\n         */\n        focus: false,\n\n        /**\r\n         * Gap between slides. CSS format is allowed such as 1em.\r\n         *\r\n         * @type {number|string}\r\n         */\n        gap: 0,\n\n        /**\r\n         * Set padding-left/right in horizontal mode or padding-top/bottom in vertical one.\r\n         * Give a single value to set a same size for both sides or\r\n         * do an object for different sizes.\r\n         * Also, CSS format is allowed such as 1em.\r\n         *\r\n         * @example\r\n         * - 10: Number\r\n         * - '1em': CSS format.\r\n         * - { left: 0, right: 20 }: Object for different sizes in horizontal mode.\r\n         * - { top: 0, bottom: 20 }: Object for different sizes in vertical mode.\r\n         *\r\n         * @type {number|string|Object}\r\n         */\n        padding: 0,\n\n        /**\r\n         * Whether to append arrows.\r\n         *\r\n         * @type {boolean}\r\n         */\n        arrows: true,\n\n        /**\r\n         * Change the arrow SVG path like 'm7.61 0.807-2.12...'.\r\n         *\r\n         * @type {string}\r\n         */\n        arrowPath: '',\n\n        /**\r\n         * Whether to append pagination(indicator dots) or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n        pagination: true,\n\n        /**\r\n         * Activate autoplay.\r\n         *\r\n         * @type {boolean}\r\n         */\n        autoplay: false,\n\n        /**\r\n         * Autoplay interval in milliseconds.\r\n         *\r\n         * @type {number}\r\n         */\n        interval: 5000,\n\n        /**\r\n         * Whether to stop autoplay when a slider is hovered.\r\n         *\r\n         * @type {boolean}\r\n         */\n        pauseOnHover: true,\n\n        /**\r\n         * Whether to stop autoplay when a slider elements are focused.\r\n         * True is recommended for accessibility.\r\n         *\r\n         * @type {boolean}\r\n         */\n        pauseOnFocus: true,\n\n        /**\r\n         * Whether to reset progress of the autoplay timer when resumed.\r\n         *\r\n         * @type {boolean}\r\n         */\n        resetProgress: true,\n\n        /**\r\n         * Loading images lazily.\r\n         * Image src must be provided by a data-splide-lazy attribute.\r\n         *\r\n         * - false: Do nothing.\r\n         * - 'nearby': Only images around an active slide will be loaded.\r\n         * - 'sequential': All images will be sequentially loaded.\r\n         *\r\n         * @type {boolean|string}\r\n         */\n        lazyLoad: false,\n\n        /**\r\n         * This option works only when a lazyLoad option is \"nearby\".\r\n         * Determine how many pages(not slides) around an active slide should be loaded beforehand.\r\n         *\r\n         * @type {number}\r\n         */\n        preloadPages: 1,\n\n        /**\r\n         * Easing for CSS transition. For example, linear, ease or cubic-bezier().\r\n         *\r\n         * @type {string}\r\n         */\n        easing: 'cubic-bezier(.42,.65,.27,.99)',\n\n        /**\r\n         * Whether to enable keyboard shortcuts\r\n         * - true or 'global': Listen to keydown event of the document.\r\n         * - 'focused': Listen to the keydown event of the slider root element. tabindex=\"0\" will be added to the element.\r\n         * - false: Disable keyboard shortcuts.\r\n         *\r\n         * @type {boolean|string}\r\n         */\n        keyboard: 'global',\n\n        /**\r\n         * Whether to allow mouse drag and touch swipe.\r\n         *\r\n         * @type {boolean}\r\n         */\n        drag: true,\n\n        /**\r\n         * The angle threshold for drag.\r\n         * The slider starts moving only when the drag angle is less than this threshold.\r\n         *\r\n         * @type {number}\r\n         */\n        dragAngleThreshold: 30,\n\n        /**\r\n         * Distance threshold for determining if the action is \"flick\" or \"swipe\".\r\n         * When a drag distance is over this value, the action will be treated as \"swipe\", not \"flick\".\r\n         *\r\n         * @type {number}\r\n         */\n        swipeDistanceThreshold: 150,\n\n        /**\r\n         * Velocity threshold for determining if the action is \"flick\" or \"swipe\".\r\n         * Around 0.5 is recommended.\r\n         *\r\n         * @type {number}\r\n         */\n        flickVelocityThreshold: .6,\n\n        /**\r\n         * Determine power of flick. The larger number this is, the farther a slider runs by flick.\r\n         * Around 500 is recommended.\r\n         *\r\n         * @type {number}\r\n         */\n        flickPower: 600,\n\n        /**\r\n         * Limit a number of pages to move by flick.\r\n         *\r\n         * @type {number}\r\n         */\n        flickMaxPages: 1,\n\n        /**\r\n         * Slider direction.\r\n         * - 'ltr': Left to right.\r\n         * - 'rtl': Right to left.\r\n         * - 'ttb': Top to bottom.\r\n         *\r\n         * @type {string}\r\n         */\n        direction: 'ltr',\n\n        /**\r\n         * Set img src to background-image of its parent element.\r\n         * Images with various sizes can be displayed as same dimension without cropping work.\r\n         * fixedHeight or heightRatio is required.\r\n         *\r\n         * @type {boolean}\r\n         */\n        cover: false,\n\n        /**\r\n         * Whether to enable accessibility(aria and screen reader texts) or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n        accessibility: true,\n\n        /**\r\n         * Whether to add tabindex=\"0\" to visible slides or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n        slideFocus: true,\n\n        /**\r\n         * Determine if a slider is navigation for another.\r\n         * Use \"sync\" API to synchronize two sliders.\r\n         *\r\n         * @type {boolean}\r\n         */\n        isNavigation: false,\n\n        /**\r\n         * Whether to trim spaces before the fist slide or after the last one when \"focus\" is not 0.\r\n         *\r\n         * @type {boolean}\r\n         */\n        trimSpace: true,\n\n        /**\r\n         * The \"is-active\" class is added after transition as default.\r\n         * If true, it will be added before move.\r\n         *\r\n         * @type {boolean}\r\n         */\n        updateOnMove: false,\n\n        /**\r\n         * Throttle duration in milliseconds for the resize event.\r\n         *\r\n         * @type {number}\r\n         */\n        throttle: 100,\n\n        /**\r\n         * Whether to destroy a slider or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n        destroy: false,\n\n        /**\r\n         * Options for specific breakpoints.\r\n         *\r\n         * @example\r\n         * {\r\n         *   1000: {\r\n         *     perPage: 3,\r\n         *     gap: 20\r\n         *   },\r\n         *   600: {\r\n         *     perPage: 1,\r\n         *     gap: 5,\r\n         *   }\r\n         * }\r\n         *\r\n         * @type {boolean|Object}\r\n         */\n        breakpoints: false,\n\n        /**\r\n         * Collection of class names.\r\n         *\r\n         * @see ./classes.js\r\n         *\r\n         * @type {Object}\r\n         */\n        classes: ELEMENT_CLASSES,\n\n        /**\r\n         * Collection of i18n texts.\r\n         *\r\n         * @see ./i18n.js\r\n         *\r\n         * @type {Object}\r\n         */\n        i18n: I18N\n      }; // CONCATENATED MODULE: ./src/js/constants/states.js\n\n      /**\r\n       * Export state constants.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Splide has been just created.\r\n       *\r\n       * @type {number}\r\n       */\n\n      var CREATED = 1;\n      /**\r\n       * All components have been mounted and initialized.\r\n       *\r\n       * @type {number}\r\n       */\n\n      var MOUNTED = 2;\n      /**\r\n       * Splide is ready for transition.\r\n       *\r\n       * @type {number}\r\n       */\n\n      var IDLE = 3;\n      /**\r\n       * Splide is moving.\r\n       *\r\n       * @type {number}\r\n       */\n\n      var MOVING = 4;\n      /**\r\n       * Splide is moving.\r\n       *\r\n       * @type {number}\r\n       */\n\n      var DESTROYED = 5; // CONCATENATED MODULE: ./src/js/splide.js\n\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n      /**\r\n       * The main class for applying Splide to an element.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The main class for applying Splide to an element,\r\n       * providing some APIs to control the behavior.\r\n       */\n\n\n      var splide_Splide = /*#__PURE__*/function () {\n        /**\r\n         * Splide constructor.\r\n         *\r\n         * @throws {Error} When the given root element or selector is invalid.\r\n         *\r\n         * @param {Element|string}  root       - A selector for a root element or an element itself.\r\n         * @param {Object}          options    - Optional. Options to change default behaviour.\r\n         * @param {Object}          Components - Optional. Components.\r\n         */\n        function Splide(root, options, Components) {\n          if (options === void 0) {\n            options = {};\n          }\n\n          if (Components === void 0) {\n            Components = {};\n          }\n\n          this.root = root instanceof Element ? root : document.querySelector(root);\n          exist(this.root, 'An invalid element/selector was given.');\n          this.Components = null;\n          this.Event = core_event();\n          this.State = state(CREATED);\n          this.STATES = states_namespaceObject;\n          this._o = merge(DEFAULTS, options);\n          this._i = 0;\n          this._c = Components;\n          this._e = {}; // Extensions\n\n          this._t = null; // Transition\n        }\n        /**\r\n         * Compose and mount components.\r\n         *\r\n         * @param {Object}   Extensions - Optional. Additional components.\r\n         * @param {function} Transition - Optional. Set a custom transition component.\r\n         *\r\n         * @return {Splide|undefined} - This instance or undefined if an exception occurred.\r\n         */\n\n\n        var _proto = Splide.prototype;\n\n        _proto.mount = function mount(Extensions, Transition) {\n          var _this = this;\n\n          if (Extensions === void 0) {\n            Extensions = this._e;\n          }\n\n          if (Transition === void 0) {\n            Transition = this._t;\n          } // Reset the state.\n\n\n          this.State.set(CREATED);\n          this._e = Extensions;\n          this._t = Transition;\n          this.Components = compose(this, merge(this._c, Extensions), Transition);\n\n          try {\n            each(this.Components, function (component, key) {\n              var required = component.required;\n\n              if (required === undefined || required) {\n                component.mount && component.mount();\n              } else {\n                delete _this.Components[key];\n              }\n            });\n          } catch (e) {\n            error_error(e.message);\n            return;\n          }\n\n          var State = this.State;\n          State.set(MOUNTED);\n          each(this.Components, function (component) {\n            component.mounted && component.mounted();\n          });\n          this.emit('mounted');\n          State.set(IDLE);\n          this.emit('ready');\n          applyStyle(this.root, {\n            visibility: 'visible'\n          });\n          this.on('move drag', function () {\n            return State.set(MOVING);\n          }).on('moved dragged', function () {\n            return State.set(IDLE);\n          });\n          return this;\n        }\n        /**\r\n         * Set sync target.\r\n         *\r\n         * @param {Splide} splide - A Splide instance.\r\n         *\r\n         * @return {Splide} - This instance.\r\n         */\n        ;\n\n        _proto.sync = function sync(splide) {\n          this.sibling = splide;\n          return this;\n        }\n        /**\r\n         * Register callback fired on the given event(s).\r\n         *\r\n         * @param {string}   events  - An event name. Use space to separate multiple events.\r\n         *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n         * @param {function} handler - A callback function.\r\n         * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n         * @param {Object}   options - Optional. Options for addEventListener.\r\n         *\r\n         * @return {Splide} - This instance.\r\n         */\n        ;\n\n        _proto.on = function on(events, handler, elm, options) {\n          if (elm === void 0) {\n            elm = null;\n          }\n\n          if (options === void 0) {\n            options = {};\n          }\n\n          this.Event.on(events, handler, elm, options);\n          return this;\n        }\n        /**\r\n         * Unsubscribe the given event.\r\n         *\r\n         * @param {string}  events - A event name.\r\n         * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n         *\r\n         * @return {Splide} - This instance.\r\n         */\n        ;\n\n        _proto.off = function off(events, elm) {\n          if (elm === void 0) {\n            elm = null;\n          }\n\n          this.Event.off(events, elm);\n          return this;\n        }\n        /**\r\n         * Emit an event.\r\n         *\r\n         * @param {string} event - An event name.\r\n         * @param {*}      args  - Any number of arguments passed to handlers.\r\n         */\n        ;\n\n        _proto.emit = function emit(event) {\n          var _this$Event;\n\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          (_this$Event = this.Event).emit.apply(_this$Event, [event].concat(args));\n\n          return this;\n        }\n        /**\r\n         * Go to the slide specified by the given control.\r\n         *\r\n         * @param {string|number} control - A control pattern.\r\n         * @param {boolean}       wait    - Optional. Whether to wait for transition.\r\n         */\n        ;\n\n        _proto.go = function go(control, wait) {\n          if (wait === void 0) {\n            wait = this.options.waitForTransition;\n          }\n\n          if (this.State.is(IDLE) || this.State.is(MOVING) && !wait) {\n            this.Components.Controller.go(control, false);\n          }\n\n          return this;\n        }\n        /**\r\n         * Verify whether the slider type is the given one or not.\r\n         *\r\n         * @param {string} type - A slider type.\r\n         *\r\n         * @return {boolean} - True if the slider type is the provided type or false if not.\r\n         */\n        ;\n\n        _proto.is = function is(type) {\n          return type === this._o.type;\n        }\n        /**\r\n         * Insert a slide.\r\n         *\r\n         * @param {Element|string} slide - A slide element to be added.\r\n         * @param {number}         index - A slide will be added at the position.\r\n         */\n        ;\n\n        _proto.add = function add(slide, index) {\n          if (index === void 0) {\n            index = -1;\n          }\n\n          this.Components.Elements.add(slide, index, this.refresh.bind(this));\n          return this;\n        }\n        /**\r\n         * Remove the slide designated by the index.\r\n         *\r\n         * @param {number} index - A slide index.\r\n         */\n        ;\n\n        _proto.remove = function remove(index) {\n          this.Components.Elements.remove(index);\n          this.refresh();\n          return this;\n        }\n        /**\r\n         * Destroy all Slide objects and clones and recreate them again.\r\n         */\n        ;\n\n        _proto.refresh = function refresh() {\n          this.emit('refresh').emit('resize');\n          return this;\n        }\n        /**\r\n         * Destroy the Splide.\r\n         * \"Completely\" boolean is mainly for breakpoints.\r\n         *\r\n         * @param {boolean} completely - Destroy completely.\r\n         */\n        ;\n\n        _proto.destroy = function destroy(completely) {\n          var _this2 = this;\n\n          if (completely === void 0) {\n            completely = true;\n          } // Postpone destroy because it should be done after mount.\n\n\n          if (this.State.is(CREATED)) {\n            this.on('ready', function () {\n              return _this2.destroy(completely);\n            });\n            return;\n          }\n\n          values(this.Components).reverse().forEach(function (component) {\n            component.destroy && component.destroy(completely);\n          });\n          this.emit('destroy', completely); // Destroy all event handlers, including ones for native events.\n\n          this.Event.destroy();\n          this.State.set(DESTROYED);\n          return this;\n        }\n        /**\r\n         * Return the current slide index.\r\n         *\r\n         * @return {number} - The current slide index.\r\n         // */\n        ;\n\n        _createClass(Splide, [{\n          key: \"index\",\n          get: function get() {\n            return this._i;\n          }\n          /**\r\n           * Set the current slide index.\r\n           *\r\n           * @param {number|string} index - A new index.\r\n           */\n          ,\n          set: function set(index) {\n            this._i = parseInt(index);\n          }\n          /**\r\n           * Return length of slides.\r\n           * This is an alias of Elements.length.\r\n           *\r\n           * @return {number} - A number of slides.\r\n           */\n\n        }, {\n          key: \"length\",\n          get: function get() {\n            return this.Components.Elements.length;\n          }\n          /**\r\n           * Return options.\r\n           *\r\n           * @return {Object} - Options object.\r\n           */\n\n        }, {\n          key: \"options\",\n          get: function get() {\n            return this._o;\n          }\n          /**\r\n           * Set options with merging the given object to the current one.\r\n           *\r\n           * @param {Object} options - New options.\r\n           */\n          ,\n          set: function set(options) {\n            var created = this.State.is(CREATED);\n\n            if (!created) {\n              this.emit('update');\n            }\n\n            this._o = merge(this._o, options);\n\n            if (!created) {\n              this.emit('updated', this._o);\n            }\n          }\n          /**\r\n           * Return the class list.\r\n           * This is an alias of Splide.options.classList.\r\n           *\r\n           * @return {Object} - An object containing all class list.\r\n           */\n\n        }, {\n          key: \"classes\",\n          get: function get() {\n            return this._o.classes;\n          }\n          /**\r\n           * Return the i18n strings.\r\n           * This is an alias of Splide.options.i18n.\r\n           *\r\n           * @return {Object} - An object containing all i18n strings.\r\n           */\n\n        }, {\n          key: \"i18n\",\n          get: function get() {\n            return this._o.i18n;\n          }\n        }]);\n\n        return Splide;\n      }(); // CONCATENATED MODULE: ./src/js/components/options/index.js\n\n      /**\r\n       * The component for initializing options.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for initializing options.\r\n       *\r\n       * @param {Splide} Splide - A Splide instance.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n\n      var components_options = function components_options(Splide) {\n        /**\r\n         * Retrieve options from the data attribute.\r\n         * Note that IE10 doesn't support dataset property.\r\n         *\r\n         * @type {string}\r\n         */\n        var options = getAttribute(Splide.root, 'data-splide');\n\n        if (options) {\n          try {\n            Splide.options = JSON.parse(options);\n          } catch (e) {\n            error_error(e.message);\n          }\n        }\n\n        return {\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            if (Splide.State.is(CREATED)) {\n              Splide.index = Splide.options.start;\n            }\n          }\n        };\n      }; // CONCATENATED MODULE: ./src/js/constants/directions.js\n\n      /**\r\n       * Export layout modes.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Enumerate slides from left to right.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var LTR = 'ltr';\n      /**\r\n       * Enumerate slides from right to left.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var RTL = 'rtl';\n      /**\r\n       * Enumerate slides in a col.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var TTB = 'ttb'; // CONCATENATED MODULE: ./src/js/components/elements/slide.js\n\n      /**\r\n       * The sub component for handling each slide.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Events for restoring original styles.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var STYLE_RESTORE_EVENTS = 'update.slide';\n      /**\r\n       * The sub component for handling each slide.\r\n       *\r\n       * @param {Splide}  Splide    - A Splide instance.\r\n       * @param {number}  index     - An unique slide index.\r\n       * @param {number}  realIndex - Clones should pass a real slide index.\r\n       * @param {Element} slide     - A slide element.\r\n       *\r\n       * @return {Object} - The sub component object.\r\n       */\n\n      /* harmony default export */\n\n      var elements_slide = function elements_slide(Splide, index, realIndex, slide) {\n        /**\r\n         * Whether to update \"is-active\" class before or after transition.\r\n         *\r\n         * @type {boolean}\r\n         */\n        var updateOnMove = Splide.options.updateOnMove;\n        /**\r\n         * Events when the slide status is updated.\r\n         * Append a namespace to remove listeners later.\r\n         *\r\n         * @type {string}\r\n         */\n\n        var STATUS_UPDATE_EVENTS = 'ready.slide updated.slide resize.slide moved.slide' + (updateOnMove ? ' move.slide' : '');\n        /**\r\n         * Slide sub component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Slide = {\n          /**\r\n           * Slide element.\r\n           *\r\n           * @type {Element}\r\n           */\n          slide: slide,\n\n          /**\r\n           * Slide index.\r\n           *\r\n           * @type {number}\r\n           */\n          index: index,\n\n          /**\r\n           * Real index for clones.\r\n           *\r\n           * @type {number}\r\n           */\n          realIndex: realIndex,\n\n          /**\r\n           * Container element if available.\r\n           *\r\n           * @type {Element|undefined}\r\n           */\n          container: child(slide, Splide.classes.container),\n\n          /**\r\n           * Whether this is a cloned slide or not.\r\n           *\r\n           * @type {boolean}\r\n           */\n          isClone: realIndex > -1,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            var _this = this;\n\n            if (!this.isClone) {\n              slide.id = Splide.root.id + \"-slide\" + pad(index + 1);\n            }\n\n            Splide.on(STATUS_UPDATE_EVENTS, function () {\n              return _this.update();\n            }).on(STYLE_RESTORE_EVENTS, restoreStyles).on('click', function () {\n              return Splide.emit('click', _this);\n            }, slide);\n            /*\r\n             * Add \"is-active\" class to a clone element temporarily\r\n             * and it will be removed on \"moved\" event.\r\n             */\n\n            if (updateOnMove) {\n              Splide.on('move.slide', function (newIndex) {\n                if (newIndex === realIndex) {\n                  _update(true, false);\n                }\n              });\n            } // Make sure the slide is shown.\n\n\n            applyStyle(slide, {\n              display: ''\n            }); // Hold the original styles.\n\n            this.styles = getAttribute(slide, 'style') || '';\n          },\n\n          /**\r\n           * Destroy.\r\n           */\n          destroy: function destroy() {\n            Splide.off(STATUS_UPDATE_EVENTS).off(STYLE_RESTORE_EVENTS).off('click', slide);\n            removeClass(slide, values(STATUS_CLASSES));\n            restoreStyles();\n            removeAttribute(this.container, 'style');\n          },\n\n          /**\r\n           * Update active and visible status.\r\n           */\n          update: function update() {\n            _update(this.isActive(), false);\n\n            _update(this.isVisible(), true);\n          },\n\n          /**\r\n           * Check whether this slide is active or not.\r\n           *\r\n           * @return {boolean} - True if the slide is active or false if not.\r\n           */\n          isActive: function isActive() {\n            return Splide.index === index;\n          },\n\n          /**\r\n           * Check whether this slide is visible in the viewport or not.\r\n           *\r\n           * @return {boolean} - True if the slide is visible or false if not.\r\n           */\n          isVisible: function isVisible() {\n            var active = this.isActive();\n\n            if (Splide.is(FADE) || active) {\n              return active;\n            }\n\n            var trackRect = getRect(Splide.Components.Elements.track);\n            var slideRect = getRect(slide);\n\n            if (Splide.options.direction === TTB) {\n              return trackRect.top <= slideRect.top && slideRect.bottom <= trackRect.bottom;\n            }\n\n            return trackRect.left <= slideRect.left && slideRect.right <= trackRect.right;\n          },\n\n          /**\r\n           * Calculate how far this slide is from another slide and\r\n           * return true if the distance is within the given number.\r\n           *\r\n           * @param {number} from   - Index of a target slide.\r\n           * @param {number} within - True if the slide is within this number.\r\n           *\r\n           * @return {boolean} - True if the slide is within the number or false otherwise.\r\n           */\n          isWithin: function isWithin(from, within) {\n            var diff = Math.abs(from - index);\n\n            if (!Splide.is(SLIDE) && !this.isClone) {\n              diff = Math.min(diff, Splide.length - diff);\n            }\n\n            return diff < within;\n          }\n        };\n        /**\r\n         * Update classes for activity or visibility.\r\n         *\r\n         * @param {boolean} active        - Is active/visible or not.\r\n         * @param {boolean} forVisibility - Toggle classes for activity or visibility.\r\n         */\n\n        function _update(active, forVisibility) {\n          var type = forVisibility ? 'visible' : 'active';\n          var className = STATUS_CLASSES[type];\n\n          if (active) {\n            addClass(slide, className);\n            Splide.emit(\"\" + type, Slide);\n          } else {\n            if (hasClass(slide, className)) {\n              removeClass(slide, className);\n              Splide.emit(\"\" + (forVisibility ? 'hidden' : 'inactive'), Slide);\n            }\n          }\n        }\n        /**\r\n         * Restore the original styles.\r\n         */\n\n\n        function restoreStyles() {\n          setAttribute(slide, 'style', Slide.styles);\n        }\n\n        return Slide;\n      }; // CONCATENATED MODULE: ./src/js/components/elements/index.js\n\n      /**\r\n       * The component for main elements.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The property name for UID stored in a window object.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var UID_NAME = 'uid';\n      /**\r\n       * The component for main elements.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var components_elements = function components_elements(Splide, Components) {\n        /**\r\n         * Hold the root element.\r\n         *\r\n         * @type {Element}\r\n         */\n        var root = Splide.root;\n        /**\r\n         * Hold the class list.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var classes = Splide.classes;\n        /**\r\n         * Store Slide objects.\r\n         *\r\n         * @type {Array}\r\n         */\n\n        var Slides = [];\n        /*\r\n         * Assign unique ID to the root element if it doesn't have the one.\r\n         * Note that IE doesn't support padStart() to fill the uid by 0.\r\n         */\n\n        if (!root.id) {\n          window.splide = window.splide || {};\n          var uid = window.splide[UID_NAME] || 0;\n          window.splide[UID_NAME] = ++uid;\n          root.id = \"splide\" + pad(uid);\n        }\n        /**\r\n         * Elements component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n\n        var Elements = {\n          /**\r\n           * Called when the component is mounted.\r\n           * Collect main elements and store them as member properties.\r\n           */\n          mount: function mount() {\n            var _this = this;\n\n            this.init();\n            Splide.on('refresh', function () {\n              _this.destroy();\n\n              _this.init();\n            }).on('updated', function () {\n              removeClass(root, getClasses());\n              addClass(root, getClasses());\n            });\n          },\n\n          /**\r\n           * Destroy.\r\n           */\n          destroy: function destroy() {\n            Slides.forEach(function (Slide) {\n              Slide.destroy();\n            });\n            Slides = [];\n            removeClass(root, getClasses());\n          },\n\n          /**\r\n           * Initialization.\r\n           */\n          init: function init() {\n            var _this2 = this;\n\n            collect();\n            addClass(root, getClasses());\n            this.slides.forEach(function (slide, index) {\n              _this2.register(slide, index, -1);\n            });\n          },\n\n          /**\r\n           * Register a slide to create a Slide object and handle its behavior.\r\n           *\r\n           * @param {Element} slide     - A slide element.\r\n           * @param {number}  index     - A unique index. This can be negative.\r\n           * @param {number}  realIndex - A real index for clones. Set -1 for real slides.\r\n           */\n          register: function register(slide, index, realIndex) {\n            var SlideObject = elements_slide(Splide, index, realIndex, slide);\n            SlideObject.mount();\n            Slides.push(SlideObject);\n          },\n\n          /**\r\n           * Return the Slide object designated by the index.\r\n           * Note that \"find\" is not supported by IE.\r\n           *\r\n           * @return {Object|undefined} - A Slide object if available. Undefined if not.\r\n           */\n          getSlide: function getSlide(index) {\n            return Slides.filter(function (Slide) {\n              return Slide.index === index;\n            })[0];\n          },\n\n          /**\r\n           * Return all Slide objects.\r\n           *\r\n           * @param {boolean} includeClones - Whether to include cloned slides or not.\r\n           *\r\n           * @return {Object[]} - Slide objects.\r\n           */\n          getSlides: function getSlides(includeClones) {\n            return includeClones ? Slides : Slides.filter(function (Slide) {\n              return !Slide.isClone;\n            });\n          },\n\n          /**\r\n           * Return Slide objects belonging to the given page.\r\n           *\r\n           * @param {number} page - A page number.\r\n           *\r\n           * @return {Object[]} - An array containing Slide objects.\r\n           */\n          getSlidesByPage: function getSlidesByPage(page) {\n            var idx = Components.Controller.toIndex(page);\n            var options = Splide.options;\n            var max = options.focus !== false ? 1 : options.perPage;\n            return Slides.filter(function (_ref) {\n              var index = _ref.index;\n              return idx <= index && index < idx + max;\n            });\n          },\n\n          /**\r\n           * Insert a slide to a slider.\r\n           * Need to refresh Splide after adding a slide.\r\n           *\r\n           * @param {Node|string} slide    - A slide element to be added.\r\n           * @param {number}      index    - A slide will be added at the position.\r\n           * @param {Function}    callback - Called right after the slide is added to the DOM tree.\r\n           */\n          add: function add(slide, index, callback) {\n            if (typeof slide === 'string') {\n              slide = domify(slide);\n            }\n\n            if (slide instanceof Element) {\n              var ref = this.slides[index]; // This will be removed in mount() of a Slide component.\n\n              applyStyle(slide, {\n                display: 'none'\n              });\n\n              if (ref) {\n                before(slide, ref);\n                this.slides.splice(index, 0, slide);\n              } else {\n                append(this.list, slide);\n                this.slides.push(slide);\n              }\n\n              dom_loaded(slide, function () {\n                callback && callback(slide);\n              });\n            }\n          },\n\n          /**\r\n           * Remove a slide from a slider.\r\n           * Need to refresh Splide after removing a slide.\r\n           *\r\n           * @param index - Slide index.\r\n           */\n          remove: function remove(index) {\n            dom_remove(this.slides.splice(index, 1)[0]);\n          },\n\n          /**\r\n           * Trigger the provided callback for each Slide object.\r\n           *\r\n           * @param {Function} callback - A callback function. The first argument will be the Slide object.\r\n           */\n          each: function each(callback) {\n            Slides.forEach(callback);\n          },\n\n          /**\r\n           * Return slides length without clones.\r\n           *\r\n           * @return {number} - Slide length.\r\n           */\n          get length() {\n            return this.slides.length;\n          },\n\n          /**\r\n           * Return \"SlideObjects\" length including clones.\r\n           *\r\n           * @return {number} - Slide length including clones.\r\n           */\n          get total() {\n            return Slides.length;\n          }\n\n        };\n        /**\r\n         * Collect elements.\r\n         */\n\n        function collect() {\n          Elements.slider = child(root, classes.slider);\n          Elements.track = find(root, \".\" + classes.track);\n          Elements.list = child(Elements.track, classes.list);\n          exist(Elements.track && Elements.list, 'Track or list was not found.');\n          Elements.slides = children(Elements.list, classes.slide);\n          var arrows = findParts(classes.arrows);\n          Elements.arrows = {\n            prev: find(arrows, \".\" + classes.prev),\n            next: find(arrows, \".\" + classes.next)\n          };\n          var autoplay = findParts(classes.autoplay);\n          Elements.bar = find(findParts(classes.progress), \".\" + classes.bar);\n          Elements.play = find(autoplay, \".\" + classes.play);\n          Elements.pause = find(autoplay, \".\" + classes.pause);\n          Elements.track.id = Elements.track.id || root.id + \"-track\";\n          Elements.list.id = Elements.list.id || root.id + \"-list\";\n        }\n        /**\r\n         * Return class names for the root element.\r\n         */\n\n\n        function getClasses() {\n          var rootClass = classes.root;\n          var options = Splide.options;\n          return [rootClass + \"--\" + options.type, rootClass + \"--\" + options.direction, options.drag ? rootClass + \"--draggable\" : '', options.isNavigation ? rootClass + \"--nav\" : '', STATUS_CLASSES.active];\n        }\n        /**\r\n         * Find parts only from children of the root or track.\r\n         *\r\n         * @return {Element} - A found element or undefined.\r\n         */\n\n\n        function findParts(className) {\n          return child(root, className) || child(Elements.slider, className);\n        }\n\n        return Elements;\n      }; // CONCATENATED MODULE: ./src/js/components/controller/index.js\n\n      /**\r\n       * The component for controlling the track.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n\n      var floor = Math.floor;\n      /**\r\n       * The component for controlling the track.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var controller = function controller(Splide, Components) {\n        /**\r\n         * Store current options.\r\n         *\r\n         * @type {Object}\r\n         */\n        var options;\n        /**\r\n         * True if the slide is LOOP mode.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isLoop;\n        /**\r\n         * Controller component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Controller = {\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            options = Splide.options;\n            isLoop = Splide.is(LOOP);\n            bind();\n          },\n\n          /**\r\n           * Make track run by the given control.\r\n           * - \"+{i}\" : Increment the slide index by i.\r\n           * - \"-{i}\" : Decrement the slide index by i.\r\n           * - \"{i}\"  : Go to the slide whose index is i.\r\n           * - \">\"    : Go to next page.\r\n           * - \"<\"    : Go to prev page.\r\n           * - \">{i}\" : Go to page i.\r\n           *\r\n           * @param {string|number} control  - A control pattern.\r\n           * @param {boolean}       silently - Go to the destination without event emission.\r\n           */\n          go: function go(control, silently) {\n            var destIndex = this.trim(this.parse(control));\n            Components.Track.go(destIndex, this.rewind(destIndex), silently);\n          },\n\n          /**\r\n           * Parse the given control and return the destination index for the track.\r\n           *\r\n           * @param {string} control - A control target pattern.\r\n           *\r\n           * @return {number} - A parsed target.\r\n           */\n          parse: function parse(control) {\n            var index = Splide.index;\n            var matches = String(control).match(/([+\\-<>]+)(\\d+)?/);\n            var indicator = matches ? matches[1] : '';\n            var number = matches ? parseInt(matches[2]) : 0;\n\n            switch (indicator) {\n              case '+':\n                index += number || 1;\n                break;\n\n              case '-':\n                index -= number || 1;\n                break;\n\n              case '>':\n              case '<':\n                index = parsePage(number, index, indicator === '<');\n                break;\n\n              default:\n                index = parseInt(control);\n            }\n\n            return index;\n          },\n\n          /**\r\n           * Compute index from the given page number.\r\n           *\r\n           * @param {number} page - Page number.\r\n           *\r\n           * @return {number} - A computed page number.\r\n           */\n          toIndex: function toIndex(page) {\n            if (hasFocus()) {\n              return page;\n            }\n\n            var length = Splide.length;\n            var perPage = options.perPage;\n            var index = page * perPage;\n            index = index - (this.pageLength * perPage - length) * floor(index / length); // Adjustment for the last page.\n\n            if (length - perPage <= index && index < length) {\n              index = length - perPage;\n            }\n\n            return index;\n          },\n\n          /**\r\n           * Compute page number from the given slide index.\r\n           *\r\n           * @param {number} index - Slide index.\r\n           *\r\n           * @return {number} - A computed page number.\r\n           */\n          toPage: function toPage(index) {\n            if (hasFocus()) {\n              return index;\n            }\n\n            var length = Splide.length;\n            var perPage = options.perPage; // Make the last \"perPage\" number of slides belong to the last page.\n\n            if (length - perPage <= index && index < length) {\n              return floor((length - 1) / perPage);\n            }\n\n            return floor(index / perPage);\n          },\n\n          /**\r\n           * Trim the given index according to the current mode.\r\n           * Index being returned could be less than 0 or greater than the length in Loop mode.\r\n           *\r\n           * @param {number} index - An index being trimmed.\r\n           *\r\n           * @return {number} - A trimmed index.\r\n           */\n          trim: function trim(index) {\n            if (!isLoop) {\n              index = options.rewind ? this.rewind(index) : between(index, 0, this.edgeIndex);\n            }\n\n            return index;\n          },\n\n          /**\r\n           * Rewind the given index if it's out of range.\r\n           *\r\n           * @param {number} index - An index.\r\n           *\r\n           * @return {number} - A rewound index.\r\n           */\n          rewind: function rewind(index) {\n            var edge = this.edgeIndex;\n\n            if (isLoop) {\n              while (index > edge) {\n                index -= edge + 1;\n              }\n\n              while (index < 0) {\n                index += edge + 1;\n              }\n            } else {\n              if (index > edge) {\n                index = 0;\n              } else if (index < 0) {\n                index = edge;\n              }\n            }\n\n            return index;\n          },\n\n          /**\r\n           * Check if the direction is \"rtl\" or not.\r\n           *\r\n           * @return {boolean} - True if \"rtl\" or false if not.\r\n           */\n          isRtl: function isRtl() {\n            return options.direction === RTL;\n          },\n\n          /**\r\n           * Return the page length.\r\n           *\r\n           * @return {number} - Max page number.\r\n           */\n          get pageLength() {\n            var length = Splide.length;\n            return hasFocus() ? length : Math.ceil(length / options.perPage);\n          },\n\n          /**\r\n           * Return the edge index.\r\n           *\r\n           * @return {number} - Edge index.\r\n           */\n          get edgeIndex() {\n            var length = Splide.length;\n\n            if (!length) {\n              return 0;\n            }\n\n            if (hasFocus() || options.isNavigation || isLoop) {\n              return length - 1;\n            }\n\n            return length - options.perPage;\n          },\n\n          /**\r\n           * Return the index of the previous slide.\r\n           *\r\n           * @return {number} - The index of the previous slide if available. -1 otherwise.\r\n           */\n          get prevIndex() {\n            var prev = Splide.index - 1;\n\n            if (isLoop || options.rewind) {\n              prev = this.rewind(prev);\n            }\n\n            return prev > -1 ? prev : -1;\n          },\n\n          /**\r\n           * Return the index of the next slide.\r\n           *\r\n           * @return {number} - The index of the next slide if available. -1 otherwise.\r\n           */\n          get nextIndex() {\n            var next = Splide.index + 1;\n\n            if (isLoop || options.rewind) {\n              next = this.rewind(next);\n            }\n\n            return Splide.index < next && next <= this.edgeIndex || next === 0 ? next : -1;\n          }\n\n        };\n        /**\r\n         * Listen to some events.\r\n         */\n\n        function bind() {\n          Splide.on('move', function (newIndex) {\n            Splide.index = newIndex;\n          }).on('updated refresh', function (newOptions) {\n            options = newOptions || options;\n            Splide.index = between(Splide.index, 0, Controller.edgeIndex);\n          });\n        }\n        /**\r\n         * Verify if the focus option is available or not.\r\n         *\r\n         * @return {boolean} - True if a slider has the focus option.\r\n         */\n\n\n        function hasFocus() {\n          return options.focus !== false;\n        }\n        /**\r\n         * Return the next or previous page index computed by the page number and current index.\r\n         *\r\n         * @param {number}  number - Specify the page number.\r\n         * @param {number}  index  - Current index.\r\n         * @param {boolean} prev   - Prev or next.\r\n         *\r\n         * @return {number} - Slide index.\r\n         */\n\n\n        function parsePage(number, index, prev) {\n          if (number > -1) {\n            return Controller.toIndex(number);\n          }\n\n          var perMove = options.perMove;\n          var sign = prev ? -1 : 1;\n\n          if (perMove) {\n            return index + perMove * sign;\n          }\n\n          return Controller.toIndex(Controller.toPage(index) + sign);\n        }\n\n        return Controller;\n      }; // CONCATENATED MODULE: ./src/js/components/track/index.js\n\n      /**\r\n       * The component for moving list in the track.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n\n      var abs = Math.abs;\n      /**\r\n       * The component for moving list in the track.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var components_track = function components_track(Splide, Components) {\n        /**\r\n         * Hold the Layout component.\r\n         *\r\n         * @type {Object}\r\n         */\n        var Layout;\n        /**\r\n         * Hold the Layout component.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Elements;\n        /**\r\n         * Store the list element.\r\n         *\r\n         * @type {Element}\r\n         */\n\n        var list;\n        /**\r\n         * Whether the current direction is vertical or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isVertical = Splide.options.direction === TTB;\n        /**\r\n         * Whether the slider type is FADE or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isFade = Splide.is(FADE);\n        /**\r\n         * Whether the slider direction is RTL or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isRTL = Splide.options.direction === RTL;\n        /**\r\n         * This will be true while transitioning from the last index to the first one.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isLoopPending = false;\n        /**\r\n         * Sign for the direction. Only RTL mode uses the positive sign.\r\n         *\r\n         * @type {number}\r\n         */\n\n        var sign = isRTL ? 1 : -1;\n        /**\r\n         * Track component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Track = {\n          /**\r\n           * Make public the sign defined locally.\r\n           *\r\n           * @type {number}\r\n           */\n          sign: sign,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            Elements = Components.Elements;\n            Layout = Components.Layout;\n            list = Elements.list;\n          },\n\n          /**\r\n           * Called after the component is mounted.\r\n           * The resize event must be registered after the Layout's one is done.\r\n           */\n          mounted: function mounted() {\n            var _this = this;\n\n            if (!isFade) {\n              this.jump(0);\n              Splide.on('mounted resize updated', function () {\n                _this.jump(Splide.index);\n              });\n            }\n          },\n\n          /**\r\n           * Go to the given destination index.\r\n           * After arriving there, the track is jump to the new index without animation, mainly for loop mode.\r\n           *\r\n           * @param {number}  destIndex - A destination index.\r\n           *                              This can be negative or greater than slides length for reaching clones.\r\n           * @param {number}  newIndex  - An actual new index. They are always same in Slide and Rewind mode.\r\n           * @param {boolean} silently  - If true, suppress emitting events.\r\n           */\n          go: function go(destIndex, newIndex, silently) {\n            var newPosition = getTrimmedPosition(destIndex);\n            var prevIndex = Splide.index; // Prevent any actions while transitioning from the last index to the first one for jump.\n\n            if (Splide.State.is(MOVING) && isLoopPending) {\n              return;\n            }\n\n            isLoopPending = destIndex !== newIndex;\n\n            if (!silently) {\n              Splide.emit('move', newIndex, prevIndex, destIndex);\n            }\n\n            if (Math.abs(newPosition - this.position) >= 1 || isFade) {\n              Components.Transition.start(destIndex, newIndex, prevIndex, this.toCoord(newPosition), function () {\n                onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n              });\n            } else {\n              if (destIndex !== prevIndex && Splide.options.trimSpace === 'move') {\n                Components.Controller.go(destIndex + destIndex - prevIndex, silently);\n              } else {\n                onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n              }\n            }\n          },\n\n          /**\r\n           * Move the track to the specified index.\r\n           *\r\n           * @param {number} index - A destination index where the track jumps.\r\n           */\n          jump: function jump(index) {\n            this.translate(getTrimmedPosition(index));\n          },\n\n          /**\r\n           * Set the list position by CSS translate property.\r\n           *\r\n           * @param {number} position - A new position value.\r\n           */\n          translate: function translate(position) {\n            applyStyle(list, {\n              transform: \"translate\" + (isVertical ? 'Y' : 'X') + \"(\" + position + \"px)\"\n            });\n          },\n\n          /**\r\n           * Cancel the transition and set the list position.\r\n           * Also, loop the slider if necessary.\r\n           */\n          cancel: function cancel() {\n            if (Splide.is(LOOP)) {\n              this.shift();\n            } else {\n              // Ensure the current position.\n              this.translate(this.position);\n            }\n\n            applyStyle(list, {\n              transition: ''\n            });\n          },\n\n          /**\r\n           * Shift the slider if it exceeds borders on the edge.\r\n           */\n          shift: function shift() {\n            var position = abs(this.position);\n            var left = abs(this.toPosition(0));\n            var right = abs(this.toPosition(Splide.length));\n            var innerSize = right - left;\n\n            if (position < left) {\n              position += innerSize;\n            } else if (position > right) {\n              position -= innerSize;\n            }\n\n            this.translate(sign * position);\n          },\n\n          /**\r\n           * Trim redundant spaces on the left or right edge if necessary.\r\n           *\r\n           * @param {number} position - Position value to be trimmed.\r\n           *\r\n           * @return {number} - Trimmed position.\r\n           */\n          trim: function trim(position) {\n            if (!Splide.options.trimSpace || Splide.is(LOOP)) {\n              return position;\n            }\n\n            var edge = sign * (Layout.totalSize() - Layout.size - Layout.gap);\n            return between(position, edge, 0);\n          },\n\n          /**\r\n           * Calculate the closest slide index from the given position.\r\n           *\r\n           * @param {number} position - A position converted to an slide index.\r\n           *\r\n           * @return {number} - The closest slide index.\r\n           */\n          toIndex: function toIndex(position) {\n            var _this2 = this;\n\n            var index = 0;\n            var minDistance = Infinity;\n            Elements.getSlides(true).forEach(function (Slide) {\n              var slideIndex = Slide.index;\n              var distance = abs(_this2.toPosition(slideIndex) - position);\n\n              if (distance < minDistance) {\n                minDistance = distance;\n                index = slideIndex;\n              }\n            });\n            return index;\n          },\n\n          /**\r\n           * Return coordinates object by the given position.\r\n           *\r\n           * @param {number} position - A position value.\r\n           *\r\n           * @return {Object} - A coordinates object.\r\n           */\n          toCoord: function toCoord(position) {\n            return {\n              x: isVertical ? 0 : position,\n              y: isVertical ? position : 0\n            };\n          },\n\n          /**\r\n           * Calculate the track position by a slide index.\r\n           *\r\n           * @param {number} index - Slide index.\r\n           *\r\n           * @return {Object} - Calculated position.\r\n           */\n          toPosition: function toPosition(index) {\n            var position = Layout.totalSize(index) - Layout.slideSize(index) - Layout.gap;\n            return sign * (position + this.offset(index));\n          },\n\n          /**\r\n           * Return the current offset value, considering direction.\r\n           *\r\n           * @return {number} - Offset amount.\r\n           */\n          offset: function offset(index) {\n            var focus = Splide.options.focus;\n            var slideSize = Layout.slideSize(index);\n\n            if (focus === 'center') {\n              return -(Layout.size - slideSize) / 2;\n            }\n\n            return -(parseInt(focus) || 0) * (slideSize + Layout.gap);\n          },\n\n          /**\r\n           * Return the current position.\r\n           * This returns the correct position even while transitioning by CSS.\r\n           *\r\n           * @return {number} - Current position.\r\n           */\n          get position() {\n            var prop = isVertical ? 'top' : isRTL ? 'right' : 'left';\n            return getRect(list)[prop] - (getRect(Elements.track)[prop] - Layout.padding[prop] * sign);\n          }\n\n        };\n        /**\r\n         * Called whenever slides arrive at a destination.\r\n         *\r\n         * @param {number}  destIndex - A destination index.\r\n         * @param {number}  newIndex  - A new index.\r\n         * @param {number}  prevIndex - A previous index.\r\n         * @param {boolean} silently  - If true, suppress emitting events.\r\n         */\n\n        function onTransitionEnd(destIndex, newIndex, prevIndex, silently) {\n          applyStyle(list, {\n            transition: ''\n          });\n          isLoopPending = false;\n\n          if (!isFade) {\n            Track.jump(newIndex);\n          }\n\n          if (!silently) {\n            Splide.emit('moved', newIndex, prevIndex, destIndex);\n          }\n        }\n        /**\r\n         * Convert index to the trimmed position.\r\n         *\r\n         * @return {number} - Trimmed position.\r\n         */\n\n\n        function getTrimmedPosition(index) {\n          return Track.trim(Track.toPosition(index));\n        }\n\n        return Track;\n      }; // CONCATENATED MODULE: ./src/js/components/clones/index.js\n\n      /**\r\n       * The component for cloning some slides for \"loop\" mode of the track.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for cloning some slides for \"loop\" mode of the track.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n\n      var components_clones = function components_clones(Splide, Components) {\n        /**\r\n         * Store information of all clones.\r\n         *\r\n         * @type {Array}\r\n         */\n        var clones = [];\n        /**\r\n         * Store the current clone count on one side.\r\n         *\r\n         * @type {number}\r\n         */\n\n        var cloneCount = 0;\n        /**\r\n         * Keep Elements component.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Elements = Components.Elements;\n        /**\r\n         * Clones component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Clones = {\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            var _this = this;\n\n            if (Splide.is(LOOP)) {\n              init();\n              Splide.on('refresh', init).on('resize', function () {\n                if (cloneCount !== getCloneCount()) {\n                  // Destroy before refresh not to collect clones by the Elements component.\n                  _this.destroy();\n\n                  Splide.refresh();\n                }\n              });\n            }\n          },\n\n          /**\r\n           * Destroy.\r\n           */\n          destroy: function destroy() {\n            dom_remove(clones);\n            clones = [];\n          },\n\n          /**\r\n           * Return all clones.\r\n           *\r\n           * @return {Element[]} - Cloned elements.\r\n           */\n          get clones() {\n            return clones;\n          },\n\n          /**\r\n           * Return clone length.\r\n           *\r\n           * @return {number} - A length of clones.\r\n           */\n          get length() {\n            return clones.length;\n          }\n\n        };\n        /**\r\n         * Initialization.\r\n         */\n\n        function init() {\n          Clones.destroy();\n          cloneCount = getCloneCount();\n          generateClones(cloneCount);\n        }\n        /**\r\n         * Generate and append/prepend clones.\r\n         *\r\n         * @param {number} count - The half number of clones.\r\n         */\n\n\n        function generateClones(count) {\n          var length = Elements.length,\n              register = Elements.register;\n\n          if (length) {\n            var slides = Elements.slides;\n\n            while (slides.length < count) {\n              slides = slides.concat(slides);\n            } // Clones after the last element.\n\n\n            slides.slice(0, count).forEach(function (elm, index) {\n              var clone = cloneDeeply(elm);\n              append(Elements.list, clone);\n              clones.push(clone);\n              register(clone, index + length, index % length);\n            }); // Clones before the first element.\n\n            slides.slice(-count).forEach(function (elm, index) {\n              var clone = cloneDeeply(elm);\n              before(clone, slides[0]);\n              clones.push(clone);\n              register(clone, index - count, (length + index - count % length) % length);\n            });\n          }\n        }\n        /**\r\n         * Return half count of clones to be generated.\r\n         * Clone count is determined by:\r\n         * - \"clones\" value in the options.\r\n         * - Number of slides that can be placed in a view in \"fixed\" mode.\r\n         * - Max pages a flick action can move.\r\n         * - Whether the slide length is enough for perPage.\r\n         *\r\n         * @return {number} - Count for clones.\r\n         */\n\n\n        function getCloneCount() {\n          var options = Splide.options;\n\n          if (options.clones) {\n            return options.clones;\n          } // Use the slide length in autoWidth mode because the number cannot be calculated.\n\n\n          var baseCount = options.autoWidth || options.autoHeight ? Elements.length : options.perPage;\n          var dimension = options.direction === TTB ? 'Height' : 'Width';\n          var fixedSize = toPixel(Splide.root, options[\"fixed\" + dimension]);\n\n          if (fixedSize) {\n            // Roughly calculate the count. This needs not to be strict.\n            baseCount = Math.ceil(Elements.track[\"client\" + dimension] / fixedSize);\n          }\n\n          return baseCount * (options.drag ? options.flickMaxPages + 1 : 1);\n        }\n        /**\r\n         * Clone deeply the given element.\r\n         *\r\n         * @param {Element} elm - An element being duplicated.\r\n         *\r\n         * @return {Node} - A cloned node(element).\r\n         */\n\n\n        function cloneDeeply(elm) {\n          var clone = elm.cloneNode(true);\n          addClass(clone, Splide.classes.clone); // ID should not be duplicated.\n\n          removeAttribute(clone, 'id');\n          return clone;\n        }\n\n        return Clones;\n      }; // CONCATENATED MODULE: ./src/js/components/layout/directions/horizontal.js\n\n      /**\r\n       * The resolver component for horizontal layout.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The resolver component for horizontal layout.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The resolver object.\r\n       */\n\n      /* harmony default export */\n\n\n      var horizontal = function horizontal(Splide, Components) {\n        /**\r\n         * Keep the Elements component.\r\n         *\r\n         * @type {string}\r\n         */\n        var Elements = Components.Elements;\n        /**\r\n         * Keep the root element.\r\n         *\r\n         * @type {Element}\r\n         */\n\n        var root = Splide.root;\n        /**\r\n         * Keep the track element.\r\n         *\r\n         * @type {Element}\r\n         */\n\n        var track;\n        /**\r\n         * Keep the latest options.\r\n         *\r\n         * @type {Element}\r\n         */\n\n        var options = Splide.options;\n        return {\n          /**\r\n           * Margin property name.\r\n           *\r\n           * @type {string}\r\n           */\n          margin: 'margin' + (options.direction === RTL ? 'Left' : 'Right'),\n\n          /**\r\n           * Always 0 because the height will be determined by inner contents.\r\n           *\r\n           * @type {number}\r\n           */\n          height: 0,\n\n          /**\r\n           * Initialization.\r\n           */\n          init: function init() {\n            this.resize();\n          },\n\n          /**\r\n           * Resize gap and padding.\r\n           * This must be called on init.\r\n           */\n          resize: function resize() {\n            options = Splide.options;\n            track = Elements.track;\n            this.gap = toPixel(root, options.gap);\n            var padding = options.padding;\n            var left = toPixel(root, padding.left || padding);\n            var right = toPixel(root, padding.right || padding);\n            this.padding = {\n              left: left,\n              right: right\n            };\n            applyStyle(track, {\n              paddingLeft: unit(left),\n              paddingRight: unit(right)\n            });\n          },\n\n          /**\r\n           * Return total width from the left of the list to the right of the slide specified by the provided index.\r\n           *\r\n           * @param {number} index - Optional. A slide index. If undefined, total width of the slider will be returned.\r\n           *\r\n           * @return {number} - Total width to the right side of the specified slide, or 0 for an invalid index.\r\n           */\n          totalWidth: function totalWidth(index) {\n            if (index === void 0) {\n              index = Splide.length - 1;\n            }\n\n            var Slide = Elements.getSlide(index);\n            var width = 0;\n\n            if (Slide) {\n              var slideRect = getRect(Slide.slide);\n              var listRect = getRect(Elements.list);\n\n              if (options.direction === RTL) {\n                width = listRect.right - slideRect.left;\n              } else {\n                width = slideRect.right - listRect.left;\n              }\n\n              width += this.gap;\n            }\n\n            return width;\n          },\n\n          /**\r\n           * Return the slide width in px.\r\n           *\r\n           * @param {number} index - Slide index.\r\n           *\r\n           * @return {number} - The slide width.\r\n           */\n          slideWidth: function slideWidth(index) {\n            if (options.autoWidth) {\n              var Slide = Elements.getSlide(index);\n              return Slide ? Slide.slide.offsetWidth : 0;\n            }\n\n            var width = options.fixedWidth || (this.width + this.gap) / options.perPage - this.gap;\n            return toPixel(root, width);\n          },\n\n          /**\r\n           * Return the slide height in px.\r\n           *\r\n           * @return {number} - The slide height.\r\n           */\n          slideHeight: function slideHeight() {\n            var height = options.height || options.fixedHeight || this.width * options.heightRatio;\n            return toPixel(root, height);\n          },\n\n          /**\r\n           * Return slider width without padding.\r\n           *\r\n           * @return {number} - Current slider width.\r\n           */\n          get width() {\n            return track.clientWidth - this.padding.left - this.padding.right;\n          }\n\n        };\n      }; // CONCATENATED MODULE: ./src/js/components/layout/directions/vertical.js\n\n      /**\r\n       * The resolver component for vertical layout.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The resolver component for vertical layout.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The resolver object.\r\n       */\n\n      /* harmony default export */\n\n\n      var vertical = function vertical(Splide, Components) {\n        /**\r\n         * Keep the Elements component.\r\n         *\r\n         * @type {string}\r\n         */\n        var Elements = Components.Elements;\n        /**\r\n         * Keep the root element.\r\n         *\r\n         * @type {Element}\r\n         */\n\n        var root = Splide.root;\n        /**\r\n         * Keep the track element.\r\n         *\r\n         * @type {Element}\r\n         */\n\n        var track;\n        /**\r\n         * Keep the latest options.\r\n         *\r\n         * @type {Element}\r\n         */\n\n        var options;\n        return {\n          /**\r\n           * Margin property name.\r\n           *\r\n           * @type {string}\r\n           */\n          margin: 'marginBottom',\n\n          /**\r\n           * Initialization.\r\n           */\n          init: function init() {\n            this.resize();\n          },\n\n          /**\r\n           * Resize gap and padding.\r\n           * This must be called on init.\r\n           */\n          resize: function resize() {\n            options = Splide.options;\n            track = Elements.track;\n            this.gap = toPixel(root, options.gap);\n            var padding = options.padding;\n            var top = toPixel(root, padding.top || padding);\n            var bottom = toPixel(root, padding.bottom || padding);\n            this.padding = {\n              top: top,\n              bottom: bottom\n            };\n            applyStyle(track, {\n              paddingTop: unit(top),\n              paddingBottom: unit(bottom)\n            });\n          },\n\n          /**\r\n           * Return total height from the top of the list to the bottom of the slide specified by the provided index.\r\n           *\r\n           * @param {number} index - Optional. A slide index. If undefined, total height of the slider will be returned.\r\n           *\r\n           * @return {number} - Total height to the bottom of the specified slide, or 0 for an invalid index.\r\n           */\n          totalHeight: function totalHeight(index) {\n            if (index === void 0) {\n              index = Splide.length - 1;\n            }\n\n            var Slide = Elements.getSlide(index);\n\n            if (Slide) {\n              return getRect(Slide.slide).bottom - getRect(Elements.list).top + this.gap;\n            }\n\n            return 0;\n          },\n\n          /**\r\n           * Return the slide width in px.\r\n           *\r\n           * @return {number} - The slide width.\r\n           */\n          slideWidth: function slideWidth() {\n            return toPixel(root, options.fixedWidth || this.width);\n          },\n\n          /**\r\n           * Return the slide height in px.\r\n           *\r\n           * @param {number} index - Slide index.\r\n           *\r\n           * @return {number} - The slide height.\r\n           */\n          slideHeight: function slideHeight(index) {\n            if (options.autoHeight) {\n              var Slide = Elements.getSlide(index);\n              return Slide ? Slide.slide.offsetHeight : 0;\n            }\n\n            var height = options.fixedHeight || (this.height + this.gap) / options.perPage - this.gap;\n            return toPixel(root, height);\n          },\n\n          /**\r\n           * Return slider width without padding.\r\n           *\r\n           * @return {number} - Current slider width.\r\n           */\n          get width() {\n            return track.clientWidth;\n          },\n\n          /**\r\n           * Return slide height without padding.\r\n           *\r\n           * @return {number} - Slider height.\r\n           */\n          get height() {\n            var height = options.height || this.width * options.heightRatio;\n            exist(height, '\"height\" or \"heightRatio\" is missing.');\n            return toPixel(root, height) - this.padding.top - this.padding.bottom;\n          }\n\n        };\n      }; // CONCATENATED MODULE: ./src/js/utils/time.js\n\n      /**\r\n       * A package of utility functions related with time.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Simple throttle function that controls how often the given function is executed.\r\n       *\r\n       * @param {function} func - A function to be throttled.\r\n       * @param {number}   wait - Time in millisecond for interval of execution.\r\n       *\r\n       * @return {Function} - A debounced function.\r\n       */\n\n\n      function throttle(func, wait) {\n        var timeout; // Declare function by the \"function\" keyword to prevent \"this\" from being inherited.\n\n        return function () {\n          if (!timeout) {\n            timeout = setTimeout(function () {\n              func();\n              timeout = null;\n            }, wait);\n          }\n        };\n      }\n      /**\r\n       * Custom setInterval function that provides progress rate as callback.\r\n       *\r\n       * @param {function} callback - A callback function fired every time the interval time passes.\r\n       * @param {number}   interval - Interval duration in milliseconds.\r\n       * @param {function} progress - A callback function fired whenever the progress goes.\r\n       *\r\n       * @return {Object} - An object containing play() and pause() functions.\r\n       */\n\n\n      function createInterval(callback, interval, progress) {\n        var _window = window,\n            requestAnimationFrame = _window.requestAnimationFrame;\n        var start,\n            elapse,\n            rate,\n            _pause = true;\n\n        var step = function step(timestamp) {\n          if (!_pause) {\n            if (!start) {\n              start = timestamp;\n\n              if (rate && rate < 1) {\n                start -= rate * interval;\n              }\n            }\n\n            elapse = timestamp - start;\n            rate = elapse / interval;\n\n            if (elapse >= interval) {\n              start = 0;\n              rate = 1;\n              callback();\n            }\n\n            if (progress) {\n              progress(rate);\n            }\n\n            requestAnimationFrame(step);\n          }\n        };\n\n        return {\n          pause: function pause() {\n            _pause = true;\n            start = 0;\n          },\n          play: function play(reset) {\n            start = 0;\n\n            if (_pause) {\n              _pause = false;\n\n              if (reset) {\n                rate = 0;\n              }\n\n              requestAnimationFrame(step);\n            }\n          }\n        };\n      } // CONCATENATED MODULE: ./src/js/components/layout/index.js\n\n      /**\r\n       * The component for handing slide layouts and their sizes.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for handing slide layouts and their sizes.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n\n      var layout = function layout(Splide, Components) {\n        /**\r\n         * Keep the Elements component.\r\n         *\r\n         * @type {string}\r\n         */\n        var Elements = Components.Elements;\n        /**\r\n         * Whether the slider is vertical or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isVertical = Splide.options.direction === TTB;\n        /**\r\n         * Layout component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Layout = object_assign({\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            bind();\n            init(); // The word \"size\" means width for a horizontal slider and height for a vertical slider.\n\n            this.totalSize = isVertical ? this.totalHeight : this.totalWidth;\n            this.slideSize = isVertical ? this.slideHeight : this.slideWidth;\n          },\n\n          /**\r\n           * Destroy the component.\r\n           */\n          destroy: function destroy() {\n            removeAttribute([Elements.list, Elements.track], 'style');\n          },\n\n          /**\r\n           * Return the slider height on the vertical mode or width on the horizontal mode.\r\n           *\r\n           * @return {number}\r\n           */\n          get size() {\n            return isVertical ? this.height : this.width;\n          }\n\n        }, isVertical ? vertical(Splide, Components) : horizontal(Splide, Components));\n        /**\r\n         * Init slider styles according to options.\r\n         */\n\n        function init() {\n          Layout.init();\n          applyStyle(Splide.root, {\n            maxWidth: unit(Splide.options.width)\n          });\n          Elements.each(function (Slide) {\n            Slide.slide.style[Layout.margin] = unit(Layout.gap);\n          });\n          resize();\n        }\n        /**\r\n         * Listen the resize native event with throttle.\r\n         * Initialize when the component is mounted or options are updated.\r\n         */\n\n\n        function bind() {\n          Splide.on('resize load', throttle(function () {\n            Splide.emit('resize');\n          }, Splide.options.throttle), window).on('resize', resize).on('updated refresh', init);\n        }\n        /**\r\n         * Resize the track and slide elements.\r\n         */\n\n\n        function resize() {\n          var options = Splide.options;\n          Layout.resize();\n          applyStyle(Elements.track, {\n            height: unit(Layout.height)\n          });\n          var slideHeight = options.autoHeight ? null : unit(Layout.slideHeight());\n          Elements.each(function (Slide) {\n            applyStyle(Slide.container, {\n              height: slideHeight\n            });\n            applyStyle(Slide.slide, {\n              width: options.autoWidth ? null : unit(Layout.slideWidth(Slide.index)),\n              height: Slide.container ? null : slideHeight\n            });\n          });\n        }\n\n        return Layout;\n      }; // CONCATENATED MODULE: ./src/js/components/drag/index.js\n\n      /**\r\n       * The component for supporting mouse drag and swipe.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n\n      var drag_abs = Math.abs;\n      /**\r\n       * If the absolute velocity is greater thant this value,\r\n       * a slider always goes to a different slide after drag, not allowed to stay on a current slide.\r\n       */\n\n      var MIN_VELOCITY = 0.1;\n      /**\r\n       * Adjust how much the track can be pulled on the first or last page.\r\n       * The larger number this is, the farther the track moves.\r\n       * This should be around 5 - 9.\r\n       *\r\n       * @type {number}\r\n       */\n\n      var FRICTION_REDUCER = 7;\n      /**\r\n       * The component supporting mouse drag and swipe.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var drag = function drag(Splide, Components) {\n        /**\r\n         * Store the Move component.\r\n         *\r\n         * @type {Object}\r\n         */\n        var Track = Components.Track;\n        /**\r\n         * Store the Controller component.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Controller = Components.Controller;\n        /**\r\n         * Coordinate of the track on starting drag.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var startCoord;\n        /**\r\n         * Analyzed info on starting drag.\r\n         *\r\n         * @type {Object|null}\r\n         */\n\n        var startInfo;\n        /**\r\n         * Analyzed info being updated while dragging/swiping.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var currentInfo;\n        /**\r\n         * Determine whether slides are being dragged or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isDragging;\n        /**\r\n         * Whether the slider direction is vertical or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isVertical = Splide.options.direction === TTB;\n        /**\r\n         * Axis for the direction.\r\n         *\r\n         * @type {string}\r\n         */\n\n        var axis = isVertical ? 'y' : 'x';\n        /**\r\n         * Drag component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Drag = {\n          /**\r\n           * Whether dragging is disabled or not.\r\n           *\r\n           * @type {boolean}\r\n           */\n          disabled: false,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            var _this = this;\n\n            var Elements = Components.Elements;\n            var track = Elements.track;\n            Splide.on('touchstart mousedown', start, track).on('touchmove mousemove', move, track, {\n              passive: false\n            }).on('touchend touchcancel mouseleave mouseup dragend', end, track).on('mounted refresh', function () {\n              // Prevent dragging an image or anchor itself.\n              each(Elements.list.querySelectorAll('img, a'), function (elm) {\n                Splide.off('dragstart', elm).on('dragstart', function (e) {\n                  e.preventDefault();\n                }, elm, {\n                  passive: false\n                });\n              });\n            }).on('mounted updated', function () {\n              _this.disabled = !Splide.options.drag;\n            });\n          }\n        };\n        /**\r\n         * Called when the track starts to be dragged.\r\n         *\r\n         * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n         */\n\n        function start(e) {\n          if (!Drag.disabled && !isDragging) {\n            // These prams are used to evaluate whether the slider should start moving.\n            init(e);\n          }\n        }\n        /**\r\n         * Initialize parameters.\r\n         *\r\n         * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n         */\n\n\n        function init(e) {\n          startCoord = Track.toCoord(Track.position);\n          startInfo = analyze(e, {});\n          currentInfo = startInfo;\n        }\n        /**\r\n         * Called while the track being dragged.\r\n         *\r\n         * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n         */\n\n\n        function move(e) {\n          if (startInfo) {\n            currentInfo = analyze(e, startInfo);\n\n            if (isDragging) {\n              if (e.cancelable) {\n                e.preventDefault();\n              }\n\n              if (!Splide.is(FADE)) {\n                var position = startCoord[axis] + currentInfo.offset[axis];\n                Track.translate(resist(position));\n              }\n            } else {\n              if (shouldMove(currentInfo)) {\n                Splide.emit('drag', startInfo);\n                isDragging = true;\n                Track.cancel(); // These params are actual drag data.\n\n                init(e);\n              }\n            }\n          }\n        }\n        /**\r\n         * Determine whether to start moving the track or not by drag angle.\r\n         *\r\n         * @param {Object} info - An information object.\r\n         *\r\n         * @return {boolean} - True if the track should be moved or false if not.\r\n         */\n\n\n        function shouldMove(_ref) {\n          var offset = _ref.offset;\n\n          if (Splide.State.is(MOVING) && Splide.options.waitForTransition) {\n            return false;\n          }\n\n          var angle = Math.atan(drag_abs(offset.y) / drag_abs(offset.x)) * 180 / Math.PI;\n\n          if (isVertical) {\n            angle = 90 - angle;\n          }\n\n          return angle < Splide.options.dragAngleThreshold;\n        }\n        /**\r\n         * Resist dragging the track on the first/last page because there is no more.\r\n         *\r\n         * @param {number} position - A position being applied to the track.\r\n         *\r\n         * @return {Object} - Adjusted position.\r\n         */\n\n\n        function resist(position) {\n          if (Splide.is(SLIDE)) {\n            var sign = Track.sign;\n\n            var _start = sign * Track.trim(Track.toPosition(0));\n\n            var _end = sign * Track.trim(Track.toPosition(Controller.edgeIndex));\n\n            position *= sign;\n\n            if (position < _start) {\n              position = _start - FRICTION_REDUCER * Math.log(_start - position);\n            } else if (position > _end) {\n              position = _end + FRICTION_REDUCER * Math.log(position - _end);\n            }\n\n            position *= sign;\n          }\n\n          return position;\n        }\n        /**\r\n         * Called when dragging ends.\r\n         */\n\n\n        function end() {\n          startInfo = null;\n\n          if (isDragging) {\n            Splide.emit('dragged', currentInfo);\n            go(currentInfo);\n            isDragging = false;\n          }\n        }\n        /**\r\n         * Go to the slide determined by the analyzed data.\r\n         *\r\n         * @param {Object} info - An info object.\r\n         */\n\n\n        function go(info) {\n          var velocity = info.velocity[axis];\n          var absV = drag_abs(velocity);\n\n          if (absV > 0) {\n            var options = Splide.options;\n            var index = Splide.index;\n            var sign = velocity < 0 ? -1 : 1;\n            var destIndex = index;\n\n            if (!Splide.is(FADE)) {\n              var destination = Track.position;\n\n              if (absV > options.flickVelocityThreshold && drag_abs(info.offset[axis]) < options.swipeDistanceThreshold) {\n                destination += sign * Math.min(absV * options.flickPower, Components.Layout.size * (options.flickMaxPages || 1));\n              }\n\n              destIndex = Track.toIndex(destination);\n            }\n            /*\r\n             * Do not allow the track to go to a previous position if there is enough velocity.\r\n             * Always use the adjacent index for the fade mode.\r\n             */\n\n\n            if (destIndex === index && absV > MIN_VELOCITY) {\n              destIndex = index + sign * Track.sign;\n            }\n\n            if (Splide.is(SLIDE)) {\n              destIndex = between(destIndex, 0, Controller.edgeIndex);\n            }\n\n            Controller.go(destIndex, options.isNavigation);\n          }\n        }\n        /**\r\n         * Analyze the given event object and return important information for handling swipe behavior.\r\n         *\r\n         * @param {Event}   e          - Touch or Mouse event object.\r\n         * @param {Object}  startInfo  - Information analyzed on start for calculating difference from the current one.\r\n         *\r\n         * @return {Object} - An object containing analyzed information, such as offset, velocity, etc.\r\n         */\n\n\n        function analyze(e, startInfo) {\n          var timeStamp = e.timeStamp,\n              touches = e.touches;\n\n          var _ref2 = touches ? touches[0] : e,\n              clientX = _ref2.clientX,\n              clientY = _ref2.clientY;\n\n          var _ref3 = startInfo.to || {},\n              _ref3$x = _ref3.x,\n              fromX = _ref3$x === void 0 ? clientX : _ref3$x,\n              _ref3$y = _ref3.y,\n              fromY = _ref3$y === void 0 ? clientY : _ref3$y;\n\n          var startTime = startInfo.time || 0;\n          var offset = {\n            x: clientX - fromX,\n            y: clientY - fromY\n          };\n          var duration = timeStamp - startTime;\n          var velocity = {\n            x: offset.x / duration,\n            y: offset.y / duration\n          };\n          return {\n            to: {\n              x: clientX,\n              y: clientY\n            },\n            offset: offset,\n            time: timeStamp,\n            velocity: velocity\n          };\n        }\n\n        return Drag;\n      }; // CONCATENATED MODULE: ./src/js/components/click/index.js\n\n      /**\r\n       * The component for handling a click event.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for handling a click event.\r\n       * Click should be disabled during drag/swipe.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n\n      var click = function click(Splide, Components) {\n        /**\r\n         * Whether click is disabled or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n        var disabled = false;\n        /**\r\n         * Click component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Click = {\n          /**\r\n           * Mount only when the drag is activated and the slide type is not \"fade\".\r\n           *\r\n           * @type {boolean}\r\n           */\n          required: Splide.options.drag,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            Splide.on('click', onClick, Components.Elements.track, {\n              capture: true\n            }).on('drag', function () {\n              disabled = true;\n            }).on('moved', function () {\n              disabled = false;\n            });\n          }\n        };\n        /**\r\n         * Called when a track element is clicked.\r\n         *\r\n         * @param {Event} e - A click event.\r\n         */\n\n        function onClick(e) {\n          if (disabled) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n          }\n        }\n\n        return Click;\n      }; // CONCATENATED MODULE: ./src/js/components/autoplay/index.js\n\n      /**\r\n       * The component for playing slides automatically.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Set of pause flags.\r\n       */\n\n\n      var PAUSE_FLAGS = {\n        HOVER: 1,\n        FOCUS: 2,\n        MANUAL: 3\n      };\n      /**\r\n       * The component for playing slides automatically.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       * @param {string} name       - A component name as a lowercase string.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var components_autoplay = function components_autoplay(Splide, Components, name) {\n        /**\r\n         * Store pause flags.\r\n         *\r\n         * @type {Array}\r\n         */\n        var flags = [];\n        /**\r\n         * Store an interval object.\r\n         *\r\n         * @type {Object};\r\n         */\n\n        var interval;\n        /**\r\n         * Keep the Elements component.\r\n         *\r\n         * @type {string}\r\n         */\n\n        var Elements = Components.Elements;\n        /**\r\n         * Autoplay component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Autoplay = {\n          /**\r\n           * Required only when the autoplay option is true.\r\n           *\r\n           * @type {boolean}\r\n           */\n          required: Splide.options.autoplay,\n\n          /**\r\n           * Called when the component is mounted.\r\n           * Note that autoplay starts only if there are slides over perPage number.\r\n           */\n          mount: function mount() {\n            var options = Splide.options;\n\n            if (Elements.slides.length > options.perPage) {\n              interval = createInterval(function () {\n                Splide.go('>');\n              }, options.interval, function (rate) {\n                Splide.emit(name + \":playing\", rate);\n\n                if (Elements.bar) {\n                  applyStyle(Elements.bar, {\n                    width: rate * 100 + \"%\"\n                  });\n                }\n              });\n              bind();\n              this.play();\n            }\n          },\n\n          /**\r\n           * Start autoplay.\r\n           *\r\n           * @param {number} flag - A pause flag to be removed.\r\n           */\n          play: function play(flag) {\n            if (flag === void 0) {\n              flag = 0;\n            }\n\n            flags = flags.filter(function (f) {\n              return f !== flag;\n            });\n\n            if (!flags.length) {\n              Splide.emit(name + \":play\");\n              interval.play(Splide.options.resetProgress);\n            }\n          },\n\n          /**\r\n           * Pause autoplay.\r\n           * Note that Array.includes is not supported by IE.\r\n           *\r\n           * @param {number} flag - A pause flag to be added.\r\n           */\n          pause: function pause(flag) {\n            if (flag === void 0) {\n              flag = 0;\n            }\n\n            interval.pause();\n\n            if (flags.indexOf(flag) === -1) {\n              flags.push(flag);\n            }\n\n            if (flags.length === 1) {\n              Splide.emit(name + \":pause\");\n            }\n          }\n        };\n        /**\r\n         * Listen some events.\r\n         */\n\n        function bind() {\n          var options = Splide.options;\n          var sibling = Splide.sibling;\n          var elms = [Splide.root, sibling ? sibling.root : null];\n\n          if (options.pauseOnHover) {\n            switchOn(elms, 'mouseleave', PAUSE_FLAGS.HOVER, true);\n            switchOn(elms, 'mouseenter', PAUSE_FLAGS.HOVER, false);\n          }\n\n          if (options.pauseOnFocus) {\n            switchOn(elms, 'focusout', PAUSE_FLAGS.FOCUS, true);\n            switchOn(elms, 'focusin', PAUSE_FLAGS.FOCUS, false);\n          }\n\n          if (Elements.play) {\n            Splide.on('click', function () {\n              // Need to be removed a focus flag at first.\n              Autoplay.play(PAUSE_FLAGS.FOCUS);\n              Autoplay.play(PAUSE_FLAGS.MANUAL);\n            }, Elements.play);\n          }\n\n          if (Elements.pause) {\n            switchOn([Elements.pause], 'click', PAUSE_FLAGS.MANUAL, false);\n          }\n\n          Splide.on('move refresh', function () {\n            Autoplay.play();\n          }) // Rewind the timer.\n          .on('destroy', function () {\n            Autoplay.pause();\n          });\n        }\n        /**\r\n         * Play or pause on the given event.\r\n         *\r\n         * @param {Element[]} elms  - Elements.\r\n         * @param {string}    event - An event name or names.\r\n         * @param {number}    flag  - A pause flag defined on the top.\r\n         * @param {boolean}   play  - Determine whether to play or pause.\r\n         */\n\n\n        function switchOn(elms, event, flag, play) {\n          elms.forEach(function (elm) {\n            Splide.on(event, function () {\n              Autoplay[play ? 'play' : 'pause'](flag);\n            }, elm);\n          });\n        }\n\n        return Autoplay;\n      }; // CONCATENATED MODULE: ./src/js/components/cover/index.js\n\n      /**\r\n       * The component for change an img element to background image of its wrapper.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for change an img element to background image of its wrapper.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n\n      var components_cover = function components_cover(Splide, Components) {\n        /**\r\n         * Hold options.\r\n         *\r\n         * @type {Object}\r\n         */\n        var options = Splide.options;\n        /**\r\n         * Cover component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Cover = {\n          /**\r\n           * Required only when \"cover\" option is true.\r\n           *\r\n           * @type {boolean}\r\n           */\n          required: options.cover,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            Splide.on('lazyload:loaded', function (img) {\n              cover(img, false);\n            });\n            Splide.on('mounted updated refresh', function () {\n              return apply(false);\n            });\n          },\n\n          /**\r\n           * Destroy.\r\n           */\n          destroy: function destroy() {\n            apply(true);\n          }\n        };\n        /**\r\n         * Apply \"cover\" to all slides.\r\n         *\r\n         * @param {boolean} uncover - If true, \"cover\" will be clear.\r\n         */\n\n        function apply(uncover) {\n          Components.Elements.each(function (Slide) {\n            var img = child(Slide.slide, 'IMG') || child(Slide.container, 'IMG');\n\n            if (img && img.src) {\n              cover(img, uncover);\n            }\n          });\n        }\n        /**\r\n         * Set background image of the parent element, using source of the given image element.\r\n         *\r\n         * @param {Element} img     - An image element.\r\n         * @param {boolean} uncover - Reset \"cover\".\r\n         */\n\n\n        function cover(img, uncover) {\n          applyStyle(img.parentElement, {\n            background: uncover ? '' : \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\"\n          });\n          applyStyle(img, {\n            display: uncover ? '' : 'none'\n          });\n        }\n\n        return Cover;\n      }; // CONCATENATED MODULE: ./src/js/components/arrows/path.js\n\n      /**\r\n       * Export vector path for an arrow.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Namespace definition for SVG element.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\n      /**\r\n       * The arrow vector path.\r\n       *\r\n       * @type {number}\r\n       */\n\n      var PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\n      /**\r\n       * SVG width and height.\r\n       *\r\n       * @type {number}\r\n       */\n\n      var SIZE = 40; // CONCATENATED MODULE: ./src/js/components/arrows/index.js\n\n      /**\r\n       * The component for appending prev/next arrows.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for appending prev/next arrows.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       * @param {string} name       - A component name as a lowercase string.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var components_arrows = function components_arrows(Splide, Components, name) {\n        /**\r\n         * Previous arrow element.\r\n         *\r\n         * @type {Element|undefined}\r\n         */\n        var prev;\n        /**\r\n         * Next arrow element.\r\n         *\r\n         * @type {Element|undefined}\r\n         */\n\n        var next;\n        /**\r\n         * Store the class list.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var classes = Splide.classes;\n        /**\r\n         * Hold the root element.\r\n         *\r\n         * @type {Element}\r\n         */\n\n        var root = Splide.root;\n        /**\r\n         * Whether arrows are created programmatically or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var created;\n        /**\r\n         * Hold the Elements component.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Elements = Components.Elements;\n        /**\r\n         * Arrows component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Arrows = {\n          /**\r\n           * Required when the arrows option is true.\r\n           *\r\n           * @type {boolean}\r\n           */\n          required: Splide.options.arrows,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            // Attempt to get arrows from HTML source.\n            prev = Elements.arrows.prev;\n            next = Elements.arrows.next; // If arrows were not found in HTML, let's generate them.\n\n            if ((!prev || !next) && Splide.options.arrows) {\n              prev = createArrow(true);\n              next = createArrow(false);\n              created = true;\n              appendArrows();\n            }\n\n            if (prev && next) {\n              bind();\n            }\n\n            this.arrows = {\n              prev: prev,\n              next: next\n            };\n          },\n\n          /**\r\n           * Called after all components are mounted.\r\n           */\n          mounted: function mounted() {\n            Splide.emit(name + \":mounted\", prev, next);\n          },\n\n          /**\r\n           * Destroy.\r\n           */\n          destroy: function destroy() {\n            removeAttribute([prev, next], 'disabled');\n\n            if (created) {\n              dom_remove(prev.parentElement);\n            }\n          }\n        };\n        /**\r\n         * Listen to native and custom events.\r\n         */\n\n        function bind() {\n          Splide.on('click', function () {\n            Splide.go('<');\n          }, prev).on('click', function () {\n            Splide.go('>');\n          }, next).on('mounted move updated refresh', updateDisabled);\n        }\n        /**\r\n         * Update a disabled attribute.\r\n         */\n\n\n        function updateDisabled() {\n          var _Components$Controlle = Components.Controller,\n              prevIndex = _Components$Controlle.prevIndex,\n              nextIndex = _Components$Controlle.nextIndex;\n          var isEnough = Splide.length > Splide.options.perPage || Splide.is(LOOP);\n          prev.disabled = prevIndex < 0 || !isEnough;\n          next.disabled = nextIndex < 0 || !isEnough;\n          Splide.emit(name + \":updated\", prev, next, prevIndex, nextIndex);\n        }\n        /**\r\n         * Create a wrapper element and append arrows.\r\n         */\n\n\n        function appendArrows() {\n          var wrapper = create('div', {\n            \"class\": classes.arrows\n          });\n          append(wrapper, prev);\n          append(wrapper, next);\n          var slider = Elements.slider;\n          var parent = Splide.options.arrows === 'slider' && slider ? slider : root;\n          before(wrapper, parent.firstElementChild);\n        }\n        /**\r\n         * Create an arrow element.\r\n         *\r\n         * @param {boolean} prev - Determine to create a prev arrow or next arrow.\r\n         *\r\n         * @return {Element} - A created arrow element.\r\n         */\n\n\n        function createArrow(prev) {\n          var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\">\" + (\"<svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\"\\tviewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\"\\twidth=\\\"\" + SIZE + \"\\\"\\theight=\\\"\" + SIZE + \"\\\">\") + (\"<path d=\\\"\" + (Splide.options.arrowPath || PATH) + \"\\\" />\");\n          return domify(arrow);\n        }\n\n        return Arrows;\n      }; // CONCATENATED MODULE: ./src/js/components/pagination/index.js\n\n      /**\r\n       * The component for handling pagination\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The event name for updating some attributes of pagination nodes.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var ATTRIBUTES_UPDATE_EVENT = 'move.page';\n      /**\r\n       * The event name for recreating pagination.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var UPDATE_EVENT = 'updated.page refresh.page';\n      /**\r\n       * The component for handling pagination\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       * @param {string} name       - A component name as a lowercase string.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var components_pagination = function components_pagination(Splide, Components, name) {\n        /**\r\n         * Store all data for pagination.\r\n         * - list: A list element.\r\n         * - items: An array that contains objects(li, button, index, page).\r\n         *\r\n         * @type {Object}\r\n         */\n        var data = {};\n        /**\r\n         * Hold the Elements component.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Elements = Components.Elements;\n        /**\r\n         * Pagination component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Pagination = {\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            var pagination = Splide.options.pagination;\n\n            if (pagination) {\n              data = createPagination();\n              var slider = Elements.slider;\n              var parent = pagination === 'slider' && slider ? slider : Splide.root;\n              append(parent, data.list);\n              Splide.on(ATTRIBUTES_UPDATE_EVENT, updateAttributes);\n            }\n\n            Splide.off(UPDATE_EVENT).on(UPDATE_EVENT, function () {\n              Pagination.destroy();\n\n              if (Splide.options.pagination) {\n                Pagination.mount();\n                Pagination.mounted();\n              }\n            });\n          },\n\n          /**\r\n           * Called after all components are mounted.\r\n           */\n          mounted: function mounted() {\n            if (Splide.options.pagination) {\n              var index = Splide.index;\n              Splide.emit(name + \":mounted\", data, this.getItem(index));\n              updateAttributes(index, -1);\n            }\n          },\n\n          /**\r\n           * Destroy the pagination.\r\n           * Be aware that node.remove() is not supported by IE.\r\n           */\n          destroy: function destroy() {\n            dom_remove(data.list);\n\n            if (data.items) {\n              data.items.forEach(function (item) {\n                Splide.off('click', item.button);\n              });\n            } // Do not remove UPDATE_EVENT to recreate pagination if needed.\n\n\n            Splide.off(ATTRIBUTES_UPDATE_EVENT);\n            data = {};\n          },\n\n          /**\r\n           * Return an item by index.\r\n           *\r\n           * @param {number} index - A slide index.\r\n           *\r\n           * @return {Object|undefined} - An item object on success or undefined on failure.\r\n           */\n          getItem: function getItem(index) {\n            return data.items[Components.Controller.toPage(index)];\n          },\n\n          /**\r\n           * Return object containing pagination data.\r\n           *\r\n           * @return {Object} - Pagination data including list and items.\r\n           */\n          get data() {\n            return data;\n          }\n\n        };\n        /**\r\n         * Update attributes.\r\n         *\r\n         * @param {number} index     - Active index.\r\n         * @param {number} prevIndex - Prev index.\r\n         */\n\n        function updateAttributes(index, prevIndex) {\n          var prev = Pagination.getItem(prevIndex);\n          var curr = Pagination.getItem(index);\n          var active = STATUS_CLASSES.active;\n\n          if (prev) {\n            removeClass(prev.button, active);\n          }\n\n          if (curr) {\n            addClass(curr.button, active);\n          }\n\n          Splide.emit(name + \":updated\", data, prev, curr);\n        }\n        /**\r\n         * Create a wrapper and button elements.\r\n         *\r\n         * @return {Object} - An object contains all data.\r\n         */\n\n\n        function createPagination() {\n          var options = Splide.options;\n          var classes = Splide.classes;\n          var list = create('ul', {\n            \"class\": classes.pagination\n          });\n          var items = Elements.getSlides(false).filter(function (Slide) {\n            return options.focus !== false || Slide.index % options.perPage === 0;\n          }).map(function (Slide, page) {\n            var li = create('li', {});\n            var button = create('button', {\n              \"class\": classes.page,\n              type: 'button'\n            });\n            append(li, button);\n            append(list, li);\n            Splide.on('click', function () {\n              Splide.go(\">\" + page);\n            }, button);\n            return {\n              li: li,\n              button: button,\n              page: page,\n              Slides: Elements.getSlidesByPage(page)\n            };\n          });\n          return {\n            list: list,\n            items: items\n          };\n        }\n\n        return Pagination;\n      }; // CONCATENATED MODULE: ./src/js/components/lazyload/index.js\n\n      /**\r\n       * The component for loading slider images lazily.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The name for a data attribute of src.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var SRC_DATA_NAME = 'data-splide-lazy';\n      /**\r\n       * The name for a data attribute of srcset.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var SRCSET_DATA_NAME = 'data-splide-lazy-srcset';\n      /**\r\n       * The component for loading slider images lazily.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       * @param {string} name       - A component name as a lowercase string.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var lazyload = function lazyload(Splide, Components, name) {\n        /**\r\n         * Next index for sequential loading.\r\n         *\r\n         * @type {number}\r\n         */\n        var nextIndex;\n        /**\r\n         * Store objects containing an img element and a Slide object.\r\n         *\r\n         * @type {Object[]}\r\n         */\n\n        var images;\n        /**\r\n         * Store the options.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var options = Splide.options;\n        /**\r\n         * Whether to load images sequentially or not.\r\n         *\r\n         * @type {boolean}\r\n         */\n\n        var isSequential = options.lazyLoad === 'sequential';\n        /**\r\n         * Lazyload component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Lazyload = {\n          /**\r\n           * Mount only when the lazyload option is provided.\r\n           *\r\n           * @type {boolean}\r\n           */\n          required: options.lazyLoad,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            Splide.on('mounted refresh', function () {\n              init();\n              Components.Elements.each(function (Slide) {\n                each(Slide.slide.querySelectorAll(\"[\" + SRC_DATA_NAME + \"], [\" + SRCSET_DATA_NAME + \"]\"), function (img) {\n                  if (!img.src && !img.srcset) {\n                    images.push({\n                      img: img,\n                      Slide: Slide\n                    });\n                    applyStyle(img, {\n                      display: 'none'\n                    });\n                  }\n                });\n              });\n\n              if (isSequential) {\n                loadNext();\n              }\n            });\n\n            if (!isSequential) {\n              Splide.on(\"mounted refresh moved.\" + name, check);\n            }\n          },\n\n          /**\r\n           * Destroy.\r\n           */\n          destroy: init\n        };\n        /**\r\n         * Initialize parameters.\r\n         */\n\n        function init() {\n          images = [];\n          nextIndex = 0;\n        }\n        /**\r\n         * Check how close each image is from the active slide and\r\n         * determine whether to start loading or not, according to the distance.\r\n         *\r\n         * @param {number} index - Current index.\r\n         */\n\n\n        function check(index) {\n          index = isNaN(index) ? Splide.index : index;\n          images = images.filter(function (image) {\n            if (image.Slide.isWithin(index, options.perPage * (options.preloadPages + 1))) {\n              load(image.img, image.Slide);\n              return false;\n            }\n\n            return true;\n          }); // Unbind if all images are loaded.\n\n          if (!images[0]) {\n            Splide.off(\"moved.\" + name);\n          }\n        }\n        /**\r\n         * Start loading an image.\r\n         * Creating a clone of the image element since setting src attribute directly to it\r\n         * often occurs 'hitch', blocking some other processes of a browser.\r\n         *\r\n         * @param {Element} img   - An image element.\r\n         * @param {Object}  Slide - A Slide object.\r\n         */\n\n\n        function load(img, Slide) {\n          addClass(Slide.slide, STATUS_CLASSES.loading);\n          var spinner = create('span', {\n            \"class\": Splide.classes.spinner\n          });\n          append(img.parentElement, spinner);\n\n          img.onload = function () {\n            loaded(img, spinner, Slide, false);\n          };\n\n          img.onerror = function () {\n            loaded(img, spinner, Slide, true);\n          };\n\n          setAttribute(img, 'srcset', getAttribute(img, SRCSET_DATA_NAME) || '');\n          setAttribute(img, 'src', getAttribute(img, SRC_DATA_NAME) || '');\n        }\n        /**\r\n         * Start loading a next image in images array.\r\n         */\n\n\n        function loadNext() {\n          if (nextIndex < images.length) {\n            var image = images[nextIndex];\n            load(image.img, image.Slide);\n          }\n\n          nextIndex++;\n        }\n        /**\r\n         * Called just after the image was loaded or loading was aborted by some error.\r\n         *\r\n         * @param {Element} img     - An image element.\r\n         * @param {Element} spinner - A spinner element.\r\n         * @param {Object}  Slide   - A Slide object.\r\n         * @param {boolean} error   - True if the image was loaded successfully or false on error.\r\n         */\n\n\n        function loaded(img, spinner, Slide, error) {\n          removeClass(Slide.slide, STATUS_CLASSES.loading);\n\n          if (!error) {\n            dom_remove(spinner);\n            applyStyle(img, {\n              display: ''\n            });\n            Splide.emit(name + \":loaded\", img).emit('resize');\n          }\n\n          if (isSequential) {\n            loadNext();\n          }\n        }\n\n        return Lazyload;\n      }; // CONCATENATED MODULE: ./src/js/constants/a11y.js\n\n      /**\r\n       * Export aria attribute names.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Attribute name for aria-current.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var ARIA_CURRENRT = 'aria-current';\n      /**\r\n       * Attribute name for aria-control.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var ARIA_CONTROLS = 'aria-controls';\n      /**\r\n       * Attribute name for aria-control.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var ARIA_LABEL = 'aria-label';\n      /**\r\n       * Attribute name for aria-labelledby.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var ARIA_LABELLEDBY = 'aria-labelledby';\n      /**\r\n       * Attribute name for aria-hidden.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var ARIA_HIDDEN = 'aria-hidden';\n      /**\r\n       * Attribute name for tab-index.\r\n       *\r\n       * @type {string}\r\n       */\n\n      var TAB_INDEX = 'tabindex'; // CONCATENATED MODULE: ./src/js/components/keyboard/index.js\n\n      /**\r\n       * The component for controlling slides via keyboard.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Map a key to a slide control.\r\n       *\r\n       * @type {Object}\r\n       */\n\n      var KEY_MAP = {\n        ltr: {\n          ArrowLeft: '<',\n          ArrowRight: '>',\n          // For IE.\n          Left: '<',\n          Right: '>'\n        },\n        rtl: {\n          ArrowLeft: '>',\n          ArrowRight: '<',\n          // For IE.\n          Left: '>',\n          Right: '<'\n        },\n        ttb: {\n          ArrowUp: '<',\n          ArrowDown: '>',\n          // For IE.\n          Up: '<',\n          Down: '>'\n        }\n      };\n      /**\r\n       * The component for controlling slides via keyboard.\r\n       *\r\n       * @param {Splide} Splide - A Splide instance.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var components_keyboard = function components_keyboard(Splide) {\n        /**\r\n         * Hold the target element.\r\n         *\r\n         * @type {Element|Document|undefined}\r\n         */\n        var target;\n        return {\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            Splide.on('mounted updated', function () {\n              var options = Splide.options;\n              var root = Splide.root;\n              var map = KEY_MAP[options.direction];\n              var keyboard = options.keyboard;\n\n              if (target) {\n                Splide.off('keydown', target);\n                removeAttribute(root, TAB_INDEX);\n              }\n\n              if (keyboard) {\n                if (keyboard === 'focused') {\n                  target = root;\n                  setAttribute(root, TAB_INDEX, 0);\n                } else {\n                  target = document;\n                }\n\n                Splide.on('keydown', function (e) {\n                  if (map[e.key]) {\n                    Splide.go(map[e.key]);\n                  }\n                }, target);\n              }\n            });\n          }\n        };\n      }; // CONCATENATED MODULE: ./src/js/components/a11y/index.js\n\n      /**\r\n       * The component for enhancing accessibility.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The component for enhancing accessibility.\r\n       *\r\n       * @param {Splide} Splide     - A Splide instance.\r\n       * @param {Object} Components - An object containing components.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n\n      var a11y = function a11y(Splide, Components) {\n        /**\r\n         * Hold a i18n object.\r\n         *\r\n         * @type {Object}\r\n         */\n        var i18n = Splide.i18n;\n        /**\r\n         * Hold the Elements component.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Elements = Components.Elements;\n        /**\r\n         * All attributes related with A11y.\r\n         *\r\n         * @type {string[]}\r\n         */\n\n        var allAttributes = [ARIA_HIDDEN, TAB_INDEX, ARIA_CONTROLS, ARIA_LABEL, ARIA_CURRENRT, 'role'];\n        /**\r\n         * A11y component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var A11y = {\n          /**\r\n           * Required only when the accessibility option is true.\r\n           *\r\n           * @type {boolean}\r\n           */\n          required: Splide.options.accessibility,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            Splide.on('visible', function (Slide) {\n              updateSlide(Slide.slide, true);\n            }).on('hidden', function (Slide) {\n              updateSlide(Slide.slide, false);\n            }).on('arrows:mounted', initArrows).on('arrows:updated', updateArrows).on('pagination:mounted', initPagination).on('pagination:updated', updatePagination).on('refresh', function () {\n              removeAttribute(Components.Clones.clones, allAttributes);\n            });\n\n            if (Splide.options.isNavigation) {\n              Splide.on('navigation:mounted navigation:updated', initNavigation).on('active', function (Slide) {\n                updateNavigation(Slide, true);\n              }).on('inactive', function (Slide) {\n                updateNavigation(Slide, false);\n              });\n            }\n\n            initAutoplay();\n          },\n\n          /**\r\n           * Destroy.\r\n           */\n          destroy: function destroy() {\n            var Arrows = Components.Arrows;\n            var arrows = Arrows ? Arrows.arrows : {};\n            removeAttribute(Elements.slides.concat([arrows.prev, arrows.next, Elements.play, Elements.pause]), allAttributes);\n          }\n        };\n        /**\r\n         * Update slide attributes when it gets visible or hidden.\r\n         *\r\n         * @param {Element} slide   - A slide element.\r\n         * @param {Boolean} visible - True when the slide gets visible, or false when hidden.\r\n         */\n\n        function updateSlide(slide, visible) {\n          setAttribute(slide, ARIA_HIDDEN, !visible);\n\n          if (Splide.options.slideFocus) {\n            setAttribute(slide, TAB_INDEX, visible ? 0 : -1);\n          }\n        }\n        /**\r\n         * Initialize arrows if they are available.\r\n         * Append screen reader elements and add aria-controls attribute.\r\n         *\r\n         * @param {Element} prev - Previous arrow element.\r\n         * @param {Element} next - Next arrow element.\r\n         */\n\n\n        function initArrows(prev, next) {\n          var controls = Elements.track.id;\n          setAttribute(prev, ARIA_CONTROLS, controls);\n          setAttribute(next, ARIA_CONTROLS, controls);\n        }\n        /**\r\n         * Update arrow attributes.\r\n         *\r\n         * @param {Element} prev      - Previous arrow element.\r\n         * @param {Element} next      - Next arrow element.\r\n         * @param {number}  prevIndex - Previous slide index or -1 when there is no precede slide.\r\n         * @param {number}  nextIndex - Next slide index or -1 when there is no next slide.\r\n         */\n\n\n        function updateArrows(prev, next, prevIndex, nextIndex) {\n          var index = Splide.index;\n          var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n          var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n          setAttribute(prev, ARIA_LABEL, prevLabel);\n          setAttribute(next, ARIA_LABEL, nextLabel);\n        }\n        /**\r\n         * Initialize pagination if it's available.\r\n         * Append a screen reader element and add aria-controls/label attribute to each item.\r\n         *\r\n         * @param {Object} data       - Data object containing all items.\r\n         * @param {Object} activeItem - An initial active item.\r\n         */\n\n\n        function initPagination(data, activeItem) {\n          if (activeItem) {\n            setAttribute(activeItem.button, ARIA_CURRENRT, true);\n          }\n\n          data.items.forEach(function (item) {\n            var options = Splide.options;\n            var text = options.focus === false && options.perPage > 1 ? i18n.pageX : i18n.slideX;\n            var label = sprintf(text, item.page + 1);\n            var button = item.button;\n            var controls = item.Slides.map(function (Slide) {\n              return Slide.slide.id;\n            });\n            setAttribute(button, ARIA_CONTROLS, controls.join(' '));\n            setAttribute(button, ARIA_LABEL, label);\n          });\n        }\n        /**\r\n         * Update pagination attributes.\r\n         *\r\n         * @param {Object}  data - Data object containing all items.\r\n         * @param {Element} prev - A previous active element.\r\n         * @param {Element} curr - A current active element.\r\n         */\n\n\n        function updatePagination(data, prev, curr) {\n          if (prev) {\n            removeAttribute(prev.button, ARIA_CURRENRT);\n          }\n\n          if (curr) {\n            setAttribute(curr.button, ARIA_CURRENRT, true);\n          }\n        }\n        /**\r\n         * Initialize autoplay buttons.\r\n         */\n\n\n        function initAutoplay() {\n          ['play', 'pause'].forEach(function (name) {\n            var elm = Elements[name];\n\n            if (elm) {\n              if (!isButton(elm)) {\n                setAttribute(elm, 'role', 'button');\n              }\n\n              setAttribute(elm, ARIA_CONTROLS, Elements.track.id);\n              setAttribute(elm, ARIA_LABEL, i18n[name]);\n            }\n          });\n        }\n        /**\r\n         * Initialize navigation slider.\r\n         * Add button role, aria-label, aria-controls to slide elements and append screen reader text to them.\r\n         *\r\n         * @param {Splide} main - A main Splide instance.\r\n         */\n\n\n        function initNavigation(main) {\n          Elements.each(function (Slide) {\n            var slide = Slide.slide;\n            var realIndex = Slide.realIndex;\n\n            if (!isButton(slide)) {\n              setAttribute(slide, 'role', 'button');\n            }\n\n            var slideIndex = realIndex > -1 ? realIndex : Slide.index;\n            var label = sprintf(i18n.slideX, slideIndex + 1);\n            var mainSlide = main.Components.Elements.getSlide(slideIndex);\n            setAttribute(slide, ARIA_LABEL, label);\n\n            if (mainSlide) {\n              setAttribute(slide, ARIA_CONTROLS, mainSlide.slide.id);\n            }\n          });\n        }\n        /**\r\n         * Update navigation attributes.\r\n         *\r\n         * @param {Object}  Slide  - A target Slide object.\r\n         * @param {boolean} active - True if the slide is active or false if inactive.\r\n         */\n\n\n        function updateNavigation(_ref, active) {\n          var slide = _ref.slide;\n\n          if (active) {\n            setAttribute(slide, ARIA_CURRENRT, true);\n          } else {\n            removeAttribute(slide, ARIA_CURRENRT);\n          }\n        }\n        /**\r\n         * Check if the given element is button or not.\r\n         *\r\n         * @param {Element} elm - An element to be checked.\r\n         *\r\n         * @return {boolean} - True if the given element is button.\r\n         */\n\n\n        function isButton(elm) {\n          return elm.tagName === 'BUTTON';\n        }\n\n        return A11y;\n      }; // CONCATENATED MODULE: ./src/js/components/sync/index.js\n\n      /**\r\n       * The component for synchronizing a slider with another.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * The event name for sync.\r\n       *\r\n       * @type {string}\r\n       */\n\n\n      var SYNC_EVENT = 'move.sync';\n      /**\r\n       * The event names for click navigation.\r\n       * @type {string}\r\n       */\n\n      var CLICK_EVENTS = 'mouseup touchend';\n      /**\r\n       * The keys for triggering the navigation button.\r\n       *\r\n       * @type {String[]}\r\n       */\n\n      var TRIGGER_KEYS = [' ', 'Enter', 'Spacebar'];\n      /**\r\n       * The component for synchronizing a slider with another.\r\n       *\r\n       * @param {Splide} Splide - A Splide instance.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var sync = function sync(Splide) {\n        /**\r\n         * Keep the sibling Splide instance.\r\n         *\r\n         * @type {Splide}\r\n         */\n        var sibling = Splide.sibling;\n        /**\r\n         * Whether the sibling slider is navigation or not.\r\n         *\r\n         * @type {Splide|boolean}\r\n         */\n\n        var isNavigation = sibling && sibling.options.isNavigation;\n        /**\r\n         * Layout component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Sync = {\n          /**\r\n           * Required only when the sub slider is available.\r\n           *\r\n           * @type {boolean}\r\n           */\n          required: !!sibling,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            syncMain();\n            syncSibling();\n\n            if (isNavigation) {\n              bind();\n              Splide.on('refresh', function () {\n                setTimeout(function () {\n                  bind();\n                  sibling.emit('navigation:updated', Splide);\n                });\n              });\n            }\n          },\n\n          /**\r\n           * Called after all components are mounted.\r\n           */\n          mounted: function mounted() {\n            if (isNavigation) {\n              sibling.emit('navigation:mounted', Splide);\n            }\n          }\n        };\n        /**\r\n         * Listen the primary slider event to move secondary one.\r\n         * Must unbind a handler at first to avoid infinite loop.\r\n         */\n\n        function syncMain() {\n          Splide.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n            sibling.off(SYNC_EVENT).go(sibling.is(LOOP) ? destIndex : newIndex, false);\n            syncSibling();\n          });\n        }\n        /**\r\n         * Listen the secondary slider event to move primary one.\r\n         * Must unbind a handler at first to avoid infinite loop.\r\n         */\n\n\n        function syncSibling() {\n          sibling.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n            Splide.off(SYNC_EVENT).go(Splide.is(LOOP) ? destIndex : newIndex, false);\n            syncMain();\n          });\n        }\n        /**\r\n         * Listen some events on each slide.\r\n         */\n\n\n        function bind() {\n          sibling.Components.Elements.each(function (_ref) {\n            var slide = _ref.slide,\n                index = _ref.index;\n            /*\r\n             * Listen mouseup and touchend events to handle click.\r\n             */\n\n            Splide.off(CLICK_EVENTS, slide).on(CLICK_EVENTS, function (e) {\n              // Ignore a middle or right click.\n              if (!e.button || e.button === 0) {\n                moveSibling(index);\n              }\n            }, slide);\n            /*\r\n             * Subscribe keyup to handle Enter and Space key.\r\n             * Note that Array.includes is not supported by IE.\r\n             */\n\n            Splide.off('keyup', slide).on('keyup', function (e) {\n              if (TRIGGER_KEYS.indexOf(e.key) > -1) {\n                e.preventDefault();\n                moveSibling(index);\n              }\n            }, slide, {\n              passive: false\n            });\n          });\n        }\n        /**\r\n         * Move the sibling to the given index.\r\n         * Need to check \"IDLE\" status because slides can be moving by Drag component.\r\n         *\r\n         * @param {number} index - Target index.\r\n         */\n\n\n        function moveSibling(index) {\n          if (Splide.State.is(IDLE)) {\n            sibling.go(index);\n          }\n        }\n\n        return Sync;\n      }; // CONCATENATED MODULE: ./src/js/components/breakpoints/index.js\n\n      /**\r\n       * The component for updating options according to a current window width.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Interval time for throttle.\r\n       *\r\n       * @type {number}\r\n       */\n\n\n      var THROTTLE = 50;\n      /**\r\n       * The component for updating options according to a current window width.\r\n       *\r\n       * @param {Splide} Splide - A Splide instance.\r\n       *\r\n       * @return {Object} - The component object.\r\n       */\n\n      /* harmony default export */\n\n      var components_breakpoints = function components_breakpoints(Splide) {\n        /**\r\n         * Store breakpoints.\r\n         *\r\n         * @type {Object|boolean}\r\n         */\n        var breakpoints = Splide.options.breakpoints;\n        /**\r\n         * The check function whose frequency of call is reduced.\r\n         *\r\n         * @type {Function}\r\n         */\n\n        var throttledCheck = throttle(check, THROTTLE);\n        /**\r\n         * Keep initial options.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var initialOptions;\n        /**\r\n         * An array containing objects of point and MediaQueryList.\r\n         *\r\n         * @type {Object[]}\r\n         */\n\n        var map = [];\n        /**\r\n         * Hold the previous breakpoint.\r\n         *\r\n         * @type {number|undefined}\r\n         */\n\n        var prevPoint;\n        /**\r\n         * Breakpoints component object.\r\n         *\r\n         * @type {Object}\r\n         */\n\n        var Breakpoints = {\n          /**\r\n           * Required only when the breakpoints definition is provided and browser supports matchMedia.\r\n           *\r\n           * @type {boolean}\r\n           */\n          required: breakpoints && matchMedia,\n\n          /**\r\n           * Called when the component is mounted.\r\n           */\n          mount: function mount() {\n            map = Object.keys(breakpoints).sort(function (n, m) {\n              return +n - +m;\n            }).map(function (point) {\n              return {\n                point: point,\n                mql: matchMedia(\"(max-width:\" + point + \"px)\")\n              };\n            });\n            /*\r\n             * To keep monitoring resize event after destruction without \"completely\",\r\n             * use native addEventListener instead of Splide.on.\r\n             */\n\n            this.destroy(true);\n            addEventListener('resize', throttledCheck); // Keep initial options to apply them when no breakpoint matches.\n\n            initialOptions = Splide.options;\n            check();\n          },\n\n          /**\r\n           * Destroy.\r\n           *\r\n           * @param {boolean} completely - Whether to destroy Splide completely.\r\n           */\n          destroy: function destroy(completely) {\n            if (completely) {\n              removeEventListener('resize', throttledCheck);\n            }\n          }\n        };\n        /**\r\n         * Check the breakpoint.\r\n         */\n\n        function check() {\n          var point = getPoint();\n\n          if (point !== prevPoint) {\n            prevPoint = point;\n            var State = Splide.State;\n            var options = breakpoints[point] || initialOptions;\n            var destroy = options.destroy;\n\n            if (destroy) {\n              Splide.options = initialOptions;\n              Splide.destroy(destroy === 'completely');\n            } else {\n              if (State.is(DESTROYED)) {\n                Splide.mount();\n              }\n\n              Splide.options = options;\n            }\n          }\n        }\n        /**\r\n         * Return the breakpoint matching current window width.\r\n         * Note that Array.prototype.find is not supported by IE.\r\n         *\r\n         * @return {number|string} - A breakpoint as number or string. -1 if no point matches.\r\n         */\n\n\n        function getPoint() {\n          var item = map.filter(function (item) {\n            return item.mql.matches;\n          })[0];\n          return item ? item.point : -1;\n        }\n\n        return Breakpoints;\n      }; // CONCATENATED MODULE: ./src/js/components/index.js\n\n      /**\r\n       * Export components.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n\n      var COMPLETE = {\n        Options: components_options,\n        Breakpoints: components_breakpoints,\n        Controller: controller,\n        Elements: components_elements,\n        Track: components_track,\n        Clones: components_clones,\n        Layout: layout,\n        Drag: drag,\n        Click: click,\n        Autoplay: components_autoplay,\n        Cover: components_cover,\n        Arrows: components_arrows,\n        Pagination: components_pagination,\n        LazyLoad: lazyload,\n        Keyboard: components_keyboard,\n        Sync: sync,\n        A11y: a11y\n      };\n      var LIGHT = {\n        Options: components_options,\n        Controller: controller,\n        Elements: components_elements,\n        Track: components_track,\n        Clones: components_clones,\n        Layout: layout,\n        Drag: drag,\n        Click: click,\n        Arrows: components_arrows,\n        Pagination: components_pagination,\n        A11y: a11y\n      }; // CONCATENATED MODULE: ./build/module/module.js\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n        subClass.__proto__ = superClass;\n      }\n      /**\r\n       * Export Splide class for import.\r\n       *\r\n       * @author    Naotoshi Fujita\r\n       * @copyright Naotoshi Fujita. All rights reserved.\r\n       */\n\n      /**\r\n       * Export Splide class for import from other projects.\r\n       */\n\n\n      var module_Splide = /*#__PURE__*/function (_Core) {\n        _inheritsLoose(Splide, _Core);\n\n        function Splide(root, options) {\n          return _Core.call(this, root, options, COMPLETE) || this;\n        }\n\n        return Splide;\n      }(splide_Splide);\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});","map":{"version":3,"sources":["/Users/robertpage/Documents/Programming/Projects/sarah_portfolio_site/Production/frontend/node_modules/@splidejs/splide/dist/js/splide.esm.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","module_Splide","states_namespaceObject","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","core_event","data","Event","on","events","handler","elm","options","split","forEach","event","addEventListener","push","off","filter","item","unsubscribe","emit","_len","arguments","length","args","Array","_key","apply","destroy","removeEventListener","state","initialState","curr","set","is","_extends","assign","target","source","keys","each","obj","callback","some","index","values","map","isObject","subject","merge","_ref","from","to","object_assign","getOwnPropertyDescriptor","toArray","isArray","between","m1","m2","Math","min","max","sprintf","format","replacements","replace","unit","type","parseFloat","pad","number","toPixel","div","applyStyle","position","width","append","clientWidth","dom_remove","find","selector","querySelector","child","parent","tagOrClassName","children","hasClass","tagName","tag","attrs","document","createElement","setAttribute","domify","html","innerHTML","firstChild","elms","parentElement","removeChild","appendChild","before","ref","insertBefore","styles","prop","style","addOrRemoveClasses","classes","remove","classList","addClass","removeClass","className","contains","getAttribute","removeAttribute","names","getRect","getBoundingClientRect","dom_loaded","images","querySelectorAll","count","img","onload","onerror","SLIDE","LOOP","FADE","transitions_slide","Splide","Components","list","endCallback","mount","Elements","e","start","destIndex","newIndex","prevIndex","coord","done","edgeIndex","Controller","speed","rewindSpeed","transition","easing","transform","x","y","fade","Fade","track","height","clientHeight","setTimeout","slides","compose","Transition","components","Component","toLowerCase","MESSAGE_PREFIX","error_error","message","console","error","exist","Error","ROOT","ELEMENT_CLASSES","slider","slide","container","arrows","arrow","prev","next","pagination","page","clone","progress","bar","autoplay","play","pause","spinner","sr","STATUS_CLASSES","active","visible","loading","I18N","first","last","slideX","pageX","DEFAULTS","rewind","waitForTransition","fixedWidth","fixedHeight","heightRatio","autoWidth","autoHeight","perPage","perMove","clones","focus","gap","padding","arrowPath","interval","pauseOnHover","pauseOnFocus","resetProgress","lazyLoad","preloadPages","keyboard","drag","dragAngleThreshold","swipeDistanceThreshold","flickVelocityThreshold","flickPower","flickMaxPages","direction","cover","accessibility","slideFocus","isNavigation","trimSpace","updateOnMove","throttle","breakpoints","i18n","_defineProperties","props","descriptor","configurable","writable","_createClass","Constructor","protoProps","staticProps","splide_Splide","Element","State","STATES","_o","_i","_c","_e","_t","_proto","Extensions","_this","component","required","undefined","mounted","visibility","sync","splide","sibling","_this$Event","concat","go","control","wait","add","refresh","completely","_this2","reverse","parseInt","created","components_options","JSON","parse","LTR","RTL","TTB","STYLE_RESTORE_EVENTS","elements_slide","realIndex","STATUS_UPDATE_EVENTS","Slide","isClone","id","update","restoreStyles","_update","display","isActive","isVisible","trackRect","slideRect","top","bottom","left","right","isWithin","within","diff","abs","forVisibility","UID_NAME","components_elements","Slides","uid","init","getClasses","collect","register","SlideObject","getSlide","getSlides","includeClones","getSlidesByPage","idx","toIndex","splice","total","findParts","rootClass","floor","controller","isLoop","silently","trim","Track","matches","String","match","indicator","parsePage","hasFocus","pageLength","toPage","edge","isRtl","ceil","nextIndex","newOptions","sign","components_track","Layout","isVertical","isFade","isRTL","isLoopPending","jump","newPosition","getTrimmedPosition","toCoord","onTransitionEnd","translate","cancel","shift","toPosition","innerSize","totalSize","size","minDistance","Infinity","slideIndex","distance","slideSize","offset","components_clones","cloneCount","Clones","getCloneCount","generateClones","slice","cloneDeeply","baseCount","dimension","fixedSize","cloneNode","horizontal","margin","resize","paddingLeft","paddingRight","totalWidth","listRect","slideWidth","offsetWidth","slideHeight","vertical","paddingTop","paddingBottom","totalHeight","offsetHeight","func","timeout","createInterval","_window","requestAnimationFrame","elapse","rate","_pause","step","timestamp","reset","layout","maxWidth","drag_abs","MIN_VELOCITY","FRICTION_REDUCER","startCoord","startInfo","currentInfo","isDragging","axis","Drag","disabled","move","passive","end","preventDefault","analyze","cancelable","resist","shouldMove","angle","atan","PI","_start","_end","log","info","velocity","absV","destination","timeStamp","touches","_ref2","clientX","clientY","_ref3","_ref3$x","fromX","_ref3$y","fromY","startTime","time","duration","click","Click","onClick","capture","stopPropagation","stopImmediatePropagation","PAUSE_FLAGS","HOVER","FOCUS","MANUAL","components_autoplay","flags","Autoplay","flag","f","indexOf","switchOn","components_cover","Cover","uncover","src","background","XML_NAME_SPACE","PATH","SIZE","components_arrows","Arrows","createArrow","appendArrows","updateDisabled","_Components$Controlle","isEnough","wrapper","firstElementChild","ATTRIBUTES_UPDATE_EVENT","UPDATE_EVENT","components_pagination","Pagination","createPagination","updateAttributes","getItem","items","button","li","SRC_DATA_NAME","SRCSET_DATA_NAME","lazyload","isSequential","Lazyload","srcset","loadNext","check","isNaN","image","load","loaded","ARIA_CURRENRT","ARIA_CONTROLS","ARIA_LABEL","ARIA_LABELLEDBY","ARIA_HIDDEN","TAB_INDEX","KEY_MAP","ltr","ArrowLeft","ArrowRight","Left","Right","rtl","ttb","ArrowUp","ArrowDown","Up","Down","components_keyboard","a11y","allAttributes","A11y","updateSlide","initArrows","updateArrows","initPagination","updatePagination","initNavigation","updateNavigation","initAutoplay","controls","prevLabel","nextLabel","activeItem","text","label","join","isButton","main","mainSlide","SYNC_EVENT","CLICK_EVENTS","TRIGGER_KEYS","Sync","syncMain","syncSibling","moveSibling","THROTTLE","components_breakpoints","throttledCheck","initialOptions","prevPoint","Breakpoints","matchMedia","sort","point","mql","getPoint","COMPLETE","Options","LazyLoad","Keyboard","LIGHT","_inheritsLoose","subClass","superClass","constructor","__proto__","_Core"],"mappings":"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AAA,KAAK,EAAE,eANE;AAOTZ,QAAAA,IAAI,EAAE,gBAPG;AAQTC,QAAAA,KAAK,EAAE;AARE,OAAX,CA56BkE,CAs7BlE;;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,UAAIY,QAAQ,GAAG;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACErI,QAAAA,IAAI,EAAE,OATO;;AAWb;AACF;AACA;AACA;AACA;AACA;AACEsI,QAAAA,MAAM,EAAE,KAjBK;;AAmBb;AACF;AACA;AACA;AACA;AACEvD,QAAAA,KAAK,EAAE,GAxBM;;AA0Bb;AACF;AACA;AACA;AACA;AACEC,QAAAA,WAAW,EAAE,CA/BA;;AAiCb;AACF;AACA;AACA;AACA;AACA;AACA;AACEuD,QAAAA,iBAAiB,EAAE,IAxCN;;AA0Cb;AACF;AACA;AACA;AACA;AACE/H,QAAAA,KAAK,EAAE,CA/CM;;AAiDb;AACF;AACA;AACA;AACA;AACEiF,QAAAA,MAAM,EAAE,CAtDK;;AAwDb;AACF;AACA;AACA;AACA;AACA;AACE+C,QAAAA,UAAU,EAAE,CA9DC;;AAgEb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,WAAW,EAAE,CAtEA;;AAwEb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,WAAW,EAAE,CA9EA;;AAgFb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,SAAS,EAAE,KAtFE;;AAwFb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,UAAU,EAAE,KA9FC;;AAgGb;AACF;AACA;AACA;AACA;AACEC,QAAAA,OAAO,EAAE,CArGI;;AAuGb;AACF;AACA;AACA;AACA;AACEC,QAAAA,OAAO,EAAE,CA5GI;;AA8Gb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,MAAM,EAAE,CApHK;;AAsHb;AACF;AACA;AACA;AACA;AACExE,QAAAA,KAAK,EAAE,CA3HM;;AA6Hb;AACF;AACA;AACA;AACA;AACA;AACEyE,QAAAA,KAAK,EAAE,KAnIM;;AAqIb;AACF;AACA;AACA;AACA;AACEC,QAAAA,GAAG,EAAE,CA1IQ;;AA4Ib;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,QAAAA,OAAO,EAAE,CA1JI;;AA4Jb;AACF;AACA;AACA;AACA;AACEpC,QAAAA,MAAM,EAAE,IAjKK;;AAmKb;AACF;AACA;AACA;AACA;AACEqC,QAAAA,SAAS,EAAE,EAxKE;;AA0Kb;AACF;AACA;AACA;AACA;AACEjC,QAAAA,UAAU,EAAE,IA/KC;;AAiLb;AACF;AACA;AACA;AACA;AACEK,QAAAA,QAAQ,EAAE,KAtLG;;AAwLb;AACF;AACA;AACA;AACA;AACE6B,QAAAA,QAAQ,EAAE,IA7LG;;AA+Lb;AACF;AACA;AACA;AACA;AACEC,QAAAA,YAAY,EAAE,IApMD;;AAsMb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,YAAY,EAAE,IA5MD;;AA8Mb;AACF;AACA;AACA;AACA;AACEC,QAAAA,aAAa,EAAE,IAnNF;;AAqNb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,QAAAA,QAAQ,EAAE,KA/NG;;AAiOb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,YAAY,EAAE,CAvOD;;AAyOb;AACF;AACA;AACA;AACA;AACEvE,QAAAA,MAAM,EAAE,+BA9OK;;AAgPb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEwE,QAAAA,QAAQ,EAAE,QAxPG;;AA0Pb;AACF;AACA;AACA;AACA;AACEC,QAAAA,IAAI,EAAE,IA/PO;;AAiQb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,kBAAkB,EAAE,EAvQP;;AAyQb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,sBAAsB,EAAE,GA/QX;;AAiRb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,sBAAsB,EAAE,EAvRX;;AAyRb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,UAAU,EAAE,GA/RC;;AAiSb;AACF;AACA;AACA;AACA;AACEC,QAAAA,aAAa,EAAE,CAtSF;;AAwSb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,QAAAA,SAAS,EAAE,KAhTE;;AAkTb;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,QAAAA,KAAK,EAAE,KAzTM;;AA2Tb;AACF;AACA;AACA;AACA;AACEC,QAAAA,aAAa,EAAE,IAhUF;;AAkUb;AACF;AACA;AACA;AACA;AACEC,QAAAA,UAAU,EAAE,IAvUC;;AAyUb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,YAAY,EAAE,KA/UD;;AAiVb;AACF;AACA;AACA;AACA;AACEC,QAAAA,SAAS,EAAE,IAtVE;;AAwVb;AACF;AACA;AACA;AACA;AACA;AACEC,QAAAA,YAAY,EAAE,KA9VD;;AAgWb;AACF;AACA;AACA;AACA;AACEC,QAAAA,QAAQ,EAAE,GArWG;;AAuWb;AACF;AACA;AACA;AACA;AACEhN,QAAAA,OAAO,EAAE,KA5WI;;AA8Wb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEiN,QAAAA,WAAW,EAAE,KA/XA;;AAiYb;AACF;AACA;AACA;AACA;AACA;AACA;AACEhI,QAAAA,OAAO,EAAEiE,eAxYI;;AA0Yb;AACF;AACA;AACA;AACA;AACA;AACA;AACEgE,QAAAA,IAAI,EAAE1C;AAjZO,OAAf,CA/7BkE,CAk1ClE;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,UAAItM,OAAO,GAAG,CAAd;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIC,OAAO,GAAG,CAAd;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIC,IAAI,GAAG,CAAX;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIC,MAAM,GAAG,CAAb;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIC,SAAS,GAAG,CAAhB,CA33CkE,CA43ClE;;AACA,eAAS6O,iBAAT,CAA2B1M,MAA3B,EAAmC2M,KAAnC,EAA0C;AAAE,aAAK,IAAItR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsR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","sourcesContent":["/*!\n * Splide.js\n * Version  : 2.4.14\n * License  : MIT\n * Copyright: 2020 Naotoshi Fujita\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Splide\"] = factory();\n\telse\n\t\troot[\"Splide\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"default\", function() { return /* binding */ module_Splide; });\n\n// NAMESPACE OBJECT: ./src/js/constants/states.js\nvar states_namespaceObject = {};\n__webpack_require__.r(states_namespaceObject);\n__webpack_require__.d(states_namespaceObject, \"CREATED\", function() { return CREATED; });\n__webpack_require__.d(states_namespaceObject, \"MOUNTED\", function() { return MOUNTED; });\n__webpack_require__.d(states_namespaceObject, \"IDLE\", function() { return IDLE; });\n__webpack_require__.d(states_namespaceObject, \"MOVING\", function() { return MOVING; });\n__webpack_require__.d(states_namespaceObject, \"DESTROYED\", function() { return DESTROYED; });\n\n// CONCATENATED MODULE: ./src/js/core/event.js\n/**\r\n * The function for providing an Event object simply managing events.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The function for providing an Event object simply managing events.\r\n */\n/* harmony default export */ var core_event = (function () {\n  /**\r\n   * Store all event data.\r\n   *\r\n   * @type {Array}\r\n   */\n  var data = [];\n  var Event = {\n    /**\r\n     * Subscribe the given event(s).\r\n     *\r\n     * @param {string}   events  - An event name. Use space to separate multiple events.\r\n     *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n     * @param {function} handler - A callback function.\r\n     * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n     * @param {Object}   options - Optional. Options for addEventListener.\r\n     */\n    on: function on(events, handler, elm, options) {\n      if (elm === void 0) {\n        elm = null;\n      }\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      events.split(' ').forEach(function (event) {\n        if (elm) {\n          elm.addEventListener(event, handler, options);\n        }\n\n        data.push({\n          event: event,\n          handler: handler,\n          elm: elm,\n          options: options\n        });\n      });\n    },\n\n    /**\r\n     * Unsubscribe the given event(s).\r\n     *\r\n     * @param {string}  events - A event name or names split by space.\r\n     * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n     */\n    off: function off(events, elm) {\n      if (elm === void 0) {\n        elm = null;\n      }\n\n      events.split(' ').forEach(function (event) {\n        data = data.filter(function (item) {\n          if (item && item.event === event && item.elm === elm) {\n            unsubscribe(item);\n            return false;\n          }\n\n          return true;\n        });\n      });\n    },\n\n    /**\r\n     * Emit an event.\r\n     * This method is only for custom events.\r\n     *\r\n     * @param {string}  event - An event name.\r\n     * @param {*}       args  - Any number of arguments passed to handlers.\r\n     */\n    emit: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      data.forEach(function (item) {\n        if (!item.elm && item.event.split('.')[0] === event) {\n          item.handler.apply(item, args);\n        }\n      });\n    },\n\n    /**\r\n     * Clear event data.\r\n     */\n    destroy: function destroy() {\n      data.forEach(unsubscribe);\n      data = [];\n    }\n  };\n  /**\r\n   * Remove the registered event listener.\r\n   *\r\n   * @param {Object} item - An object containing event data.\r\n   */\n\n  function unsubscribe(item) {\n    if (item.elm) {\n      item.elm.removeEventListener(item.event, item.handler, item.options);\n    }\n  }\n\n  return Event;\n});\n// CONCATENATED MODULE: ./src/js/core/state.js\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param {string|number} initialState - Provide the initial state value.\r\n */\n/* harmony default export */ var state = (function (initialState) {\n  /**\r\n   * Store the current state.\r\n   *\r\n   * @type {string|number}\r\n   */\n  var curr = initialState;\n  return {\n    /**\r\n     * Change state.\r\n     *\r\n     * @param {string|number} state - A new state.\r\n     */\n    set: function set(state) {\n      curr = state;\n    },\n\n    /**\r\n     * Verify if the current state is given one or not.\r\n     *\r\n     * @param {string|number} state - A state name to be verified.\r\n     *\r\n     * @return {boolean} - True if the current state is the given one.\r\n     */\n    is: function is(state) {\n      return state === curr;\n    }\n  };\n});\n// CONCATENATED MODULE: ./src/js/utils/object.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\r\n * Some utility functions related with Object, supporting IE.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\nvar keys = Object.keys;\n/**\r\n * Iterate an object like Array.forEach.\r\n * IE doesn't support forEach of HTMLCollection.\r\n *\r\n * @param {Object}    obj       - An object.\r\n * @param {function}  callback  - A function handling each value. Arguments are value, property and index.\r\n */\n\nfunction each(obj, callback) {\n  keys(obj).some(function (key, index) {\n    return callback(obj[key], key, index);\n  });\n}\n/**\r\n * Return values of the given object as an array.\r\n * IE doesn't support Object.values.\r\n *\r\n * @param {Object} obj - An object.\r\n *\r\n * @return {Array} - An array containing all values of the given object.\r\n */\n\nfunction values(obj) {\n  return keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n/**\r\n * Check if the given subject is object or not.\r\n *\r\n * @param {*} subject - A subject to be verified.\r\n *\r\n * @return {boolean} - True if object, false otherwise.\r\n */\n\nfunction isObject(subject) {\n  return typeof subject === 'object';\n}\n/**\r\n * Merge two objects deeply.\r\n *\r\n * @param {Object} to   - An object where \"from\" is merged.\r\n * @param {Object} from - An object merged to \"to\".\r\n *\r\n * @return {Object} - A merged object.\r\n */\n\nfunction merge(_ref, from) {\n  var to = _extends({}, _ref);\n\n  each(from, function (value, key) {\n    if (isObject(value)) {\n      if (!isObject(to[key])) {\n        to[key] = {};\n      }\n\n      to[key] = merge(to[key], value);\n    } else {\n      to[key] = value;\n    }\n  });\n  return to;\n}\n/**\r\n * Assign all properties \"from\" to \"to\" object.\r\n *\r\n * @param {Object} to   - An object where properties are assigned.\r\n * @param {Object} from - An object whose properties are assigned to \"to\".\r\n *\r\n * @return {Object} - An assigned object.\r\n */\n\nfunction object_assign(to, from) {\n  keys(from).forEach(function (key) {\n    if (!to[key]) {\n      Object.defineProperty(to, key, Object.getOwnPropertyDescriptor(from, key));\n    }\n  });\n  return to;\n}\n// CONCATENATED MODULE: ./src/js/utils/utils.js\n/**\r\n * A package of some miscellaneous utility functions.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Convert the given value to array.\r\n *\r\n * @param {*} value - Any value.\r\n *\r\n * @return {*[]} - Array containing the given value.\r\n */\n\nfunction toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n/**\r\n * Check if the given value is between min and max.\r\n * Min will be returned when the value is less than min or max will do when greater than max.\r\n *\r\n * @param {number} value - A number to be checked.\r\n * @param {number} m1    - Minimum or maximum number.\r\n * @param {number} m2    - Maximum or minimum number.\r\n *\r\n * @return {number} - A value itself, min or max.\r\n */\n\nfunction between(value, m1, m2) {\n  return Math.min(Math.max(value, m1 > m2 ? m2 : m1), m1 > m2 ? m1 : m2);\n}\n/**\r\n * The sprintf method with minimum functionality.\r\n *\r\n * @param {string}       format       - The string format.\r\n * @param {string|Array} replacements - Replacements accepting multiple arguments.\r\n *\r\n * @returns {string} - Converted string.\r\n */\n\nfunction sprintf(format, replacements) {\n  var i = 0;\n  return format.replace(/%s/g, function () {\n    return toArray(replacements)[i++];\n  });\n}\n/**\r\n * Append px unit to the given subject if necessary.\r\n *\r\n * @param {number|string} value - A value that may not include an unit.\r\n *\r\n * @return {string} - If the value is string, return itself.\r\n *                    If number, do value + \"px\". An empty string, otherwise.\r\n */\n\nfunction unit(value) {\n  var type = typeof value;\n\n  if (type === 'number' && value > 0) {\n    return parseFloat(value) + 'px';\n  }\n\n  return type === 'string' ? value : '';\n}\n/**\r\n * Pad start with 0.\r\n *\r\n * @param {number} number - A number to be filled with 0.\r\n *\r\n * @return {string|number} - Padded number.\r\n */\n\nfunction pad(number) {\n  return number < 10 ? '0' + number : number;\n}\n/**\r\n * Convert the given value to pixel.\r\n *\r\n * @param {Element}       root  - Root element where a dummy div is appended.\r\n * @param {string|number} value - CSS value to be converted, such as 10rem.\r\n *\r\n * @return {number} - Pixel.\r\n */\n\nfunction toPixel(root, value) {\n  if (typeof value === 'string') {\n    var div = create('div', {});\n    applyStyle(div, {\n      position: 'absolute',\n      width: value\n    });\n    append(root, div);\n    value = div.clientWidth;\n    dom_remove(div);\n  }\n\n  return +value || 0;\n}\n// CONCATENATED MODULE: ./src/js/utils/dom.js\n/**\r\n * Some utility functions related with DOM.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Find the first element matching the given selector.\r\n * Be aware that all selectors after a space are ignored.\r\n *\r\n * @param {Element|Node}  elm       - An ancestor element.\r\n * @param {string}        selector  - DOMString.\r\n *\r\n * @return {Element|null} - A found element or null.\r\n */\n\nfunction find(elm, selector) {\n  return elm ? elm.querySelector(selector.split(' ')[0]) : null;\n}\n/**\r\n * Find a first child having the given tag or class name.\r\n *\r\n * @param {Element} parent         - A parent element.\r\n * @param {string}  tagOrClassName - A tag or class name.\r\n *\r\n * @return {Element|undefined} - A found element on success or undefined on failure.\r\n */\n\nfunction child(parent, tagOrClassName) {\n  return children(parent, tagOrClassName)[0];\n}\n/**\r\n * Return chile elements that matches the provided tag or class name.\r\n *\r\n * @param {Element} parent         - A parent element.\r\n * @param {string}  tagOrClassName - A tag or class name.\r\n *\r\n * @return {Element[]} - Found elements.\r\n */\n\nfunction children(parent, tagOrClassName) {\n  if (parent) {\n    return values(parent.children).filter(function (child) {\n      return hasClass(child, tagOrClassName.split(' ')[0]) || child.tagName === tagOrClassName;\n    });\n  }\n\n  return [];\n}\n/**\r\n * Create an element with some optional attributes.\r\n *\r\n * @param {string} tag   - A tag name.\r\n * @param {Object} attrs - An object any attribute pairs of name and value.\r\n *\r\n * @return {Element} - A created element.\r\n */\n\nfunction create(tag, attrs) {\n  var elm = document.createElement(tag);\n  each(attrs, function (value, key) {\n    return setAttribute(elm, key, value);\n  });\n  return elm;\n}\n/**\r\n * Convert HTML string to DOM node.\r\n *\r\n * @param {string} html - HTML string.\r\n *\r\n * @return {Node} - A created node.\r\n */\n\nfunction domify(html) {\n  var div = create('div', {});\n  div.innerHTML = html;\n  return div.firstChild;\n}\n/**\r\n * Remove a given element from a DOM tree.\r\n *\r\n * @param {Element|Element[]} elms - Element(s) to be removed.\r\n */\n\nfunction dom_remove(elms) {\n  toArray(elms).forEach(function (elm) {\n    if (elm) {\n      var parent = elm.parentElement;\n      parent && parent.removeChild(elm);\n    }\n  });\n}\n/**\r\n * Append a child to a given element.\r\n *\r\n * @param {Element} parent - A parent element.\r\n * @param {Element} child  - An element to be appended.\r\n */\n\nfunction append(parent, child) {\n  if (parent) {\n    parent.appendChild(child);\n  }\n}\n/**\r\n * Insert an element before the reference element.\r\n *\r\n * @param {Element|Node} ref - A reference element.\r\n * @param {Element}      elm - An element to be inserted.\r\n */\n\nfunction before(elm, ref) {\n  if (elm && ref) {\n    var parent = ref.parentElement;\n    parent && parent.insertBefore(elm, ref);\n  }\n}\n/**\r\n * Apply styles to the given element.\r\n *\r\n * @param {Element} elm     - An element where styles are applied.\r\n * @param {Object}  styles  - Object containing styles.\r\n */\n\nfunction applyStyle(elm, styles) {\n  if (elm) {\n    each(styles, function (value, prop) {\n      if (value !== null) {\n        elm.style[prop] = value;\n      }\n    });\n  }\n}\n/**\r\n * Add or remove classes to/from the element.\r\n * This function is for internal usage.\r\n *\r\n * @param {Element}         elm     - An element where classes are added.\r\n * @param {string|string[]} classes - Class names being added.\r\n * @param {boolean}         remove  - Whether to remove or add classes.\r\n */\n\nfunction addOrRemoveClasses(elm, classes, remove) {\n  if (elm) {\n    toArray(classes).forEach(function (name) {\n      if (name) {\n        elm.classList[remove ? 'remove' : 'add'](name);\n      }\n    });\n  }\n}\n/**\r\n * Add classes to the element.\r\n *\r\n * @param {Element}          elm     - An element where classes are added.\r\n * @param {string|string[]}  classes - Class names being added.\r\n */\n\n\nfunction addClass(elm, classes) {\n  addOrRemoveClasses(elm, classes, false);\n}\n/**\r\n * Remove a class from the element.\r\n *\r\n * @param {Element}         elm     - An element where classes are removed.\r\n * @param {string|string[]} classes - A class name being removed.\r\n */\n\nfunction removeClass(elm, classes) {\n  addOrRemoveClasses(elm, classes, true);\n}\n/**\r\n * Verify if the provided element has the class or not.\r\n *\r\n * @param {Element} elm       - An element.\r\n * @param {string}  className - A class name.\r\n *\r\n * @return {boolean} - True if the element has the class or false if not.\r\n */\n\nfunction hasClass(elm, className) {\n  return !!elm && elm.classList.contains(className);\n}\n/**\r\n * Set attribute to the given element.\r\n *\r\n * @param {Element}                 elm   - An element where an attribute is assigned.\r\n * @param {string}                  name  - Attribute name.\r\n * @param {string|number|boolean}   value - Attribute value.\r\n */\n\nfunction setAttribute(elm, name, value) {\n  if (elm) {\n    elm.setAttribute(name, value);\n  }\n}\n/**\r\n * Get attribute from the given element.\r\n *\r\n * @param {Element} elm  - An element where an attribute is assigned.\r\n * @param {string}  name - Attribute name.\r\n *\r\n * @return {string} - The value of the given attribute if available. An empty string if not.\r\n */\n\nfunction getAttribute(elm, name) {\n  return elm ? elm.getAttribute(name) : '';\n}\n/**\r\n * Remove attribute from the given element.\r\n *\r\n * @param {Element|Element[]} elms  - An element where an attribute is removed.\r\n * @param {string|string[]}      names - Attribute name.\r\n */\n\nfunction removeAttribute(elms, names) {\n  toArray(names).forEach(function (name) {\n    toArray(elms).forEach(function (elm) {\n      return elm && elm.removeAttribute(name);\n    });\n  });\n}\n/**\r\n * Return the Rect object of the provided object.\r\n *\r\n * @param {Element} elm - An element.\r\n *\r\n * @return {ClientRect|DOMRect} - A rect object.\r\n */\n\nfunction getRect(elm) {\n  return elm.getBoundingClientRect();\n}\n/**\r\n * Trigger the given callback after all images contained by the element are loaded.\r\n *\r\n * @param {Element}  elm      - Element that may contain images.\r\n * @param {Function} callback - Callback function fired right after all images are loaded.\r\n */\n\nfunction dom_loaded(elm, callback) {\n  var images = elm.querySelectorAll('img');\n  var length = images.length;\n\n  if (length) {\n    var count = 0;\n    each(images, function (img) {\n      img.onload = img.onerror = function () {\n        if (++count === length) {\n          callback();\n        }\n      };\n    });\n  } else {\n    // Trigger the callback immediately if there is no image.\n    callback();\n  }\n}\n// CONCATENATED MODULE: ./src/js/constants/types.js\n/**\r\n * Export slider types.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Normal slider.\r\n *\r\n * @type {string}\r\n */\nvar SLIDE = 'slide';\n/**\r\n * Loop after the last slide and before the first one.\r\n *\r\n * @type {string}\r\n */\n\nvar LOOP = 'loop';\n/**\r\n * The track doesn't move.\r\n *\r\n * @type {string}\r\n */\n\nvar FADE = 'fade';\n// CONCATENATED MODULE: ./src/js/transitions/slide/index.js\n/**\r\n * The component for general slide effect transition.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The component for general slide effect transition.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var transitions_slide = (function (Splide, Components) {\n  /**\r\n   * Hold the list element.\r\n   *\r\n   * @type {Element}\r\n   */\n  var list;\n  /**\r\n   * Hold the onEnd callback function.\r\n   *\r\n   * @type {function}\r\n   */\n\n  var endCallback;\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      list = Components.Elements.list;\n      Splide.on('transitionend', function (e) {\n        if (e.target === list && endCallback) {\n          endCallback();\n        }\n      }, list);\n    },\n\n    /**\r\n     * Start transition.\r\n     *\r\n     * @param {number}   destIndex - Destination slide index that might be clone's.\r\n     * @param {number}   newIndex  - New index.\r\n     * @param {number}   prevIndex - Previous index.\r\n     * @param {Object}   coord     - Destination coordinates.\r\n     * @param {function} done      - Callback function must be invoked when transition is completed.\r\n     */\n    start: function start(destIndex, newIndex, prevIndex, coord, done) {\n      var options = Splide.options;\n      var edgeIndex = Components.Controller.edgeIndex;\n      var speed = options.speed;\n      endCallback = done;\n\n      if (Splide.is(SLIDE)) {\n        if (prevIndex === 0 && newIndex >= edgeIndex || prevIndex >= edgeIndex && newIndex === 0) {\n          speed = options.rewindSpeed || speed;\n        }\n      }\n\n      applyStyle(list, {\n        transition: \"transform \" + speed + \"ms \" + options.easing,\n        transform: \"translate(\" + coord.x + \"px,\" + coord.y + \"px)\"\n      });\n    }\n  };\n});\n// CONCATENATED MODULE: ./src/js/transitions/fade/index.js\n/**\r\n * The component for fade transition.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The component for fade transition.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var fade = (function (Splide, Components) {\n  var Fade = {\n    /**\r\n     * Called when the component is mounted.\r\n     * Apply transition style to the first slide.\r\n     */\n    mount: function mount() {\n      apply(Splide.index);\n    },\n\n    /**\r\n     * Start transition.\r\n     *\r\n     * @param {number}    destIndex - Destination slide index that might be clone's.\r\n     * @param {number}    newIndex  - New index.\r\n     * @param {number}    prevIndex - Previous index.\r\n     * @param {Object}    coord     - Destination coordinates.\r\n     * @param {function}  done      - Callback function must be invoked when transition is completed.\r\n     */\n    start: function start(destIndex, newIndex, prevIndex, coord, done) {\n      var track = Components.Elements.track;\n      applyStyle(track, {\n        height: unit(track.clientHeight)\n      });\n      apply(newIndex);\n      setTimeout(function () {\n        done();\n        applyStyle(track, {\n          height: ''\n        });\n      });\n    }\n  };\n  /**\r\n   * Apply transition style to the slide specified by the given index.\r\n   *\r\n   * @param {number} index - A slide index.\r\n   */\n\n  function apply(index) {\n    var options = Splide.options;\n    applyStyle(Components.Elements.slides[index], {\n      transition: \"opacity \" + options.speed + \"ms \" + options.easing\n    });\n  }\n\n  return Fade;\n});\n// CONCATENATED MODULE: ./src/js/transitions/index.js\n/**\r\n * Export transition components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n// CONCATENATED MODULE: ./src/js/core/composer.js\n/**\r\n * Provide a function for composing components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * Compose components.\r\n *\r\n * @param {Splide}   Splide     - Splide instance.\r\n * @param {Object}   Components - Additional components.\r\n * @param {function} Transition - Change component for transition.\r\n *\r\n * @return {Object} - An object containing all components.\r\n */\n\nfunction compose(Splide, Components, Transition) {\n  var components = {};\n  each(Components, function (Component, name) {\n    components[name] = Component(Splide, components, name.toLowerCase());\n  });\n\n  if (!Transition) {\n    Transition = Splide.is(FADE) ? fade : transitions_slide;\n  }\n\n  components.Transition = Transition(Splide, components);\n  return components;\n}\n// CONCATENATED MODULE: ./src/js/utils/error.js\n/**\r\n * Utility functions for outputting logs.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Prefix of an error massage.\r\n *\r\n * @type {string}\r\n */\nvar MESSAGE_PREFIX = '[SPLIDE]';\n/**\r\n * Display an error message on the browser console.\r\n *\r\n * @param {string} message - An error message.\r\n */\n\nfunction error_error(message) {\n  console.error(MESSAGE_PREFIX + \" \" + message);\n}\n/**\r\n * Check existence of the given object and throw an error if it doesn't.\r\n *\r\n * @throws {Error}\r\n *\r\n * @param {*}      subject - A subject to be confirmed.\r\n * @param {string} message - An error message.\r\n */\n\nfunction exist(subject, message) {\n  if (!subject) {\n    throw new Error(message);\n  }\n}\n// CONCATENATED MODULE: ./src/js/constants/classes.js\n/**\r\n * Export class names.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * A root class name.\r\n *\r\n * @type {string}\r\n */\nvar ROOT = 'splide';\n/**\r\n * The definition table of all classes for elements.\r\n * They might be modified by options.\r\n *\r\n * @type {Object}\r\n */\n\nvar ELEMENT_CLASSES = {\n  root: ROOT,\n  slider: ROOT + \"__slider\",\n  track: ROOT + \"__track\",\n  list: ROOT + \"__list\",\n  slide: ROOT + \"__slide\",\n  container: ROOT + \"__slide__container\",\n  arrows: ROOT + \"__arrows\",\n  arrow: ROOT + \"__arrow\",\n  prev: ROOT + \"__arrow--prev\",\n  next: ROOT + \"__arrow--next\",\n  pagination: ROOT + \"__pagination\",\n  page: ROOT + \"__pagination__page\",\n  clone: ROOT + \"__slide--clone\",\n  progress: ROOT + \"__progress\",\n  bar: ROOT + \"__progress__bar\",\n  autoplay: ROOT + \"__autoplay\",\n  play: ROOT + \"__play\",\n  pause: ROOT + \"__pause\",\n  spinner: ROOT + \"__spinner\",\n  sr: ROOT + \"__sr\"\n};\n/**\r\n * Definitions of status classes.\r\n *\r\n * @type {Object}\r\n */\n\nvar STATUS_CLASSES = {\n  active: 'is-active',\n  visible: 'is-visible',\n  loading: 'is-loading'\n};\n// CONCATENATED MODULE: ./src/js/constants/i18n.js\n/**\r\n * Export i18n texts as object.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Texts for i18n.\r\n *\r\n * @type {Object}\r\n */\nvar I18N = {\n  prev: 'Previous slide',\n  next: 'Next slide',\n  first: 'Go to first slide',\n  last: 'Go to last slide',\n  slideX: 'Go to slide %s',\n  pageX: 'Go to page %s',\n  play: 'Start autoplay',\n  pause: 'Pause autoplay'\n};\n// CONCATENATED MODULE: ./src/js/constants/defaults.js\n/**\r\n * Export default options.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\nvar DEFAULTS = {\n  /**\r\n   * Determine a slider type.\r\n   * - 'slide': Regular slider.\r\n   * - 'loop' : Carousel slider.\r\n   * - 'fade' : Change slides with fade transition. perPage, drag options are ignored.\r\n   *\r\n   * @type {string}\r\n   */\n  type: 'slide',\n\n  /**\r\n   * Whether to rewind a slider before the first slide or after the last one.\r\n   * In \"loop\" mode, this option is ignored.\r\n   *\r\n   * @type {boolean}\r\n   */\n  rewind: false,\n\n  /**\r\n   * Transition speed in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  speed: 400,\n\n  /**\r\n   * Transition speed on rewind in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  rewindSpeed: 0,\n\n  /**\r\n   * Whether to prevent any actions while a slider is transitioning.\r\n   * If false, navigation, drag and swipe work while the slider is running.\r\n   * Even so, it will be forced to wait for transition in some cases in the loop mode to shift a slider.\r\n   *\r\n   * @type {boolean}\r\n   */\n  waitForTransition: true,\n\n  /**\r\n   * Define slider max width.\r\n   *\r\n   * @type {number}\r\n   */\n  width: 0,\n\n  /**\r\n   * Define slider height.\r\n   *\r\n   * @type {number}\r\n   */\n  height: 0,\n\n  /**\r\n   * Fix width of slides. CSS format is allowed such as 10em, 80% or 80vw.\r\n   * perPage number will be ignored when this option is falsy.\r\n   *\r\n   * @type {number|string}\r\n   */\n  fixedWidth: 0,\n\n  /**\r\n   * Fix height of slides. CSS format is allowed such as 10em, 80vh but % unit is not accepted.\r\n   * heightRatio option will be ignored when this option is falsy.\r\n   *\r\n   * @type {number|string}\r\n   */\n  fixedHeight: 0,\n\n  /**\r\n   * Determine height of slides by ratio to a slider width.\r\n   * This will be ignored when the fixedHeight is provided.\r\n   *\r\n   * @type {number}\r\n   */\n  heightRatio: 0,\n\n  /**\r\n   * If true, slide width will be determined by the element width itself.\r\n   * - perPage/perMove should be 1.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoWidth: false,\n\n  /**\r\n   * If true, slide height will be determined by the element width itself.\r\n   * - perPage/perMove should be 1.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoHeight: false,\n\n  /**\r\n   * Determine how many slides should be displayed per page.\r\n   *\r\n   * @type {number}\r\n   */\n  perPage: 1,\n\n  /**\r\n   * Determine how many slides should be moved when a slider goes to next or perv.\r\n   *\r\n   * @type {number}\r\n   */\n  perMove: 0,\n\n  /**\r\n   * Determine manually how many clones should be generated on the left and right side.\r\n   * The total number of clones will be twice of this number.\r\n   *\r\n   * @type {number}\r\n   */\n  clones: 0,\n\n  /**\r\n   * Start index.\r\n   *\r\n   * @type {number}\r\n   */\n  start: 0,\n\n  /**\r\n   * Determine which slide should be focused if there are multiple slides in a page.\r\n   * A string \"center\" is acceptable for centering slides.\r\n   *\r\n   * @type {boolean|number|string}\r\n   */\n  focus: false,\n\n  /**\r\n   * Gap between slides. CSS format is allowed such as 1em.\r\n   *\r\n   * @type {number|string}\r\n   */\n  gap: 0,\n\n  /**\r\n   * Set padding-left/right in horizontal mode or padding-top/bottom in vertical one.\r\n   * Give a single value to set a same size for both sides or\r\n   * do an object for different sizes.\r\n   * Also, CSS format is allowed such as 1em.\r\n   *\r\n   * @example\r\n   * - 10: Number\r\n   * - '1em': CSS format.\r\n   * - { left: 0, right: 20 }: Object for different sizes in horizontal mode.\r\n   * - { top: 0, bottom: 20 }: Object for different sizes in vertical mode.\r\n   *\r\n   * @type {number|string|Object}\r\n   */\n  padding: 0,\n\n  /**\r\n   * Whether to append arrows.\r\n   *\r\n   * @type {boolean}\r\n   */\n  arrows: true,\n\n  /**\r\n   * Change the arrow SVG path like 'm7.61 0.807-2.12...'.\r\n   *\r\n   * @type {string}\r\n   */\n  arrowPath: '',\n\n  /**\r\n   * Whether to append pagination(indicator dots) or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pagination: true,\n\n  /**\r\n   * Activate autoplay.\r\n   *\r\n   * @type {boolean}\r\n   */\n  autoplay: false,\n\n  /**\r\n   * Autoplay interval in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\n  interval: 5000,\n\n  /**\r\n   * Whether to stop autoplay when a slider is hovered.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pauseOnHover: true,\n\n  /**\r\n   * Whether to stop autoplay when a slider elements are focused.\r\n   * True is recommended for accessibility.\r\n   *\r\n   * @type {boolean}\r\n   */\n  pauseOnFocus: true,\n\n  /**\r\n   * Whether to reset progress of the autoplay timer when resumed.\r\n   *\r\n   * @type {boolean}\r\n   */\n  resetProgress: true,\n\n  /**\r\n   * Loading images lazily.\r\n   * Image src must be provided by a data-splide-lazy attribute.\r\n   *\r\n   * - false: Do nothing.\r\n   * - 'nearby': Only images around an active slide will be loaded.\r\n   * - 'sequential': All images will be sequentially loaded.\r\n   *\r\n   * @type {boolean|string}\r\n   */\n  lazyLoad: false,\n\n  /**\r\n   * This option works only when a lazyLoad option is \"nearby\".\r\n   * Determine how many pages(not slides) around an active slide should be loaded beforehand.\r\n   *\r\n   * @type {number}\r\n   */\n  preloadPages: 1,\n\n  /**\r\n   * Easing for CSS transition. For example, linear, ease or cubic-bezier().\r\n   *\r\n   * @type {string}\r\n   */\n  easing: 'cubic-bezier(.42,.65,.27,.99)',\n\n  /**\r\n   * Whether to enable keyboard shortcuts\r\n   * - true or 'global': Listen to keydown event of the document.\r\n   * - 'focused': Listen to the keydown event of the slider root element. tabindex=\"0\" will be added to the element.\r\n   * - false: Disable keyboard shortcuts.\r\n   *\r\n   * @type {boolean|string}\r\n   */\n  keyboard: 'global',\n\n  /**\r\n   * Whether to allow mouse drag and touch swipe.\r\n   *\r\n   * @type {boolean}\r\n   */\n  drag: true,\n\n  /**\r\n   * The angle threshold for drag.\r\n   * The slider starts moving only when the drag angle is less than this threshold.\r\n   *\r\n   * @type {number}\r\n   */\n  dragAngleThreshold: 30,\n\n  /**\r\n   * Distance threshold for determining if the action is \"flick\" or \"swipe\".\r\n   * When a drag distance is over this value, the action will be treated as \"swipe\", not \"flick\".\r\n   *\r\n   * @type {number}\r\n   */\n  swipeDistanceThreshold: 150,\n\n  /**\r\n   * Velocity threshold for determining if the action is \"flick\" or \"swipe\".\r\n   * Around 0.5 is recommended.\r\n   *\r\n   * @type {number}\r\n   */\n  flickVelocityThreshold: .6,\n\n  /**\r\n   * Determine power of flick. The larger number this is, the farther a slider runs by flick.\r\n   * Around 500 is recommended.\r\n   *\r\n   * @type {number}\r\n   */\n  flickPower: 600,\n\n  /**\r\n   * Limit a number of pages to move by flick.\r\n   *\r\n   * @type {number}\r\n   */\n  flickMaxPages: 1,\n\n  /**\r\n   * Slider direction.\r\n   * - 'ltr': Left to right.\r\n   * - 'rtl': Right to left.\r\n   * - 'ttb': Top to bottom.\r\n   *\r\n   * @type {string}\r\n   */\n  direction: 'ltr',\n\n  /**\r\n   * Set img src to background-image of its parent element.\r\n   * Images with various sizes can be displayed as same dimension without cropping work.\r\n   * fixedHeight or heightRatio is required.\r\n   *\r\n   * @type {boolean}\r\n   */\n  cover: false,\n\n  /**\r\n   * Whether to enable accessibility(aria and screen reader texts) or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  accessibility: true,\n\n  /**\r\n   * Whether to add tabindex=\"0\" to visible slides or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  slideFocus: true,\n\n  /**\r\n   * Determine if a slider is navigation for another.\r\n   * Use \"sync\" API to synchronize two sliders.\r\n   *\r\n   * @type {boolean}\r\n   */\n  isNavigation: false,\n\n  /**\r\n   * Whether to trim spaces before the fist slide or after the last one when \"focus\" is not 0.\r\n   *\r\n   * @type {boolean}\r\n   */\n  trimSpace: true,\n\n  /**\r\n   * The \"is-active\" class is added after transition as default.\r\n   * If true, it will be added before move.\r\n   *\r\n   * @type {boolean}\r\n   */\n  updateOnMove: false,\n\n  /**\r\n   * Throttle duration in milliseconds for the resize event.\r\n   *\r\n   * @type {number}\r\n   */\n  throttle: 100,\n\n  /**\r\n   * Whether to destroy a slider or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  destroy: false,\n\n  /**\r\n   * Options for specific breakpoints.\r\n   *\r\n   * @example\r\n   * {\r\n   *   1000: {\r\n   *     perPage: 3,\r\n   *     gap: 20\r\n   *   },\r\n   *   600: {\r\n   *     perPage: 1,\r\n   *     gap: 5,\r\n   *   }\r\n   * }\r\n   *\r\n   * @type {boolean|Object}\r\n   */\n  breakpoints: false,\n\n  /**\r\n   * Collection of class names.\r\n   *\r\n   * @see ./classes.js\r\n   *\r\n   * @type {Object}\r\n   */\n  classes: ELEMENT_CLASSES,\n\n  /**\r\n   * Collection of i18n texts.\r\n   *\r\n   * @see ./i18n.js\r\n   *\r\n   * @type {Object}\r\n   */\n  i18n: I18N\n};\n// CONCATENATED MODULE: ./src/js/constants/states.js\n/**\r\n * Export state constants.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Splide has been just created.\r\n *\r\n * @type {number}\r\n */\nvar CREATED = 1;\n/**\r\n * All components have been mounted and initialized.\r\n *\r\n * @type {number}\r\n */\n\nvar MOUNTED = 2;\n/**\r\n * Splide is ready for transition.\r\n *\r\n * @type {number}\r\n */\n\nvar IDLE = 3;\n/**\r\n * Splide is moving.\r\n *\r\n * @type {number}\r\n */\n\nvar MOVING = 4;\n/**\r\n * Splide is moving.\r\n *\r\n * @type {number}\r\n */\n\nvar DESTROYED = 5;\n// CONCATENATED MODULE: ./src/js/splide.js\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * The main class for applying Splide to an element.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n\n/**\r\n * The main class for applying Splide to an element,\r\n * providing some APIs to control the behavior.\r\n */\n\nvar splide_Splide = /*#__PURE__*/function () {\n  /**\r\n   * Splide constructor.\r\n   *\r\n   * @throws {Error} When the given root element or selector is invalid.\r\n   *\r\n   * @param {Element|string}  root       - A selector for a root element or an element itself.\r\n   * @param {Object}          options    - Optional. Options to change default behaviour.\r\n   * @param {Object}          Components - Optional. Components.\r\n   */\n  function Splide(root, options, Components) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (Components === void 0) {\n      Components = {};\n    }\n\n    this.root = root instanceof Element ? root : document.querySelector(root);\n    exist(this.root, 'An invalid element/selector was given.');\n    this.Components = null;\n    this.Event = core_event();\n    this.State = state(CREATED);\n    this.STATES = states_namespaceObject;\n    this._o = merge(DEFAULTS, options);\n    this._i = 0;\n    this._c = Components;\n    this._e = {}; // Extensions\n\n    this._t = null; // Transition\n  }\n  /**\r\n   * Compose and mount components.\r\n   *\r\n   * @param {Object}   Extensions - Optional. Additional components.\r\n   * @param {function} Transition - Optional. Set a custom transition component.\r\n   *\r\n   * @return {Splide|undefined} - This instance or undefined if an exception occurred.\r\n   */\n\n\n  var _proto = Splide.prototype;\n\n  _proto.mount = function mount(Extensions, Transition) {\n    var _this = this;\n\n    if (Extensions === void 0) {\n      Extensions = this._e;\n    }\n\n    if (Transition === void 0) {\n      Transition = this._t;\n    }\n\n    // Reset the state.\n    this.State.set(CREATED);\n    this._e = Extensions;\n    this._t = Transition;\n    this.Components = compose(this, merge(this._c, Extensions), Transition);\n\n    try {\n      each(this.Components, function (component, key) {\n        var required = component.required;\n\n        if (required === undefined || required) {\n          component.mount && component.mount();\n        } else {\n          delete _this.Components[key];\n        }\n      });\n    } catch (e) {\n      error_error(e.message);\n      return;\n    }\n\n    var State = this.State;\n    State.set(MOUNTED);\n    each(this.Components, function (component) {\n      component.mounted && component.mounted();\n    });\n    this.emit('mounted');\n    State.set(IDLE);\n    this.emit('ready');\n    applyStyle(this.root, {\n      visibility: 'visible'\n    });\n    this.on('move drag', function () {\n      return State.set(MOVING);\n    }).on('moved dragged', function () {\n      return State.set(IDLE);\n    });\n    return this;\n  }\n  /**\r\n   * Set sync target.\r\n   *\r\n   * @param {Splide} splide - A Splide instance.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.sync = function sync(splide) {\n    this.sibling = splide;\n    return this;\n  }\n  /**\r\n   * Register callback fired on the given event(s).\r\n   *\r\n   * @param {string}   events  - An event name. Use space to separate multiple events.\r\n   *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n   * @param {function} handler - A callback function.\r\n   * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n   * @param {Object}   options - Optional. Options for addEventListener.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.on = function on(events, handler, elm, options) {\n    if (elm === void 0) {\n      elm = null;\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.Event.on(events, handler, elm, options);\n    return this;\n  }\n  /**\r\n   * Unsubscribe the given event.\r\n   *\r\n   * @param {string}  events - A event name.\r\n   * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\n  ;\n\n  _proto.off = function off(events, elm) {\n    if (elm === void 0) {\n      elm = null;\n    }\n\n    this.Event.off(events, elm);\n    return this;\n  }\n  /**\r\n   * Emit an event.\r\n   *\r\n   * @param {string} event - An event name.\r\n   * @param {*}      args  - Any number of arguments passed to handlers.\r\n   */\n  ;\n\n  _proto.emit = function emit(event) {\n    var _this$Event;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    (_this$Event = this.Event).emit.apply(_this$Event, [event].concat(args));\n\n    return this;\n  }\n  /**\r\n   * Go to the slide specified by the given control.\r\n   *\r\n   * @param {string|number} control - A control pattern.\r\n   * @param {boolean}       wait    - Optional. Whether to wait for transition.\r\n   */\n  ;\n\n  _proto.go = function go(control, wait) {\n    if (wait === void 0) {\n      wait = this.options.waitForTransition;\n    }\n\n    if (this.State.is(IDLE) || this.State.is(MOVING) && !wait) {\n      this.Components.Controller.go(control, false);\n    }\n\n    return this;\n  }\n  /**\r\n   * Verify whether the slider type is the given one or not.\r\n   *\r\n   * @param {string} type - A slider type.\r\n   *\r\n   * @return {boolean} - True if the slider type is the provided type or false if not.\r\n   */\n  ;\n\n  _proto.is = function is(type) {\n    return type === this._o.type;\n  }\n  /**\r\n   * Insert a slide.\r\n   *\r\n   * @param {Element|string} slide - A slide element to be added.\r\n   * @param {number}         index - A slide will be added at the position.\r\n   */\n  ;\n\n  _proto.add = function add(slide, index) {\n    if (index === void 0) {\n      index = -1;\n    }\n\n    this.Components.Elements.add(slide, index, this.refresh.bind(this));\n    return this;\n  }\n  /**\r\n   * Remove the slide designated by the index.\r\n   *\r\n   * @param {number} index - A slide index.\r\n   */\n  ;\n\n  _proto.remove = function remove(index) {\n    this.Components.Elements.remove(index);\n    this.refresh();\n    return this;\n  }\n  /**\r\n   * Destroy all Slide objects and clones and recreate them again.\r\n   */\n  ;\n\n  _proto.refresh = function refresh() {\n    this.emit('refresh').emit('resize');\n    return this;\n  }\n  /**\r\n   * Destroy the Splide.\r\n   * \"Completely\" boolean is mainly for breakpoints.\r\n   *\r\n   * @param {boolean} completely - Destroy completely.\r\n   */\n  ;\n\n  _proto.destroy = function destroy(completely) {\n    var _this2 = this;\n\n    if (completely === void 0) {\n      completely = true;\n    }\n\n    // Postpone destroy because it should be done after mount.\n    if (this.State.is(CREATED)) {\n      this.on('ready', function () {\n        return _this2.destroy(completely);\n      });\n      return;\n    }\n\n    values(this.Components).reverse().forEach(function (component) {\n      component.destroy && component.destroy(completely);\n    });\n    this.emit('destroy', completely); // Destroy all event handlers, including ones for native events.\n\n    this.Event.destroy();\n    this.State.set(DESTROYED);\n    return this;\n  }\n  /**\r\n   * Return the current slide index.\r\n   *\r\n   * @return {number} - The current slide index.\r\n   // */\n  ;\n\n  _createClass(Splide, [{\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Set the current slide index.\r\n     *\r\n     * @param {number|string} index - A new index.\r\n     */\n    ,\n    set: function set(index) {\n      this._i = parseInt(index);\n    }\n    /**\r\n     * Return length of slides.\r\n     * This is an alias of Elements.length.\r\n     *\r\n     * @return {number} - A number of slides.\r\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.Components.Elements.length;\n    }\n    /**\r\n     * Return options.\r\n     *\r\n     * @return {Object} - Options object.\r\n     */\n\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Set options with merging the given object to the current one.\r\n     *\r\n     * @param {Object} options - New options.\r\n     */\n    ,\n    set: function set(options) {\n      var created = this.State.is(CREATED);\n\n      if (!created) {\n        this.emit('update');\n      }\n\n      this._o = merge(this._o, options);\n\n      if (!created) {\n        this.emit('updated', this._o);\n      }\n    }\n    /**\r\n     * Return the class list.\r\n     * This is an alias of Splide.options.classList.\r\n     *\r\n     * @return {Object} - An object containing all class list.\r\n     */\n\n  }, {\n    key: \"classes\",\n    get: function get() {\n      return this._o.classes;\n    }\n    /**\r\n     * Return the i18n strings.\r\n     * This is an alias of Splide.options.i18n.\r\n     *\r\n     * @return {Object} - An object containing all i18n strings.\r\n     */\n\n  }, {\n    key: \"i18n\",\n    get: function get() {\n      return this._o.i18n;\n    }\n  }]);\n\n  return Splide;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/options/index.js\n/**\r\n * The component for initializing options.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for initializing options.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_options = (function (Splide) {\n  /**\r\n   * Retrieve options from the data attribute.\r\n   * Note that IE10 doesn't support dataset property.\r\n   *\r\n   * @type {string}\r\n   */\n  var options = getAttribute(Splide.root, 'data-splide');\n\n  if (options) {\n    try {\n      Splide.options = JSON.parse(options);\n    } catch (e) {\n      error_error(e.message);\n    }\n  }\n\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      if (Splide.State.is(CREATED)) {\n        Splide.index = Splide.options.start;\n      }\n    }\n  };\n});\n// CONCATENATED MODULE: ./src/js/constants/directions.js\n/**\r\n * Export layout modes.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Enumerate slides from left to right.\r\n *\r\n * @type {string}\r\n */\nvar LTR = 'ltr';\n/**\r\n * Enumerate slides from right to left.\r\n *\r\n * @type {string}\r\n */\n\nvar RTL = 'rtl';\n/**\r\n * Enumerate slides in a col.\r\n *\r\n * @type {string}\r\n */\n\nvar TTB = 'ttb';\n// CONCATENATED MODULE: ./src/js/components/elements/slide.js\n/**\r\n * The sub component for handling each slide.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n/**\r\n * Events for restoring original styles.\r\n *\r\n * @type {string}\r\n */\n\nvar STYLE_RESTORE_EVENTS = 'update.slide';\n/**\r\n * The sub component for handling each slide.\r\n *\r\n * @param {Splide}  Splide    - A Splide instance.\r\n * @param {number}  index     - An unique slide index.\r\n * @param {number}  realIndex - Clones should pass a real slide index.\r\n * @param {Element} slide     - A slide element.\r\n *\r\n * @return {Object} - The sub component object.\r\n */\n\n/* harmony default export */ var elements_slide = (function (Splide, index, realIndex, slide) {\n  /**\r\n   * Whether to update \"is-active\" class before or after transition.\r\n   *\r\n   * @type {boolean}\r\n   */\n  var updateOnMove = Splide.options.updateOnMove;\n  /**\r\n   * Events when the slide status is updated.\r\n   * Append a namespace to remove listeners later.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var STATUS_UPDATE_EVENTS = 'ready.slide updated.slide resize.slide moved.slide' + (updateOnMove ? ' move.slide' : '');\n  /**\r\n   * Slide sub component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Slide = {\n    /**\r\n     * Slide element.\r\n     *\r\n     * @type {Element}\r\n     */\n    slide: slide,\n\n    /**\r\n     * Slide index.\r\n     *\r\n     * @type {number}\r\n     */\n    index: index,\n\n    /**\r\n     * Real index for clones.\r\n     *\r\n     * @type {number}\r\n     */\n    realIndex: realIndex,\n\n    /**\r\n     * Container element if available.\r\n     *\r\n     * @type {Element|undefined}\r\n     */\n    container: child(slide, Splide.classes.container),\n\n    /**\r\n     * Whether this is a cloned slide or not.\r\n     *\r\n     * @type {boolean}\r\n     */\n    isClone: realIndex > -1,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      if (!this.isClone) {\n        slide.id = Splide.root.id + \"-slide\" + pad(index + 1);\n      }\n\n      Splide.on(STATUS_UPDATE_EVENTS, function () {\n        return _this.update();\n      }).on(STYLE_RESTORE_EVENTS, restoreStyles).on('click', function () {\n        return Splide.emit('click', _this);\n      }, slide);\n      /*\r\n       * Add \"is-active\" class to a clone element temporarily\r\n       * and it will be removed on \"moved\" event.\r\n       */\n\n      if (updateOnMove) {\n        Splide.on('move.slide', function (newIndex) {\n          if (newIndex === realIndex) {\n            _update(true, false);\n          }\n        });\n      } // Make sure the slide is shown.\n\n\n      applyStyle(slide, {\n        display: ''\n      }); // Hold the original styles.\n\n      this.styles = getAttribute(slide, 'style') || '';\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      Splide.off(STATUS_UPDATE_EVENTS).off(STYLE_RESTORE_EVENTS).off('click', slide);\n      removeClass(slide, values(STATUS_CLASSES));\n      restoreStyles();\n      removeAttribute(this.container, 'style');\n    },\n\n    /**\r\n     * Update active and visible status.\r\n     */\n    update: function update() {\n      _update(this.isActive(), false);\n\n      _update(this.isVisible(), true);\n    },\n\n    /**\r\n     * Check whether this slide is active or not.\r\n     *\r\n     * @return {boolean} - True if the slide is active or false if not.\r\n     */\n    isActive: function isActive() {\n      return Splide.index === index;\n    },\n\n    /**\r\n     * Check whether this slide is visible in the viewport or not.\r\n     *\r\n     * @return {boolean} - True if the slide is visible or false if not.\r\n     */\n    isVisible: function isVisible() {\n      var active = this.isActive();\n\n      if (Splide.is(FADE) || active) {\n        return active;\n      }\n\n      var trackRect = getRect(Splide.Components.Elements.track);\n      var slideRect = getRect(slide);\n\n      if (Splide.options.direction === TTB) {\n        return trackRect.top <= slideRect.top && slideRect.bottom <= trackRect.bottom;\n      }\n\n      return trackRect.left <= slideRect.left && slideRect.right <= trackRect.right;\n    },\n\n    /**\r\n     * Calculate how far this slide is from another slide and\r\n     * return true if the distance is within the given number.\r\n     *\r\n     * @param {number} from   - Index of a target slide.\r\n     * @param {number} within - True if the slide is within this number.\r\n     *\r\n     * @return {boolean} - True if the slide is within the number or false otherwise.\r\n     */\n    isWithin: function isWithin(from, within) {\n      var diff = Math.abs(from - index);\n\n      if (!Splide.is(SLIDE) && !this.isClone) {\n        diff = Math.min(diff, Splide.length - diff);\n      }\n\n      return diff < within;\n    }\n  };\n  /**\r\n   * Update classes for activity or visibility.\r\n   *\r\n   * @param {boolean} active        - Is active/visible or not.\r\n   * @param {boolean} forVisibility - Toggle classes for activity or visibility.\r\n   */\n\n  function _update(active, forVisibility) {\n    var type = forVisibility ? 'visible' : 'active';\n    var className = STATUS_CLASSES[type];\n\n    if (active) {\n      addClass(slide, className);\n      Splide.emit(\"\" + type, Slide);\n    } else {\n      if (hasClass(slide, className)) {\n        removeClass(slide, className);\n        Splide.emit(\"\" + (forVisibility ? 'hidden' : 'inactive'), Slide);\n      }\n    }\n  }\n  /**\r\n   * Restore the original styles.\r\n   */\n\n\n  function restoreStyles() {\n    setAttribute(slide, 'style', Slide.styles);\n  }\n\n  return Slide;\n});\n// CONCATENATED MODULE: ./src/js/components/elements/index.js\n/**\r\n * The component for main elements.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n/**\r\n * The property name for UID stored in a window object.\r\n *\r\n * @type {string}\r\n */\n\nvar UID_NAME = 'uid';\n/**\r\n * The component for main elements.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_elements = (function (Splide, Components) {\n  /**\r\n   * Hold the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n  var root = Splide.root;\n  /**\r\n   * Hold the class list.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var classes = Splide.classes;\n  /**\r\n   * Store Slide objects.\r\n   *\r\n   * @type {Array}\r\n   */\n\n  var Slides = [];\n  /*\r\n   * Assign unique ID to the root element if it doesn't have the one.\r\n   * Note that IE doesn't support padStart() to fill the uid by 0.\r\n   */\n\n  if (!root.id) {\n    window.splide = window.splide || {};\n    var uid = window.splide[UID_NAME] || 0;\n    window.splide[UID_NAME] = ++uid;\n    root.id = \"splide\" + pad(uid);\n  }\n  /**\r\n   * Elements component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n\n  var Elements = {\n    /**\r\n     * Called when the component is mounted.\r\n     * Collect main elements and store them as member properties.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      this.init();\n      Splide.on('refresh', function () {\n        _this.destroy();\n\n        _this.init();\n      }).on('updated', function () {\n        removeClass(root, getClasses());\n        addClass(root, getClasses());\n      });\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      Slides.forEach(function (Slide) {\n        Slide.destroy();\n      });\n      Slides = [];\n      removeClass(root, getClasses());\n    },\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      var _this2 = this;\n\n      collect();\n      addClass(root, getClasses());\n      this.slides.forEach(function (slide, index) {\n        _this2.register(slide, index, -1);\n      });\n    },\n\n    /**\r\n     * Register a slide to create a Slide object and handle its behavior.\r\n     *\r\n     * @param {Element} slide     - A slide element.\r\n     * @param {number}  index     - A unique index. This can be negative.\r\n     * @param {number}  realIndex - A real index for clones. Set -1 for real slides.\r\n     */\n    register: function register(slide, index, realIndex) {\n      var SlideObject = elements_slide(Splide, index, realIndex, slide);\n      SlideObject.mount();\n      Slides.push(SlideObject);\n    },\n\n    /**\r\n     * Return the Slide object designated by the index.\r\n     * Note that \"find\" is not supported by IE.\r\n     *\r\n     * @return {Object|undefined} - A Slide object if available. Undefined if not.\r\n     */\n    getSlide: function getSlide(index) {\n      return Slides.filter(function (Slide) {\n        return Slide.index === index;\n      })[0];\n    },\n\n    /**\r\n     * Return all Slide objects.\r\n     *\r\n     * @param {boolean} includeClones - Whether to include cloned slides or not.\r\n     *\r\n     * @return {Object[]} - Slide objects.\r\n     */\n    getSlides: function getSlides(includeClones) {\n      return includeClones ? Slides : Slides.filter(function (Slide) {\n        return !Slide.isClone;\n      });\n    },\n\n    /**\r\n     * Return Slide objects belonging to the given page.\r\n     *\r\n     * @param {number} page - A page number.\r\n     *\r\n     * @return {Object[]} - An array containing Slide objects.\r\n     */\n    getSlidesByPage: function getSlidesByPage(page) {\n      var idx = Components.Controller.toIndex(page);\n      var options = Splide.options;\n      var max = options.focus !== false ? 1 : options.perPage;\n      return Slides.filter(function (_ref) {\n        var index = _ref.index;\n        return idx <= index && index < idx + max;\n      });\n    },\n\n    /**\r\n     * Insert a slide to a slider.\r\n     * Need to refresh Splide after adding a slide.\r\n     *\r\n     * @param {Node|string} slide    - A slide element to be added.\r\n     * @param {number}      index    - A slide will be added at the position.\r\n     * @param {Function}    callback - Called right after the slide is added to the DOM tree.\r\n     */\n    add: function add(slide, index, callback) {\n      if (typeof slide === 'string') {\n        slide = domify(slide);\n      }\n\n      if (slide instanceof Element) {\n        var ref = this.slides[index]; // This will be removed in mount() of a Slide component.\n\n        applyStyle(slide, {\n          display: 'none'\n        });\n\n        if (ref) {\n          before(slide, ref);\n          this.slides.splice(index, 0, slide);\n        } else {\n          append(this.list, slide);\n          this.slides.push(slide);\n        }\n\n        dom_loaded(slide, function () {\n          callback && callback(slide);\n        });\n      }\n    },\n\n    /**\r\n     * Remove a slide from a slider.\r\n     * Need to refresh Splide after removing a slide.\r\n     *\r\n     * @param index - Slide index.\r\n     */\n    remove: function remove(index) {\n      dom_remove(this.slides.splice(index, 1)[0]);\n    },\n\n    /**\r\n     * Trigger the provided callback for each Slide object.\r\n     *\r\n     * @param {Function} callback - A callback function. The first argument will be the Slide object.\r\n     */\n    each: function each(callback) {\n      Slides.forEach(callback);\n    },\n\n    /**\r\n     * Return slides length without clones.\r\n     *\r\n     * @return {number} - Slide length.\r\n     */\n    get length() {\n      return this.slides.length;\n    },\n\n    /**\r\n     * Return \"SlideObjects\" length including clones.\r\n     *\r\n     * @return {number} - Slide length including clones.\r\n     */\n    get total() {\n      return Slides.length;\n    }\n\n  };\n  /**\r\n   * Collect elements.\r\n   */\n\n  function collect() {\n    Elements.slider = child(root, classes.slider);\n    Elements.track = find(root, \".\" + classes.track);\n    Elements.list = child(Elements.track, classes.list);\n    exist(Elements.track && Elements.list, 'Track or list was not found.');\n    Elements.slides = children(Elements.list, classes.slide);\n    var arrows = findParts(classes.arrows);\n    Elements.arrows = {\n      prev: find(arrows, \".\" + classes.prev),\n      next: find(arrows, \".\" + classes.next)\n    };\n    var autoplay = findParts(classes.autoplay);\n    Elements.bar = find(findParts(classes.progress), \".\" + classes.bar);\n    Elements.play = find(autoplay, \".\" + classes.play);\n    Elements.pause = find(autoplay, \".\" + classes.pause);\n    Elements.track.id = Elements.track.id || root.id + \"-track\";\n    Elements.list.id = Elements.list.id || root.id + \"-list\";\n  }\n  /**\r\n   * Return class names for the root element.\r\n   */\n\n\n  function getClasses() {\n    var rootClass = classes.root;\n    var options = Splide.options;\n    return [rootClass + \"--\" + options.type, rootClass + \"--\" + options.direction, options.drag ? rootClass + \"--draggable\" : '', options.isNavigation ? rootClass + \"--nav\" : '', STATUS_CLASSES.active];\n  }\n  /**\r\n   * Find parts only from children of the root or track.\r\n   *\r\n   * @return {Element} - A found element or undefined.\r\n   */\n\n\n  function findParts(className) {\n    return child(root, className) || child(Elements.slider, className);\n  }\n\n  return Elements;\n});\n// CONCATENATED MODULE: ./src/js/components/controller/index.js\n/**\r\n * The component for controlling the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\nvar floor = Math.floor;\n/**\r\n * The component for controlling the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var controller = (function (Splide, Components) {\n  /**\r\n   * Store current options.\r\n   *\r\n   * @type {Object}\r\n   */\n  var options;\n  /**\r\n   * True if the slide is LOOP mode.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isLoop;\n  /**\r\n   * Controller component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Controller = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      options = Splide.options;\n      isLoop = Splide.is(LOOP);\n      bind();\n    },\n\n    /**\r\n     * Make track run by the given control.\r\n     * - \"+{i}\" : Increment the slide index by i.\r\n     * - \"-{i}\" : Decrement the slide index by i.\r\n     * - \"{i}\"  : Go to the slide whose index is i.\r\n     * - \">\"    : Go to next page.\r\n     * - \"<\"    : Go to prev page.\r\n     * - \">{i}\" : Go to page i.\r\n     *\r\n     * @param {string|number} control  - A control pattern.\r\n     * @param {boolean}       silently - Go to the destination without event emission.\r\n     */\n    go: function go(control, silently) {\n      var destIndex = this.trim(this.parse(control));\n      Components.Track.go(destIndex, this.rewind(destIndex), silently);\n    },\n\n    /**\r\n     * Parse the given control and return the destination index for the track.\r\n     *\r\n     * @param {string} control - A control target pattern.\r\n     *\r\n     * @return {number} - A parsed target.\r\n     */\n    parse: function parse(control) {\n      var index = Splide.index;\n      var matches = String(control).match(/([+\\-<>]+)(\\d+)?/);\n      var indicator = matches ? matches[1] : '';\n      var number = matches ? parseInt(matches[2]) : 0;\n\n      switch (indicator) {\n        case '+':\n          index += number || 1;\n          break;\n\n        case '-':\n          index -= number || 1;\n          break;\n\n        case '>':\n        case '<':\n          index = parsePage(number, index, indicator === '<');\n          break;\n\n        default:\n          index = parseInt(control);\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Compute index from the given page number.\r\n     *\r\n     * @param {number} page - Page number.\r\n     *\r\n     * @return {number} - A computed page number.\r\n     */\n    toIndex: function toIndex(page) {\n      if (hasFocus()) {\n        return page;\n      }\n\n      var length = Splide.length;\n      var perPage = options.perPage;\n      var index = page * perPage;\n      index = index - (this.pageLength * perPage - length) * floor(index / length); // Adjustment for the last page.\n\n      if (length - perPage <= index && index < length) {\n        index = length - perPage;\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Compute page number from the given slide index.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - A computed page number.\r\n     */\n    toPage: function toPage(index) {\n      if (hasFocus()) {\n        return index;\n      }\n\n      var length = Splide.length;\n      var perPage = options.perPage; // Make the last \"perPage\" number of slides belong to the last page.\n\n      if (length - perPage <= index && index < length) {\n        return floor((length - 1) / perPage);\n      }\n\n      return floor(index / perPage);\n    },\n\n    /**\r\n     * Trim the given index according to the current mode.\r\n     * Index being returned could be less than 0 or greater than the length in Loop mode.\r\n     *\r\n     * @param {number} index - An index being trimmed.\r\n     *\r\n     * @return {number} - A trimmed index.\r\n     */\n    trim: function trim(index) {\n      if (!isLoop) {\n        index = options.rewind ? this.rewind(index) : between(index, 0, this.edgeIndex);\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Rewind the given index if it's out of range.\r\n     *\r\n     * @param {number} index - An index.\r\n     *\r\n     * @return {number} - A rewound index.\r\n     */\n    rewind: function rewind(index) {\n      var edge = this.edgeIndex;\n\n      if (isLoop) {\n        while (index > edge) {\n          index -= edge + 1;\n        }\n\n        while (index < 0) {\n          index += edge + 1;\n        }\n      } else {\n        if (index > edge) {\n          index = 0;\n        } else if (index < 0) {\n          index = edge;\n        }\n      }\n\n      return index;\n    },\n\n    /**\r\n     * Check if the direction is \"rtl\" or not.\r\n     *\r\n     * @return {boolean} - True if \"rtl\" or false if not.\r\n     */\n    isRtl: function isRtl() {\n      return options.direction === RTL;\n    },\n\n    /**\r\n     * Return the page length.\r\n     *\r\n     * @return {number} - Max page number.\r\n     */\n    get pageLength() {\n      var length = Splide.length;\n      return hasFocus() ? length : Math.ceil(length / options.perPage);\n    },\n\n    /**\r\n     * Return the edge index.\r\n     *\r\n     * @return {number} - Edge index.\r\n     */\n    get edgeIndex() {\n      var length = Splide.length;\n\n      if (!length) {\n        return 0;\n      }\n\n      if (hasFocus() || options.isNavigation || isLoop) {\n        return length - 1;\n      }\n\n      return length - options.perPage;\n    },\n\n    /**\r\n     * Return the index of the previous slide.\r\n     *\r\n     * @return {number} - The index of the previous slide if available. -1 otherwise.\r\n     */\n    get prevIndex() {\n      var prev = Splide.index - 1;\n\n      if (isLoop || options.rewind) {\n        prev = this.rewind(prev);\n      }\n\n      return prev > -1 ? prev : -1;\n    },\n\n    /**\r\n     * Return the index of the next slide.\r\n     *\r\n     * @return {number} - The index of the next slide if available. -1 otherwise.\r\n     */\n    get nextIndex() {\n      var next = Splide.index + 1;\n\n      if (isLoop || options.rewind) {\n        next = this.rewind(next);\n      }\n\n      return Splide.index < next && next <= this.edgeIndex || next === 0 ? next : -1;\n    }\n\n  };\n  /**\r\n   * Listen to some events.\r\n   */\n\n  function bind() {\n    Splide.on('move', function (newIndex) {\n      Splide.index = newIndex;\n    }).on('updated refresh', function (newOptions) {\n      options = newOptions || options;\n      Splide.index = between(Splide.index, 0, Controller.edgeIndex);\n    });\n  }\n  /**\r\n   * Verify if the focus option is available or not.\r\n   *\r\n   * @return {boolean} - True if a slider has the focus option.\r\n   */\n\n\n  function hasFocus() {\n    return options.focus !== false;\n  }\n  /**\r\n   * Return the next or previous page index computed by the page number and current index.\r\n   *\r\n   * @param {number}  number - Specify the page number.\r\n   * @param {number}  index  - Current index.\r\n   * @param {boolean} prev   - Prev or next.\r\n   *\r\n   * @return {number} - Slide index.\r\n   */\n\n\n  function parsePage(number, index, prev) {\n    if (number > -1) {\n      return Controller.toIndex(number);\n    }\n\n    var perMove = options.perMove;\n    var sign = prev ? -1 : 1;\n\n    if (perMove) {\n      return index + perMove * sign;\n    }\n\n    return Controller.toIndex(Controller.toPage(index) + sign);\n  }\n\n  return Controller;\n});\n// CONCATENATED MODULE: ./src/js/components/track/index.js\n/**\r\n * The component for moving list in the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\nvar abs = Math.abs;\n/**\r\n * The component for moving list in the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_track = (function (Splide, Components) {\n  /**\r\n   * Hold the Layout component.\r\n   *\r\n   * @type {Object}\r\n   */\n  var Layout;\n  /**\r\n   * Hold the Layout component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements;\n  /**\r\n   * Store the list element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var list;\n  /**\r\n   * Whether the current direction is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Whether the slider type is FADE or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isFade = Splide.is(FADE);\n  /**\r\n   * Whether the slider direction is RTL or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isRTL = Splide.options.direction === RTL;\n  /**\r\n   * This will be true while transitioning from the last index to the first one.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isLoopPending = false;\n  /**\r\n   * Sign for the direction. Only RTL mode uses the positive sign.\r\n   *\r\n   * @type {number}\r\n   */\n\n  var sign = isRTL ? 1 : -1;\n  /**\r\n   * Track component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Track = {\n    /**\r\n     * Make public the sign defined locally.\r\n     *\r\n     * @type {number}\r\n     */\n    sign: sign,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Elements = Components.Elements;\n      Layout = Components.Layout;\n      list = Elements.list;\n    },\n\n    /**\r\n     * Called after the component is mounted.\r\n     * The resize event must be registered after the Layout's one is done.\r\n     */\n    mounted: function mounted() {\n      var _this = this;\n\n      if (!isFade) {\n        this.jump(0);\n        Splide.on('mounted resize updated', function () {\n          _this.jump(Splide.index);\n        });\n      }\n    },\n\n    /**\r\n     * Go to the given destination index.\r\n     * After arriving there, the track is jump to the new index without animation, mainly for loop mode.\r\n     *\r\n     * @param {number}  destIndex - A destination index.\r\n     *                              This can be negative or greater than slides length for reaching clones.\r\n     * @param {number}  newIndex  - An actual new index. They are always same in Slide and Rewind mode.\r\n     * @param {boolean} silently  - If true, suppress emitting events.\r\n     */\n    go: function go(destIndex, newIndex, silently) {\n      var newPosition = getTrimmedPosition(destIndex);\n      var prevIndex = Splide.index; // Prevent any actions while transitioning from the last index to the first one for jump.\n\n      if (Splide.State.is(MOVING) && isLoopPending) {\n        return;\n      }\n\n      isLoopPending = destIndex !== newIndex;\n\n      if (!silently) {\n        Splide.emit('move', newIndex, prevIndex, destIndex);\n      }\n\n      if (Math.abs(newPosition - this.position) >= 1 || isFade) {\n        Components.Transition.start(destIndex, newIndex, prevIndex, this.toCoord(newPosition), function () {\n          onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n        });\n      } else {\n        if (destIndex !== prevIndex && Splide.options.trimSpace === 'move') {\n          Components.Controller.go(destIndex + destIndex - prevIndex, silently);\n        } else {\n          onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n        }\n      }\n    },\n\n    /**\r\n     * Move the track to the specified index.\r\n     *\r\n     * @param {number} index - A destination index where the track jumps.\r\n     */\n    jump: function jump(index) {\n      this.translate(getTrimmedPosition(index));\n    },\n\n    /**\r\n     * Set the list position by CSS translate property.\r\n     *\r\n     * @param {number} position - A new position value.\r\n     */\n    translate: function translate(position) {\n      applyStyle(list, {\n        transform: \"translate\" + (isVertical ? 'Y' : 'X') + \"(\" + position + \"px)\"\n      });\n    },\n\n    /**\r\n     * Cancel the transition and set the list position.\r\n     * Also, loop the slider if necessary.\r\n     */\n    cancel: function cancel() {\n      if (Splide.is(LOOP)) {\n        this.shift();\n      } else {\n        // Ensure the current position.\n        this.translate(this.position);\n      }\n\n      applyStyle(list, {\n        transition: ''\n      });\n    },\n\n    /**\r\n     * Shift the slider if it exceeds borders on the edge.\r\n     */\n    shift: function shift() {\n      var position = abs(this.position);\n      var left = abs(this.toPosition(0));\n      var right = abs(this.toPosition(Splide.length));\n      var innerSize = right - left;\n\n      if (position < left) {\n        position += innerSize;\n      } else if (position > right) {\n        position -= innerSize;\n      }\n\n      this.translate(sign * position);\n    },\n\n    /**\r\n     * Trim redundant spaces on the left or right edge if necessary.\r\n     *\r\n     * @param {number} position - Position value to be trimmed.\r\n     *\r\n     * @return {number} - Trimmed position.\r\n     */\n    trim: function trim(position) {\n      if (!Splide.options.trimSpace || Splide.is(LOOP)) {\n        return position;\n      }\n\n      var edge = sign * (Layout.totalSize() - Layout.size - Layout.gap);\n      return between(position, edge, 0);\n    },\n\n    /**\r\n     * Calculate the closest slide index from the given position.\r\n     *\r\n     * @param {number} position - A position converted to an slide index.\r\n     *\r\n     * @return {number} - The closest slide index.\r\n     */\n    toIndex: function toIndex(position) {\n      var _this2 = this;\n\n      var index = 0;\n      var minDistance = Infinity;\n      Elements.getSlides(true).forEach(function (Slide) {\n        var slideIndex = Slide.index;\n        var distance = abs(_this2.toPosition(slideIndex) - position);\n\n        if (distance < minDistance) {\n          minDistance = distance;\n          index = slideIndex;\n        }\n      });\n      return index;\n    },\n\n    /**\r\n     * Return coordinates object by the given position.\r\n     *\r\n     * @param {number} position - A position value.\r\n     *\r\n     * @return {Object} - A coordinates object.\r\n     */\n    toCoord: function toCoord(position) {\n      return {\n        x: isVertical ? 0 : position,\n        y: isVertical ? position : 0\n      };\n    },\n\n    /**\r\n     * Calculate the track position by a slide index.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {Object} - Calculated position.\r\n     */\n    toPosition: function toPosition(index) {\n      var position = Layout.totalSize(index) - Layout.slideSize(index) - Layout.gap;\n      return sign * (position + this.offset(index));\n    },\n\n    /**\r\n     * Return the current offset value, considering direction.\r\n     *\r\n     * @return {number} - Offset amount.\r\n     */\n    offset: function offset(index) {\n      var focus = Splide.options.focus;\n      var slideSize = Layout.slideSize(index);\n\n      if (focus === 'center') {\n        return -(Layout.size - slideSize) / 2;\n      }\n\n      return -(parseInt(focus) || 0) * (slideSize + Layout.gap);\n    },\n\n    /**\r\n     * Return the current position.\r\n     * This returns the correct position even while transitioning by CSS.\r\n     *\r\n     * @return {number} - Current position.\r\n     */\n    get position() {\n      var prop = isVertical ? 'top' : isRTL ? 'right' : 'left';\n      return getRect(list)[prop] - (getRect(Elements.track)[prop] - Layout.padding[prop] * sign);\n    }\n\n  };\n  /**\r\n   * Called whenever slides arrive at a destination.\r\n   *\r\n   * @param {number}  destIndex - A destination index.\r\n   * @param {number}  newIndex  - A new index.\r\n   * @param {number}  prevIndex - A previous index.\r\n   * @param {boolean} silently  - If true, suppress emitting events.\r\n   */\n\n  function onTransitionEnd(destIndex, newIndex, prevIndex, silently) {\n    applyStyle(list, {\n      transition: ''\n    });\n    isLoopPending = false;\n\n    if (!isFade) {\n      Track.jump(newIndex);\n    }\n\n    if (!silently) {\n      Splide.emit('moved', newIndex, prevIndex, destIndex);\n    }\n  }\n  /**\r\n   * Convert index to the trimmed position.\r\n   *\r\n   * @return {number} - Trimmed position.\r\n   */\n\n\n  function getTrimmedPosition(index) {\n    return Track.trim(Track.toPosition(index));\n  }\n\n  return Track;\n});\n// CONCATENATED MODULE: ./src/js/components/clones/index.js\n/**\r\n * The component for cloning some slides for \"loop\" mode of the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n/**\r\n * The component for cloning some slides for \"loop\" mode of the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_clones = (function (Splide, Components) {\n  /**\r\n   * Store information of all clones.\r\n   *\r\n   * @type {Array}\r\n   */\n  var clones = [];\n  /**\r\n   * Store the current clone count on one side.\r\n   *\r\n   * @type {number}\r\n   */\n\n  var cloneCount = 0;\n  /**\r\n   * Keep Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Clones component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Clones = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      if (Splide.is(LOOP)) {\n        init();\n        Splide.on('refresh', init).on('resize', function () {\n          if (cloneCount !== getCloneCount()) {\n            // Destroy before refresh not to collect clones by the Elements component.\n            _this.destroy();\n\n            Splide.refresh();\n          }\n        });\n      }\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      dom_remove(clones);\n      clones = [];\n    },\n\n    /**\r\n     * Return all clones.\r\n     *\r\n     * @return {Element[]} - Cloned elements.\r\n     */\n    get clones() {\n      return clones;\n    },\n\n    /**\r\n     * Return clone length.\r\n     *\r\n     * @return {number} - A length of clones.\r\n     */\n    get length() {\n      return clones.length;\n    }\n\n  };\n  /**\r\n   * Initialization.\r\n   */\n\n  function init() {\n    Clones.destroy();\n    cloneCount = getCloneCount();\n    generateClones(cloneCount);\n  }\n  /**\r\n   * Generate and append/prepend clones.\r\n   *\r\n   * @param {number} count - The half number of clones.\r\n   */\n\n\n  function generateClones(count) {\n    var length = Elements.length,\n        register = Elements.register;\n\n    if (length) {\n      var slides = Elements.slides;\n\n      while (slides.length < count) {\n        slides = slides.concat(slides);\n      } // Clones after the last element.\n\n\n      slides.slice(0, count).forEach(function (elm, index) {\n        var clone = cloneDeeply(elm);\n        append(Elements.list, clone);\n        clones.push(clone);\n        register(clone, index + length, index % length);\n      }); // Clones before the first element.\n\n      slides.slice(-count).forEach(function (elm, index) {\n        var clone = cloneDeeply(elm);\n        before(clone, slides[0]);\n        clones.push(clone);\n        register(clone, index - count, (length + index - count % length) % length);\n      });\n    }\n  }\n  /**\r\n   * Return half count of clones to be generated.\r\n   * Clone count is determined by:\r\n   * - \"clones\" value in the options.\r\n   * - Number of slides that can be placed in a view in \"fixed\" mode.\r\n   * - Max pages a flick action can move.\r\n   * - Whether the slide length is enough for perPage.\r\n   *\r\n   * @return {number} - Count for clones.\r\n   */\n\n\n  function getCloneCount() {\n    var options = Splide.options;\n\n    if (options.clones) {\n      return options.clones;\n    } // Use the slide length in autoWidth mode because the number cannot be calculated.\n\n\n    var baseCount = options.autoWidth || options.autoHeight ? Elements.length : options.perPage;\n    var dimension = options.direction === TTB ? 'Height' : 'Width';\n    var fixedSize = toPixel(Splide.root, options[\"fixed\" + dimension]);\n\n    if (fixedSize) {\n      // Roughly calculate the count. This needs not to be strict.\n      baseCount = Math.ceil(Elements.track[\"client\" + dimension] / fixedSize);\n    }\n\n    return baseCount * (options.drag ? options.flickMaxPages + 1 : 1);\n  }\n  /**\r\n   * Clone deeply the given element.\r\n   *\r\n   * @param {Element} elm - An element being duplicated.\r\n   *\r\n   * @return {Node} - A cloned node(element).\r\n   */\n\n\n  function cloneDeeply(elm) {\n    var clone = elm.cloneNode(true);\n    addClass(clone, Splide.classes.clone); // ID should not be duplicated.\n\n    removeAttribute(clone, 'id');\n    return clone;\n  }\n\n  return Clones;\n});\n// CONCATENATED MODULE: ./src/js/components/layout/directions/horizontal.js\n/**\r\n * The resolver component for horizontal layout.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The resolver component for horizontal layout.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The resolver object.\r\n */\n\n/* harmony default export */ var horizontal = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Keep the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Keep the track element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var track;\n  /**\r\n   * Keep the latest options.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var options = Splide.options;\n  return {\n    /**\r\n     * Margin property name.\r\n     *\r\n     * @type {string}\r\n     */\n    margin: 'margin' + (options.direction === RTL ? 'Left' : 'Right'),\n\n    /**\r\n     * Always 0 because the height will be determined by inner contents.\r\n     *\r\n     * @type {number}\r\n     */\n    height: 0,\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      this.resize();\n    },\n\n    /**\r\n     * Resize gap and padding.\r\n     * This must be called on init.\r\n     */\n    resize: function resize() {\n      options = Splide.options;\n      track = Elements.track;\n      this.gap = toPixel(root, options.gap);\n      var padding = options.padding;\n      var left = toPixel(root, padding.left || padding);\n      var right = toPixel(root, padding.right || padding);\n      this.padding = {\n        left: left,\n        right: right\n      };\n      applyStyle(track, {\n        paddingLeft: unit(left),\n        paddingRight: unit(right)\n      });\n    },\n\n    /**\r\n     * Return total width from the left of the list to the right of the slide specified by the provided index.\r\n     *\r\n     * @param {number} index - Optional. A slide index. If undefined, total width of the slider will be returned.\r\n     *\r\n     * @return {number} - Total width to the right side of the specified slide, or 0 for an invalid index.\r\n     */\n    totalWidth: function totalWidth(index) {\n      if (index === void 0) {\n        index = Splide.length - 1;\n      }\n\n      var Slide = Elements.getSlide(index);\n      var width = 0;\n\n      if (Slide) {\n        var slideRect = getRect(Slide.slide);\n        var listRect = getRect(Elements.list);\n\n        if (options.direction === RTL) {\n          width = listRect.right - slideRect.left;\n        } else {\n          width = slideRect.right - listRect.left;\n        }\n\n        width += this.gap;\n      }\n\n      return width;\n    },\n\n    /**\r\n     * Return the slide width in px.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - The slide width.\r\n     */\n    slideWidth: function slideWidth(index) {\n      if (options.autoWidth) {\n        var Slide = Elements.getSlide(index);\n        return Slide ? Slide.slide.offsetWidth : 0;\n      }\n\n      var width = options.fixedWidth || (this.width + this.gap) / options.perPage - this.gap;\n      return toPixel(root, width);\n    },\n\n    /**\r\n     * Return the slide height in px.\r\n     *\r\n     * @return {number} - The slide height.\r\n     */\n    slideHeight: function slideHeight() {\n      var height = options.height || options.fixedHeight || this.width * options.heightRatio;\n      return toPixel(root, height);\n    },\n\n    /**\r\n     * Return slider width without padding.\r\n     *\r\n     * @return {number} - Current slider width.\r\n     */\n    get width() {\n      return track.clientWidth - this.padding.left - this.padding.right;\n    }\n\n  };\n});\n// CONCATENATED MODULE: ./src/js/components/layout/directions/vertical.js\n/**\r\n * The resolver component for vertical layout.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The resolver component for vertical layout.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The resolver object.\r\n */\n\n/* harmony default export */ var vertical = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Keep the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Keep the track element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var track;\n  /**\r\n   * Keep the latest options.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var options;\n  return {\n    /**\r\n     * Margin property name.\r\n     *\r\n     * @type {string}\r\n     */\n    margin: 'marginBottom',\n\n    /**\r\n     * Initialization.\r\n     */\n    init: function init() {\n      this.resize();\n    },\n\n    /**\r\n     * Resize gap and padding.\r\n     * This must be called on init.\r\n     */\n    resize: function resize() {\n      options = Splide.options;\n      track = Elements.track;\n      this.gap = toPixel(root, options.gap);\n      var padding = options.padding;\n      var top = toPixel(root, padding.top || padding);\n      var bottom = toPixel(root, padding.bottom || padding);\n      this.padding = {\n        top: top,\n        bottom: bottom\n      };\n      applyStyle(track, {\n        paddingTop: unit(top),\n        paddingBottom: unit(bottom)\n      });\n    },\n\n    /**\r\n     * Return total height from the top of the list to the bottom of the slide specified by the provided index.\r\n     *\r\n     * @param {number} index - Optional. A slide index. If undefined, total height of the slider will be returned.\r\n     *\r\n     * @return {number} - Total height to the bottom of the specified slide, or 0 for an invalid index.\r\n     */\n    totalHeight: function totalHeight(index) {\n      if (index === void 0) {\n        index = Splide.length - 1;\n      }\n\n      var Slide = Elements.getSlide(index);\n\n      if (Slide) {\n        return getRect(Slide.slide).bottom - getRect(Elements.list).top + this.gap;\n      }\n\n      return 0;\n    },\n\n    /**\r\n     * Return the slide width in px.\r\n     *\r\n     * @return {number} - The slide width.\r\n     */\n    slideWidth: function slideWidth() {\n      return toPixel(root, options.fixedWidth || this.width);\n    },\n\n    /**\r\n     * Return the slide height in px.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - The slide height.\r\n     */\n    slideHeight: function slideHeight(index) {\n      if (options.autoHeight) {\n        var Slide = Elements.getSlide(index);\n        return Slide ? Slide.slide.offsetHeight : 0;\n      }\n\n      var height = options.fixedHeight || (this.height + this.gap) / options.perPage - this.gap;\n      return toPixel(root, height);\n    },\n\n    /**\r\n     * Return slider width without padding.\r\n     *\r\n     * @return {number} - Current slider width.\r\n     */\n    get width() {\n      return track.clientWidth;\n    },\n\n    /**\r\n     * Return slide height without padding.\r\n     *\r\n     * @return {number} - Slider height.\r\n     */\n    get height() {\n      var height = options.height || this.width * options.heightRatio;\n      exist(height, '\"height\" or \"heightRatio\" is missing.');\n      return toPixel(root, height) - this.padding.top - this.padding.bottom;\n    }\n\n  };\n});\n// CONCATENATED MODULE: ./src/js/utils/time.js\n/**\r\n * A package of utility functions related with time.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Simple throttle function that controls how often the given function is executed.\r\n *\r\n * @param {function} func - A function to be throttled.\r\n * @param {number}   wait - Time in millisecond for interval of execution.\r\n *\r\n * @return {Function} - A debounced function.\r\n */\nfunction throttle(func, wait) {\n  var timeout; // Declare function by the \"function\" keyword to prevent \"this\" from being inherited.\n\n  return function () {\n    if (!timeout) {\n      timeout = setTimeout(function () {\n        func();\n        timeout = null;\n      }, wait);\n    }\n  };\n}\n/**\r\n * Custom setInterval function that provides progress rate as callback.\r\n *\r\n * @param {function} callback - A callback function fired every time the interval time passes.\r\n * @param {number}   interval - Interval duration in milliseconds.\r\n * @param {function} progress - A callback function fired whenever the progress goes.\r\n *\r\n * @return {Object} - An object containing play() and pause() functions.\r\n */\n\nfunction createInterval(callback, interval, progress) {\n  var _window = window,\n      requestAnimationFrame = _window.requestAnimationFrame;\n  var start,\n      elapse,\n      rate,\n      _pause = true;\n\n  var step = function step(timestamp) {\n    if (!_pause) {\n      if (!start) {\n        start = timestamp;\n\n        if (rate && rate < 1) {\n          start -= rate * interval;\n        }\n      }\n\n      elapse = timestamp - start;\n      rate = elapse / interval;\n\n      if (elapse >= interval) {\n        start = 0;\n        rate = 1;\n        callback();\n      }\n\n      if (progress) {\n        progress(rate);\n      }\n\n      requestAnimationFrame(step);\n    }\n  };\n\n  return {\n    pause: function pause() {\n      _pause = true;\n      start = 0;\n    },\n    play: function play(reset) {\n      start = 0;\n\n      if (_pause) {\n        _pause = false;\n\n        if (reset) {\n          rate = 0;\n        }\n\n        requestAnimationFrame(step);\n      }\n    }\n  };\n}\n// CONCATENATED MODULE: ./src/js/components/layout/index.js\n/**\r\n * The component for handing slide layouts and their sizes.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n/**\r\n * The component for handing slide layouts and their sizes.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var layout = (function (Splide, Components) {\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n  var Elements = Components.Elements;\n  /**\r\n   * Whether the slider is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Layout component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Layout = object_assign({\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      bind();\n      init(); // The word \"size\" means width for a horizontal slider and height for a vertical slider.\n\n      this.totalSize = isVertical ? this.totalHeight : this.totalWidth;\n      this.slideSize = isVertical ? this.slideHeight : this.slideWidth;\n    },\n\n    /**\r\n     * Destroy the component.\r\n     */\n    destroy: function destroy() {\n      removeAttribute([Elements.list, Elements.track], 'style');\n    },\n\n    /**\r\n     * Return the slider height on the vertical mode or width on the horizontal mode.\r\n     *\r\n     * @return {number}\r\n     */\n    get size() {\n      return isVertical ? this.height : this.width;\n    }\n\n  }, isVertical ? vertical(Splide, Components) : horizontal(Splide, Components));\n  /**\r\n   * Init slider styles according to options.\r\n   */\n\n  function init() {\n    Layout.init();\n    applyStyle(Splide.root, {\n      maxWidth: unit(Splide.options.width)\n    });\n    Elements.each(function (Slide) {\n      Slide.slide.style[Layout.margin] = unit(Layout.gap);\n    });\n    resize();\n  }\n  /**\r\n   * Listen the resize native event with throttle.\r\n   * Initialize when the component is mounted or options are updated.\r\n   */\n\n\n  function bind() {\n    Splide.on('resize load', throttle(function () {\n      Splide.emit('resize');\n    }, Splide.options.throttle), window).on('resize', resize).on('updated refresh', init);\n  }\n  /**\r\n   * Resize the track and slide elements.\r\n   */\n\n\n  function resize() {\n    var options = Splide.options;\n    Layout.resize();\n    applyStyle(Elements.track, {\n      height: unit(Layout.height)\n    });\n    var slideHeight = options.autoHeight ? null : unit(Layout.slideHeight());\n    Elements.each(function (Slide) {\n      applyStyle(Slide.container, {\n        height: slideHeight\n      });\n      applyStyle(Slide.slide, {\n        width: options.autoWidth ? null : unit(Layout.slideWidth(Slide.index)),\n        height: Slide.container ? null : slideHeight\n      });\n    });\n  }\n\n  return Layout;\n});\n// CONCATENATED MODULE: ./src/js/components/drag/index.js\n/**\r\n * The component for supporting mouse drag and swipe.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\nvar drag_abs = Math.abs;\n/**\r\n * If the absolute velocity is greater thant this value,\r\n * a slider always goes to a different slide after drag, not allowed to stay on a current slide.\r\n */\n\nvar MIN_VELOCITY = 0.1;\n/**\r\n * Adjust how much the track can be pulled on the first or last page.\r\n * The larger number this is, the farther the track moves.\r\n * This should be around 5 - 9.\r\n *\r\n * @type {number}\r\n */\n\nvar FRICTION_REDUCER = 7;\n/**\r\n * The component supporting mouse drag and swipe.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var drag = (function (Splide, Components) {\n  /**\r\n   * Store the Move component.\r\n   *\r\n   * @type {Object}\r\n   */\n  var Track = Components.Track;\n  /**\r\n   * Store the Controller component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Controller = Components.Controller;\n  /**\r\n   * Coordinate of the track on starting drag.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var startCoord;\n  /**\r\n   * Analyzed info on starting drag.\r\n   *\r\n   * @type {Object|null}\r\n   */\n\n  var startInfo;\n  /**\r\n   * Analyzed info being updated while dragging/swiping.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var currentInfo;\n  /**\r\n   * Determine whether slides are being dragged or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isDragging;\n  /**\r\n   * Whether the slider direction is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isVertical = Splide.options.direction === TTB;\n  /**\r\n   * Axis for the direction.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var axis = isVertical ? 'y' : 'x';\n  /**\r\n   * Drag component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Drag = {\n    /**\r\n     * Whether dragging is disabled or not.\r\n     *\r\n     * @type {boolean}\r\n     */\n    disabled: false,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var _this = this;\n\n      var Elements = Components.Elements;\n      var track = Elements.track;\n      Splide.on('touchstart mousedown', start, track).on('touchmove mousemove', move, track, {\n        passive: false\n      }).on('touchend touchcancel mouseleave mouseup dragend', end, track).on('mounted refresh', function () {\n        // Prevent dragging an image or anchor itself.\n        each(Elements.list.querySelectorAll('img, a'), function (elm) {\n          Splide.off('dragstart', elm).on('dragstart', function (e) {\n            e.preventDefault();\n          }, elm, {\n            passive: false\n          });\n        });\n      }).on('mounted updated', function () {\n        _this.disabled = !Splide.options.drag;\n      });\n    }\n  };\n  /**\r\n   * Called when the track starts to be dragged.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n  function start(e) {\n    if (!Drag.disabled && !isDragging) {\n      // These prams are used to evaluate whether the slider should start moving.\n      init(e);\n    }\n  }\n  /**\r\n   * Initialize parameters.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n\n  function init(e) {\n    startCoord = Track.toCoord(Track.position);\n    startInfo = analyze(e, {});\n    currentInfo = startInfo;\n  }\n  /**\r\n   * Called while the track being dragged.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\n\n\n  function move(e) {\n    if (startInfo) {\n      currentInfo = analyze(e, startInfo);\n\n      if (isDragging) {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n\n        if (!Splide.is(FADE)) {\n          var position = startCoord[axis] + currentInfo.offset[axis];\n          Track.translate(resist(position));\n        }\n      } else {\n        if (shouldMove(currentInfo)) {\n          Splide.emit('drag', startInfo);\n          isDragging = true;\n          Track.cancel(); // These params are actual drag data.\n\n          init(e);\n        }\n      }\n    }\n  }\n  /**\r\n   * Determine whether to start moving the track or not by drag angle.\r\n   *\r\n   * @param {Object} info - An information object.\r\n   *\r\n   * @return {boolean} - True if the track should be moved or false if not.\r\n   */\n\n\n  function shouldMove(_ref) {\n    var offset = _ref.offset;\n\n    if (Splide.State.is(MOVING) && Splide.options.waitForTransition) {\n      return false;\n    }\n\n    var angle = Math.atan(drag_abs(offset.y) / drag_abs(offset.x)) * 180 / Math.PI;\n\n    if (isVertical) {\n      angle = 90 - angle;\n    }\n\n    return angle < Splide.options.dragAngleThreshold;\n  }\n  /**\r\n   * Resist dragging the track on the first/last page because there is no more.\r\n   *\r\n   * @param {number} position - A position being applied to the track.\r\n   *\r\n   * @return {Object} - Adjusted position.\r\n   */\n\n\n  function resist(position) {\n    if (Splide.is(SLIDE)) {\n      var sign = Track.sign;\n\n      var _start = sign * Track.trim(Track.toPosition(0));\n\n      var _end = sign * Track.trim(Track.toPosition(Controller.edgeIndex));\n\n      position *= sign;\n\n      if (position < _start) {\n        position = _start - FRICTION_REDUCER * Math.log(_start - position);\n      } else if (position > _end) {\n        position = _end + FRICTION_REDUCER * Math.log(position - _end);\n      }\n\n      position *= sign;\n    }\n\n    return position;\n  }\n  /**\r\n   * Called when dragging ends.\r\n   */\n\n\n  function end() {\n    startInfo = null;\n\n    if (isDragging) {\n      Splide.emit('dragged', currentInfo);\n      go(currentInfo);\n      isDragging = false;\n    }\n  }\n  /**\r\n   * Go to the slide determined by the analyzed data.\r\n   *\r\n   * @param {Object} info - An info object.\r\n   */\n\n\n  function go(info) {\n    var velocity = info.velocity[axis];\n    var absV = drag_abs(velocity);\n\n    if (absV > 0) {\n      var options = Splide.options;\n      var index = Splide.index;\n      var sign = velocity < 0 ? -1 : 1;\n      var destIndex = index;\n\n      if (!Splide.is(FADE)) {\n        var destination = Track.position;\n\n        if (absV > options.flickVelocityThreshold && drag_abs(info.offset[axis]) < options.swipeDistanceThreshold) {\n          destination += sign * Math.min(absV * options.flickPower, Components.Layout.size * (options.flickMaxPages || 1));\n        }\n\n        destIndex = Track.toIndex(destination);\n      }\n      /*\r\n       * Do not allow the track to go to a previous position if there is enough velocity.\r\n       * Always use the adjacent index for the fade mode.\r\n       */\n\n\n      if (destIndex === index && absV > MIN_VELOCITY) {\n        destIndex = index + sign * Track.sign;\n      }\n\n      if (Splide.is(SLIDE)) {\n        destIndex = between(destIndex, 0, Controller.edgeIndex);\n      }\n\n      Controller.go(destIndex, options.isNavigation);\n    }\n  }\n  /**\r\n   * Analyze the given event object and return important information for handling swipe behavior.\r\n   *\r\n   * @param {Event}   e          - Touch or Mouse event object.\r\n   * @param {Object}  startInfo  - Information analyzed on start for calculating difference from the current one.\r\n   *\r\n   * @return {Object} - An object containing analyzed information, such as offset, velocity, etc.\r\n   */\n\n\n  function analyze(e, startInfo) {\n    var timeStamp = e.timeStamp,\n        touches = e.touches;\n\n    var _ref2 = touches ? touches[0] : e,\n        clientX = _ref2.clientX,\n        clientY = _ref2.clientY;\n\n    var _ref3 = startInfo.to || {},\n        _ref3$x = _ref3.x,\n        fromX = _ref3$x === void 0 ? clientX : _ref3$x,\n        _ref3$y = _ref3.y,\n        fromY = _ref3$y === void 0 ? clientY : _ref3$y;\n\n    var startTime = startInfo.time || 0;\n    var offset = {\n      x: clientX - fromX,\n      y: clientY - fromY\n    };\n    var duration = timeStamp - startTime;\n    var velocity = {\n      x: offset.x / duration,\n      y: offset.y / duration\n    };\n    return {\n      to: {\n        x: clientX,\n        y: clientY\n      },\n      offset: offset,\n      time: timeStamp,\n      velocity: velocity\n    };\n  }\n\n  return Drag;\n});\n// CONCATENATED MODULE: ./src/js/components/click/index.js\n/**\r\n * The component for handling a click event.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The component for handling a click event.\r\n * Click should be disabled during drag/swipe.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n/* harmony default export */ var click = (function (Splide, Components) {\n  /**\r\n   * Whether click is disabled or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n  var disabled = false;\n  /**\r\n   * Click component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Click = {\n    /**\r\n     * Mount only when the drag is activated and the slide type is not \"fade\".\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.drag,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('click', onClick, Components.Elements.track, {\n        capture: true\n      }).on('drag', function () {\n        disabled = true;\n      }).on('moved', function () {\n        disabled = false;\n      });\n    }\n  };\n  /**\r\n   * Called when a track element is clicked.\r\n   *\r\n   * @param {Event} e - A click event.\r\n   */\n\n  function onClick(e) {\n    if (disabled) {\n      e.preventDefault();\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  return Click;\n});\n// CONCATENATED MODULE: ./src/js/components/autoplay/index.js\n/**\r\n * The component for playing slides automatically.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Set of pause flags.\r\n */\n\nvar PAUSE_FLAGS = {\n  HOVER: 1,\n  FOCUS: 2,\n  MANUAL: 3\n};\n/**\r\n * The component for playing slides automatically.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_autoplay = (function (Splide, Components, name) {\n  /**\r\n   * Store pause flags.\r\n   *\r\n   * @type {Array}\r\n   */\n  var flags = [];\n  /**\r\n   * Store an interval object.\r\n   *\r\n   * @type {Object};\r\n   */\n\n  var interval;\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Autoplay component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Autoplay = {\n    /**\r\n     * Required only when the autoplay option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.autoplay,\n\n    /**\r\n     * Called when the component is mounted.\r\n     * Note that autoplay starts only if there are slides over perPage number.\r\n     */\n    mount: function mount() {\n      var options = Splide.options;\n\n      if (Elements.slides.length > options.perPage) {\n        interval = createInterval(function () {\n          Splide.go('>');\n        }, options.interval, function (rate) {\n          Splide.emit(name + \":playing\", rate);\n\n          if (Elements.bar) {\n            applyStyle(Elements.bar, {\n              width: rate * 100 + \"%\"\n            });\n          }\n        });\n        bind();\n        this.play();\n      }\n    },\n\n    /**\r\n     * Start autoplay.\r\n     *\r\n     * @param {number} flag - A pause flag to be removed.\r\n     */\n    play: function play(flag) {\n      if (flag === void 0) {\n        flag = 0;\n      }\n\n      flags = flags.filter(function (f) {\n        return f !== flag;\n      });\n\n      if (!flags.length) {\n        Splide.emit(name + \":play\");\n        interval.play(Splide.options.resetProgress);\n      }\n    },\n\n    /**\r\n     * Pause autoplay.\r\n     * Note that Array.includes is not supported by IE.\r\n     *\r\n     * @param {number} flag - A pause flag to be added.\r\n     */\n    pause: function pause(flag) {\n      if (flag === void 0) {\n        flag = 0;\n      }\n\n      interval.pause();\n\n      if (flags.indexOf(flag) === -1) {\n        flags.push(flag);\n      }\n\n      if (flags.length === 1) {\n        Splide.emit(name + \":pause\");\n      }\n    }\n  };\n  /**\r\n   * Listen some events.\r\n   */\n\n  function bind() {\n    var options = Splide.options;\n    var sibling = Splide.sibling;\n    var elms = [Splide.root, sibling ? sibling.root : null];\n\n    if (options.pauseOnHover) {\n      switchOn(elms, 'mouseleave', PAUSE_FLAGS.HOVER, true);\n      switchOn(elms, 'mouseenter', PAUSE_FLAGS.HOVER, false);\n    }\n\n    if (options.pauseOnFocus) {\n      switchOn(elms, 'focusout', PAUSE_FLAGS.FOCUS, true);\n      switchOn(elms, 'focusin', PAUSE_FLAGS.FOCUS, false);\n    }\n\n    if (Elements.play) {\n      Splide.on('click', function () {\n        // Need to be removed a focus flag at first.\n        Autoplay.play(PAUSE_FLAGS.FOCUS);\n        Autoplay.play(PAUSE_FLAGS.MANUAL);\n      }, Elements.play);\n    }\n\n    if (Elements.pause) {\n      switchOn([Elements.pause], 'click', PAUSE_FLAGS.MANUAL, false);\n    }\n\n    Splide.on('move refresh', function () {\n      Autoplay.play();\n    }) // Rewind the timer.\n    .on('destroy', function () {\n      Autoplay.pause();\n    });\n  }\n  /**\r\n   * Play or pause on the given event.\r\n   *\r\n   * @param {Element[]} elms  - Elements.\r\n   * @param {string}    event - An event name or names.\r\n   * @param {number}    flag  - A pause flag defined on the top.\r\n   * @param {boolean}   play  - Determine whether to play or pause.\r\n   */\n\n\n  function switchOn(elms, event, flag, play) {\n    elms.forEach(function (elm) {\n      Splide.on(event, function () {\n        Autoplay[play ? 'play' : 'pause'](flag);\n      }, elm);\n    });\n  }\n\n  return Autoplay;\n});\n// CONCATENATED MODULE: ./src/js/components/cover/index.js\n/**\r\n * The component for change an img element to background image of its wrapper.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * The component for change an img element to background image of its wrapper.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_cover = (function (Splide, Components) {\n  /**\r\n   * Hold options.\r\n   *\r\n   * @type {Object}\r\n   */\n  var options = Splide.options;\n  /**\r\n   * Cover component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Cover = {\n    /**\r\n     * Required only when \"cover\" option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: options.cover,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('lazyload:loaded', function (img) {\n        cover(img, false);\n      });\n      Splide.on('mounted updated refresh', function () {\n        return apply(false);\n      });\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      apply(true);\n    }\n  };\n  /**\r\n   * Apply \"cover\" to all slides.\r\n   *\r\n   * @param {boolean} uncover - If true, \"cover\" will be clear.\r\n   */\n\n  function apply(uncover) {\n    Components.Elements.each(function (Slide) {\n      var img = child(Slide.slide, 'IMG') || child(Slide.container, 'IMG');\n\n      if (img && img.src) {\n        cover(img, uncover);\n      }\n    });\n  }\n  /**\r\n   * Set background image of the parent element, using source of the given image element.\r\n   *\r\n   * @param {Element} img     - An image element.\r\n   * @param {boolean} uncover - Reset \"cover\".\r\n   */\n\n\n  function cover(img, uncover) {\n    applyStyle(img.parentElement, {\n      background: uncover ? '' : \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\"\n    });\n    applyStyle(img, {\n      display: uncover ? '' : 'none'\n    });\n  }\n\n  return Cover;\n});\n// CONCATENATED MODULE: ./src/js/components/arrows/path.js\n/**\r\n * Export vector path for an arrow.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Namespace definition for SVG element.\r\n *\r\n * @type {string}\r\n */\nvar XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\n/**\r\n * The arrow vector path.\r\n *\r\n * @type {number}\r\n */\n\nvar PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\n/**\r\n * SVG width and height.\r\n *\r\n * @type {number}\r\n */\n\nvar SIZE = 40;\n// CONCATENATED MODULE: ./src/js/components/arrows/index.js\n/**\r\n * The component for appending prev/next arrows.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for appending prev/next arrows.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_arrows = (function (Splide, Components, name) {\n  /**\r\n   * Previous arrow element.\r\n   *\r\n   * @type {Element|undefined}\r\n   */\n  var prev;\n  /**\r\n   * Next arrow element.\r\n   *\r\n   * @type {Element|undefined}\r\n   */\n\n  var next;\n  /**\r\n   * Store the class list.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var classes = Splide.classes;\n  /**\r\n   * Hold the root element.\r\n   *\r\n   * @type {Element}\r\n   */\n\n  var root = Splide.root;\n  /**\r\n   * Whether arrows are created programmatically or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var created;\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Arrows component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Arrows = {\n    /**\r\n     * Required when the arrows option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.arrows,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      // Attempt to get arrows from HTML source.\n      prev = Elements.arrows.prev;\n      next = Elements.arrows.next; // If arrows were not found in HTML, let's generate them.\n\n      if ((!prev || !next) && Splide.options.arrows) {\n        prev = createArrow(true);\n        next = createArrow(false);\n        created = true;\n        appendArrows();\n      }\n\n      if (prev && next) {\n        bind();\n      }\n\n      this.arrows = {\n        prev: prev,\n        next: next\n      };\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      Splide.emit(name + \":mounted\", prev, next);\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      removeAttribute([prev, next], 'disabled');\n\n      if (created) {\n        dom_remove(prev.parentElement);\n      }\n    }\n  };\n  /**\r\n   * Listen to native and custom events.\r\n   */\n\n  function bind() {\n    Splide.on('click', function () {\n      Splide.go('<');\n    }, prev).on('click', function () {\n      Splide.go('>');\n    }, next).on('mounted move updated refresh', updateDisabled);\n  }\n  /**\r\n   * Update a disabled attribute.\r\n   */\n\n\n  function updateDisabled() {\n    var _Components$Controlle = Components.Controller,\n        prevIndex = _Components$Controlle.prevIndex,\n        nextIndex = _Components$Controlle.nextIndex;\n    var isEnough = Splide.length > Splide.options.perPage || Splide.is(LOOP);\n    prev.disabled = prevIndex < 0 || !isEnough;\n    next.disabled = nextIndex < 0 || !isEnough;\n    Splide.emit(name + \":updated\", prev, next, prevIndex, nextIndex);\n  }\n  /**\r\n   * Create a wrapper element and append arrows.\r\n   */\n\n\n  function appendArrows() {\n    var wrapper = create('div', {\n      \"class\": classes.arrows\n    });\n    append(wrapper, prev);\n    append(wrapper, next);\n    var slider = Elements.slider;\n    var parent = Splide.options.arrows === 'slider' && slider ? slider : root;\n    before(wrapper, parent.firstElementChild);\n  }\n  /**\r\n   * Create an arrow element.\r\n   *\r\n   * @param {boolean} prev - Determine to create a prev arrow or next arrow.\r\n   *\r\n   * @return {Element} - A created arrow element.\r\n   */\n\n\n  function createArrow(prev) {\n    var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\">\" + (\"<svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\"\\tviewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\"\\twidth=\\\"\" + SIZE + \"\\\"\\theight=\\\"\" + SIZE + \"\\\">\") + (\"<path d=\\\"\" + (Splide.options.arrowPath || PATH) + \"\\\" />\");\n    return domify(arrow);\n  }\n\n  return Arrows;\n});\n// CONCATENATED MODULE: ./src/js/components/pagination/index.js\n/**\r\n * The component for handling pagination\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The event name for updating some attributes of pagination nodes.\r\n *\r\n * @type {string}\r\n */\n\nvar ATTRIBUTES_UPDATE_EVENT = 'move.page';\n/**\r\n * The event name for recreating pagination.\r\n *\r\n * @type {string}\r\n */\n\nvar UPDATE_EVENT = 'updated.page refresh.page';\n/**\r\n * The component for handling pagination\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_pagination = (function (Splide, Components, name) {\n  /**\r\n   * Store all data for pagination.\r\n   * - list: A list element.\r\n   * - items: An array that contains objects(li, button, index, page).\r\n   *\r\n   * @type {Object}\r\n   */\n  var data = {};\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * Pagination component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Pagination = {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      var pagination = Splide.options.pagination;\n\n      if (pagination) {\n        data = createPagination();\n        var slider = Elements.slider;\n        var parent = pagination === 'slider' && slider ? slider : Splide.root;\n        append(parent, data.list);\n        Splide.on(ATTRIBUTES_UPDATE_EVENT, updateAttributes);\n      }\n\n      Splide.off(UPDATE_EVENT).on(UPDATE_EVENT, function () {\n        Pagination.destroy();\n\n        if (Splide.options.pagination) {\n          Pagination.mount();\n          Pagination.mounted();\n        }\n      });\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      if (Splide.options.pagination) {\n        var index = Splide.index;\n        Splide.emit(name + \":mounted\", data, this.getItem(index));\n        updateAttributes(index, -1);\n      }\n    },\n\n    /**\r\n     * Destroy the pagination.\r\n     * Be aware that node.remove() is not supported by IE.\r\n     */\n    destroy: function destroy() {\n      dom_remove(data.list);\n\n      if (data.items) {\n        data.items.forEach(function (item) {\n          Splide.off('click', item.button);\n        });\n      } // Do not remove UPDATE_EVENT to recreate pagination if needed.\n\n\n      Splide.off(ATTRIBUTES_UPDATE_EVENT);\n      data = {};\n    },\n\n    /**\r\n     * Return an item by index.\r\n     *\r\n     * @param {number} index - A slide index.\r\n     *\r\n     * @return {Object|undefined} - An item object on success or undefined on failure.\r\n     */\n    getItem: function getItem(index) {\n      return data.items[Components.Controller.toPage(index)];\n    },\n\n    /**\r\n     * Return object containing pagination data.\r\n     *\r\n     * @return {Object} - Pagination data including list and items.\r\n     */\n    get data() {\n      return data;\n    }\n\n  };\n  /**\r\n   * Update attributes.\r\n   *\r\n   * @param {number} index     - Active index.\r\n   * @param {number} prevIndex - Prev index.\r\n   */\n\n  function updateAttributes(index, prevIndex) {\n    var prev = Pagination.getItem(prevIndex);\n    var curr = Pagination.getItem(index);\n    var active = STATUS_CLASSES.active;\n\n    if (prev) {\n      removeClass(prev.button, active);\n    }\n\n    if (curr) {\n      addClass(curr.button, active);\n    }\n\n    Splide.emit(name + \":updated\", data, prev, curr);\n  }\n  /**\r\n   * Create a wrapper and button elements.\r\n   *\r\n   * @return {Object} - An object contains all data.\r\n   */\n\n\n  function createPagination() {\n    var options = Splide.options;\n    var classes = Splide.classes;\n    var list = create('ul', {\n      \"class\": classes.pagination\n    });\n    var items = Elements.getSlides(false).filter(function (Slide) {\n      return options.focus !== false || Slide.index % options.perPage === 0;\n    }).map(function (Slide, page) {\n      var li = create('li', {});\n      var button = create('button', {\n        \"class\": classes.page,\n        type: 'button'\n      });\n      append(li, button);\n      append(list, li);\n      Splide.on('click', function () {\n        Splide.go(\">\" + page);\n      }, button);\n      return {\n        li: li,\n        button: button,\n        page: page,\n        Slides: Elements.getSlidesByPage(page)\n      };\n    });\n    return {\n      list: list,\n      items: items\n    };\n  }\n\n  return Pagination;\n});\n// CONCATENATED MODULE: ./src/js/components/lazyload/index.js\n/**\r\n * The component for loading slider images lazily.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The name for a data attribute of src.\r\n *\r\n * @type {string}\r\n */\n\nvar SRC_DATA_NAME = 'data-splide-lazy';\n/**\r\n * The name for a data attribute of srcset.\r\n *\r\n * @type {string}\r\n */\n\nvar SRCSET_DATA_NAME = 'data-splide-lazy-srcset';\n/**\r\n * The component for loading slider images lazily.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var lazyload = (function (Splide, Components, name) {\n  /**\r\n   * Next index for sequential loading.\r\n   *\r\n   * @type {number}\r\n   */\n  var nextIndex;\n  /**\r\n   * Store objects containing an img element and a Slide object.\r\n   *\r\n   * @type {Object[]}\r\n   */\n\n  var images;\n  /**\r\n   * Store the options.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var options = Splide.options;\n  /**\r\n   * Whether to load images sequentially or not.\r\n   *\r\n   * @type {boolean}\r\n   */\n\n  var isSequential = options.lazyLoad === 'sequential';\n  /**\r\n   * Lazyload component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Lazyload = {\n    /**\r\n     * Mount only when the lazyload option is provided.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: options.lazyLoad,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('mounted refresh', function () {\n        init();\n        Components.Elements.each(function (Slide) {\n          each(Slide.slide.querySelectorAll(\"[\" + SRC_DATA_NAME + \"], [\" + SRCSET_DATA_NAME + \"]\"), function (img) {\n            if (!img.src && !img.srcset) {\n              images.push({\n                img: img,\n                Slide: Slide\n              });\n              applyStyle(img, {\n                display: 'none'\n              });\n            }\n          });\n        });\n\n        if (isSequential) {\n          loadNext();\n        }\n      });\n\n      if (!isSequential) {\n        Splide.on(\"mounted refresh moved.\" + name, check);\n      }\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: init\n  };\n  /**\r\n   * Initialize parameters.\r\n   */\n\n  function init() {\n    images = [];\n    nextIndex = 0;\n  }\n  /**\r\n   * Check how close each image is from the active slide and\r\n   * determine whether to start loading or not, according to the distance.\r\n   *\r\n   * @param {number} index - Current index.\r\n   */\n\n\n  function check(index) {\n    index = isNaN(index) ? Splide.index : index;\n    images = images.filter(function (image) {\n      if (image.Slide.isWithin(index, options.perPage * (options.preloadPages + 1))) {\n        load(image.img, image.Slide);\n        return false;\n      }\n\n      return true;\n    }); // Unbind if all images are loaded.\n\n    if (!images[0]) {\n      Splide.off(\"moved.\" + name);\n    }\n  }\n  /**\r\n   * Start loading an image.\r\n   * Creating a clone of the image element since setting src attribute directly to it\r\n   * often occurs 'hitch', blocking some other processes of a browser.\r\n   *\r\n   * @param {Element} img   - An image element.\r\n   * @param {Object}  Slide - A Slide object.\r\n   */\n\n\n  function load(img, Slide) {\n    addClass(Slide.slide, STATUS_CLASSES.loading);\n    var spinner = create('span', {\n      \"class\": Splide.classes.spinner\n    });\n    append(img.parentElement, spinner);\n\n    img.onload = function () {\n      loaded(img, spinner, Slide, false);\n    };\n\n    img.onerror = function () {\n      loaded(img, spinner, Slide, true);\n    };\n\n    setAttribute(img, 'srcset', getAttribute(img, SRCSET_DATA_NAME) || '');\n    setAttribute(img, 'src', getAttribute(img, SRC_DATA_NAME) || '');\n  }\n  /**\r\n   * Start loading a next image in images array.\r\n   */\n\n\n  function loadNext() {\n    if (nextIndex < images.length) {\n      var image = images[nextIndex];\n      load(image.img, image.Slide);\n    }\n\n    nextIndex++;\n  }\n  /**\r\n   * Called just after the image was loaded or loading was aborted by some error.\r\n   *\r\n   * @param {Element} img     - An image element.\r\n   * @param {Element} spinner - A spinner element.\r\n   * @param {Object}  Slide   - A Slide object.\r\n   * @param {boolean} error   - True if the image was loaded successfully or false on error.\r\n   */\n\n\n  function loaded(img, spinner, Slide, error) {\n    removeClass(Slide.slide, STATUS_CLASSES.loading);\n\n    if (!error) {\n      dom_remove(spinner);\n      applyStyle(img, {\n        display: ''\n      });\n      Splide.emit(name + \":loaded\", img).emit('resize');\n    }\n\n    if (isSequential) {\n      loadNext();\n    }\n  }\n\n  return Lazyload;\n});\n// CONCATENATED MODULE: ./src/js/constants/a11y.js\n/**\r\n * Export aria attribute names.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n/**\r\n * Attribute name for aria-current.\r\n *\r\n * @type {string}\r\n */\nvar ARIA_CURRENRT = 'aria-current';\n/**\r\n * Attribute name for aria-control.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_CONTROLS = 'aria-controls';\n/**\r\n * Attribute name for aria-control.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_LABEL = 'aria-label';\n/**\r\n * Attribute name for aria-labelledby.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_LABELLEDBY = 'aria-labelledby';\n/**\r\n * Attribute name for aria-hidden.\r\n *\r\n * @type {string}\r\n */\n\nvar ARIA_HIDDEN = 'aria-hidden';\n/**\r\n * Attribute name for tab-index.\r\n *\r\n * @type {string}\r\n */\n\nvar TAB_INDEX = 'tabindex';\n// CONCATENATED MODULE: ./src/js/components/keyboard/index.js\n/**\r\n * The component for controlling slides via keyboard.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Map a key to a slide control.\r\n *\r\n * @type {Object}\r\n */\n\nvar KEY_MAP = {\n  ltr: {\n    ArrowLeft: '<',\n    ArrowRight: '>',\n    // For IE.\n    Left: '<',\n    Right: '>'\n  },\n  rtl: {\n    ArrowLeft: '>',\n    ArrowRight: '<',\n    // For IE.\n    Left: '>',\n    Right: '<'\n  },\n  ttb: {\n    ArrowUp: '<',\n    ArrowDown: '>',\n    // For IE.\n    Up: '<',\n    Down: '>'\n  }\n};\n/**\r\n * The component for controlling slides via keyboard.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_keyboard = (function (Splide) {\n  /**\r\n   * Hold the target element.\r\n   *\r\n   * @type {Element|Document|undefined}\r\n   */\n  var target;\n  return {\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('mounted updated', function () {\n        var options = Splide.options;\n        var root = Splide.root;\n        var map = KEY_MAP[options.direction];\n        var keyboard = options.keyboard;\n\n        if (target) {\n          Splide.off('keydown', target);\n          removeAttribute(root, TAB_INDEX);\n        }\n\n        if (keyboard) {\n          if (keyboard === 'focused') {\n            target = root;\n            setAttribute(root, TAB_INDEX, 0);\n          } else {\n            target = document;\n          }\n\n          Splide.on('keydown', function (e) {\n            if (map[e.key]) {\n              Splide.go(map[e.key]);\n            }\n          }, target);\n        }\n      });\n    }\n  };\n});\n// CONCATENATED MODULE: ./src/js/components/a11y/index.js\n/**\r\n * The component for enhancing accessibility.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n/**\r\n * The component for enhancing accessibility.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var a11y = (function (Splide, Components) {\n  /**\r\n   * Hold a i18n object.\r\n   *\r\n   * @type {Object}\r\n   */\n  var i18n = Splide.i18n;\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Elements = Components.Elements;\n  /**\r\n   * All attributes related with A11y.\r\n   *\r\n   * @type {string[]}\r\n   */\n\n  var allAttributes = [ARIA_HIDDEN, TAB_INDEX, ARIA_CONTROLS, ARIA_LABEL, ARIA_CURRENRT, 'role'];\n  /**\r\n   * A11y component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var A11y = {\n    /**\r\n     * Required only when the accessibility option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: Splide.options.accessibility,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      Splide.on('visible', function (Slide) {\n        updateSlide(Slide.slide, true);\n      }).on('hidden', function (Slide) {\n        updateSlide(Slide.slide, false);\n      }).on('arrows:mounted', initArrows).on('arrows:updated', updateArrows).on('pagination:mounted', initPagination).on('pagination:updated', updatePagination).on('refresh', function () {\n        removeAttribute(Components.Clones.clones, allAttributes);\n      });\n\n      if (Splide.options.isNavigation) {\n        Splide.on('navigation:mounted navigation:updated', initNavigation).on('active', function (Slide) {\n          updateNavigation(Slide, true);\n        }).on('inactive', function (Slide) {\n          updateNavigation(Slide, false);\n        });\n      }\n\n      initAutoplay();\n    },\n\n    /**\r\n     * Destroy.\r\n     */\n    destroy: function destroy() {\n      var Arrows = Components.Arrows;\n      var arrows = Arrows ? Arrows.arrows : {};\n      removeAttribute(Elements.slides.concat([arrows.prev, arrows.next, Elements.play, Elements.pause]), allAttributes);\n    }\n  };\n  /**\r\n   * Update slide attributes when it gets visible or hidden.\r\n   *\r\n   * @param {Element} slide   - A slide element.\r\n   * @param {Boolean} visible - True when the slide gets visible, or false when hidden.\r\n   */\n\n  function updateSlide(slide, visible) {\n    setAttribute(slide, ARIA_HIDDEN, !visible);\n\n    if (Splide.options.slideFocus) {\n      setAttribute(slide, TAB_INDEX, visible ? 0 : -1);\n    }\n  }\n  /**\r\n   * Initialize arrows if they are available.\r\n   * Append screen reader elements and add aria-controls attribute.\r\n   *\r\n   * @param {Element} prev - Previous arrow element.\r\n   * @param {Element} next - Next arrow element.\r\n   */\n\n\n  function initArrows(prev, next) {\n    var controls = Elements.track.id;\n    setAttribute(prev, ARIA_CONTROLS, controls);\n    setAttribute(next, ARIA_CONTROLS, controls);\n  }\n  /**\r\n   * Update arrow attributes.\r\n   *\r\n   * @param {Element} prev      - Previous arrow element.\r\n   * @param {Element} next      - Next arrow element.\r\n   * @param {number}  prevIndex - Previous slide index or -1 when there is no precede slide.\r\n   * @param {number}  nextIndex - Next slide index or -1 when there is no next slide.\r\n   */\n\n\n  function updateArrows(prev, next, prevIndex, nextIndex) {\n    var index = Splide.index;\n    var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n  }\n  /**\r\n   * Initialize pagination if it's available.\r\n   * Append a screen reader element and add aria-controls/label attribute to each item.\r\n   *\r\n   * @param {Object} data       - Data object containing all items.\r\n   * @param {Object} activeItem - An initial active item.\r\n   */\n\n\n  function initPagination(data, activeItem) {\n    if (activeItem) {\n      setAttribute(activeItem.button, ARIA_CURRENRT, true);\n    }\n\n    data.items.forEach(function (item) {\n      var options = Splide.options;\n      var text = options.focus === false && options.perPage > 1 ? i18n.pageX : i18n.slideX;\n      var label = sprintf(text, item.page + 1);\n      var button = item.button;\n      var controls = item.Slides.map(function (Slide) {\n        return Slide.slide.id;\n      });\n      setAttribute(button, ARIA_CONTROLS, controls.join(' '));\n      setAttribute(button, ARIA_LABEL, label);\n    });\n  }\n  /**\r\n   * Update pagination attributes.\r\n   *\r\n   * @param {Object}  data - Data object containing all items.\r\n   * @param {Element} prev - A previous active element.\r\n   * @param {Element} curr - A current active element.\r\n   */\n\n\n  function updatePagination(data, prev, curr) {\n    if (prev) {\n      removeAttribute(prev.button, ARIA_CURRENRT);\n    }\n\n    if (curr) {\n      setAttribute(curr.button, ARIA_CURRENRT, true);\n    }\n  }\n  /**\r\n   * Initialize autoplay buttons.\r\n   */\n\n\n  function initAutoplay() {\n    ['play', 'pause'].forEach(function (name) {\n      var elm = Elements[name];\n\n      if (elm) {\n        if (!isButton(elm)) {\n          setAttribute(elm, 'role', 'button');\n        }\n\n        setAttribute(elm, ARIA_CONTROLS, Elements.track.id);\n        setAttribute(elm, ARIA_LABEL, i18n[name]);\n      }\n    });\n  }\n  /**\r\n   * Initialize navigation slider.\r\n   * Add button role, aria-label, aria-controls to slide elements and append screen reader text to them.\r\n   *\r\n   * @param {Splide} main - A main Splide instance.\r\n   */\n\n\n  function initNavigation(main) {\n    Elements.each(function (Slide) {\n      var slide = Slide.slide;\n      var realIndex = Slide.realIndex;\n\n      if (!isButton(slide)) {\n        setAttribute(slide, 'role', 'button');\n      }\n\n      var slideIndex = realIndex > -1 ? realIndex : Slide.index;\n      var label = sprintf(i18n.slideX, slideIndex + 1);\n      var mainSlide = main.Components.Elements.getSlide(slideIndex);\n      setAttribute(slide, ARIA_LABEL, label);\n\n      if (mainSlide) {\n        setAttribute(slide, ARIA_CONTROLS, mainSlide.slide.id);\n      }\n    });\n  }\n  /**\r\n   * Update navigation attributes.\r\n   *\r\n   * @param {Object}  Slide  - A target Slide object.\r\n   * @param {boolean} active - True if the slide is active or false if inactive.\r\n   */\n\n\n  function updateNavigation(_ref, active) {\n    var slide = _ref.slide;\n\n    if (active) {\n      setAttribute(slide, ARIA_CURRENRT, true);\n    } else {\n      removeAttribute(slide, ARIA_CURRENRT);\n    }\n  }\n  /**\r\n   * Check if the given element is button or not.\r\n   *\r\n   * @param {Element} elm - An element to be checked.\r\n   *\r\n   * @return {boolean} - True if the given element is button.\r\n   */\n\n\n  function isButton(elm) {\n    return elm.tagName === 'BUTTON';\n  }\n\n  return A11y;\n});\n// CONCATENATED MODULE: ./src/js/components/sync/index.js\n/**\r\n * The component for synchronizing a slider with another.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * The event name for sync.\r\n *\r\n * @type {string}\r\n */\n\nvar SYNC_EVENT = 'move.sync';\n/**\r\n * The event names for click navigation.\r\n * @type {string}\r\n */\n\nvar CLICK_EVENTS = 'mouseup touchend';\n/**\r\n * The keys for triggering the navigation button.\r\n *\r\n * @type {String[]}\r\n */\n\nvar TRIGGER_KEYS = [' ', 'Enter', 'Spacebar'];\n/**\r\n * The component for synchronizing a slider with another.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var sync = (function (Splide) {\n  /**\r\n   * Keep the sibling Splide instance.\r\n   *\r\n   * @type {Splide}\r\n   */\n  var sibling = Splide.sibling;\n  /**\r\n   * Whether the sibling slider is navigation or not.\r\n   *\r\n   * @type {Splide|boolean}\r\n   */\n\n  var isNavigation = sibling && sibling.options.isNavigation;\n  /**\r\n   * Layout component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Sync = {\n    /**\r\n     * Required only when the sub slider is available.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: !!sibling,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      syncMain();\n      syncSibling();\n\n      if (isNavigation) {\n        bind();\n        Splide.on('refresh', function () {\n          setTimeout(function () {\n            bind();\n            sibling.emit('navigation:updated', Splide);\n          });\n        });\n      }\n    },\n\n    /**\r\n     * Called after all components are mounted.\r\n     */\n    mounted: function mounted() {\n      if (isNavigation) {\n        sibling.emit('navigation:mounted', Splide);\n      }\n    }\n  };\n  /**\r\n   * Listen the primary slider event to move secondary one.\r\n   * Must unbind a handler at first to avoid infinite loop.\r\n   */\n\n  function syncMain() {\n    Splide.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n      sibling.off(SYNC_EVENT).go(sibling.is(LOOP) ? destIndex : newIndex, false);\n      syncSibling();\n    });\n  }\n  /**\r\n   * Listen the secondary slider event to move primary one.\r\n   * Must unbind a handler at first to avoid infinite loop.\r\n   */\n\n\n  function syncSibling() {\n    sibling.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n      Splide.off(SYNC_EVENT).go(Splide.is(LOOP) ? destIndex : newIndex, false);\n      syncMain();\n    });\n  }\n  /**\r\n   * Listen some events on each slide.\r\n   */\n\n\n  function bind() {\n    sibling.Components.Elements.each(function (_ref) {\n      var slide = _ref.slide,\n          index = _ref.index;\n\n      /*\r\n       * Listen mouseup and touchend events to handle click.\r\n       */\n      Splide.off(CLICK_EVENTS, slide).on(CLICK_EVENTS, function (e) {\n        // Ignore a middle or right click.\n        if (!e.button || e.button === 0) {\n          moveSibling(index);\n        }\n      }, slide);\n      /*\r\n       * Subscribe keyup to handle Enter and Space key.\r\n       * Note that Array.includes is not supported by IE.\r\n       */\n\n      Splide.off('keyup', slide).on('keyup', function (e) {\n        if (TRIGGER_KEYS.indexOf(e.key) > -1) {\n          e.preventDefault();\n          moveSibling(index);\n        }\n      }, slide, {\n        passive: false\n      });\n    });\n  }\n  /**\r\n   * Move the sibling to the given index.\r\n   * Need to check \"IDLE\" status because slides can be moving by Drag component.\r\n   *\r\n   * @param {number} index - Target index.\r\n   */\n\n\n  function moveSibling(index) {\n    if (Splide.State.is(IDLE)) {\n      sibling.go(index);\n    }\n  }\n\n  return Sync;\n});\n// CONCATENATED MODULE: ./src/js/components/breakpoints/index.js\n/**\r\n * The component for updating options according to a current window width.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Interval time for throttle.\r\n *\r\n * @type {number}\r\n */\n\nvar THROTTLE = 50;\n/**\r\n * The component for updating options according to a current window width.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\n\n/* harmony default export */ var components_breakpoints = (function (Splide) {\n  /**\r\n   * Store breakpoints.\r\n   *\r\n   * @type {Object|boolean}\r\n   */\n  var breakpoints = Splide.options.breakpoints;\n  /**\r\n   * The check function whose frequency of call is reduced.\r\n   *\r\n   * @type {Function}\r\n   */\n\n  var throttledCheck = throttle(check, THROTTLE);\n  /**\r\n   * Keep initial options.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var initialOptions;\n  /**\r\n   * An array containing objects of point and MediaQueryList.\r\n   *\r\n   * @type {Object[]}\r\n   */\n\n  var map = [];\n  /**\r\n   * Hold the previous breakpoint.\r\n   *\r\n   * @type {number|undefined}\r\n   */\n\n  var prevPoint;\n  /**\r\n   * Breakpoints component object.\r\n   *\r\n   * @type {Object}\r\n   */\n\n  var Breakpoints = {\n    /**\r\n     * Required only when the breakpoints definition is provided and browser supports matchMedia.\r\n     *\r\n     * @type {boolean}\r\n     */\n    required: breakpoints && matchMedia,\n\n    /**\r\n     * Called when the component is mounted.\r\n     */\n    mount: function mount() {\n      map = Object.keys(breakpoints).sort(function (n, m) {\n        return +n - +m;\n      }).map(function (point) {\n        return {\n          point: point,\n          mql: matchMedia(\"(max-width:\" + point + \"px)\")\n        };\n      });\n      /*\r\n       * To keep monitoring resize event after destruction without \"completely\",\r\n       * use native addEventListener instead of Splide.on.\r\n       */\n\n      this.destroy(true);\n      addEventListener('resize', throttledCheck); // Keep initial options to apply them when no breakpoint matches.\n\n      initialOptions = Splide.options;\n      check();\n    },\n\n    /**\r\n     * Destroy.\r\n     *\r\n     * @param {boolean} completely - Whether to destroy Splide completely.\r\n     */\n    destroy: function destroy(completely) {\n      if (completely) {\n        removeEventListener('resize', throttledCheck);\n      }\n    }\n  };\n  /**\r\n   * Check the breakpoint.\r\n   */\n\n  function check() {\n    var point = getPoint();\n\n    if (point !== prevPoint) {\n      prevPoint = point;\n      var State = Splide.State;\n      var options = breakpoints[point] || initialOptions;\n      var destroy = options.destroy;\n\n      if (destroy) {\n        Splide.options = initialOptions;\n        Splide.destroy(destroy === 'completely');\n      } else {\n        if (State.is(DESTROYED)) {\n          Splide.mount();\n        }\n\n        Splide.options = options;\n      }\n    }\n  }\n  /**\r\n   * Return the breakpoint matching current window width.\r\n   * Note that Array.prototype.find is not supported by IE.\r\n   *\r\n   * @return {number|string} - A breakpoint as number or string. -1 if no point matches.\r\n   */\n\n\n  function getPoint() {\n    var item = map.filter(function (item) {\n      return item.mql.matches;\n    })[0];\n    return item ? item.point : -1;\n  }\n\n  return Breakpoints;\n});\n// CONCATENATED MODULE: ./src/js/components/index.js\n/**\r\n * Export components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar COMPLETE = {\n  Options: components_options,\n  Breakpoints: components_breakpoints,\n  Controller: controller,\n  Elements: components_elements,\n  Track: components_track,\n  Clones: components_clones,\n  Layout: layout,\n  Drag: drag,\n  Click: click,\n  Autoplay: components_autoplay,\n  Cover: components_cover,\n  Arrows: components_arrows,\n  Pagination: components_pagination,\n  LazyLoad: lazyload,\n  Keyboard: components_keyboard,\n  Sync: sync,\n  A11y: a11y\n};\nvar LIGHT = {\n  Options: components_options,\n  Controller: controller,\n  Elements: components_elements,\n  Track: components_track,\n  Clones: components_clones,\n  Layout: layout,\n  Drag: drag,\n  Click: click,\n  Arrows: components_arrows,\n  Pagination: components_pagination,\n  A11y: a11y\n};\n// CONCATENATED MODULE: ./build/module/module.js\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\r\n * Export Splide class for import.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\n\n\n/**\r\n * Export Splide class for import from other projects.\r\n */\n\nvar module_Splide = /*#__PURE__*/function (_Core) {\n  _inheritsLoose(Splide, _Core);\n\n  function Splide(root, options) {\n    return _Core.call(this, root, options, COMPLETE) || this;\n  }\n\n  return Splide;\n}(splide_Splide);\n\n\n\n/***/ })\n/******/ ]);\n});"]},"metadata":{},"sourceType":"script"}