{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robertpage/Documents/Programming/Projects/sarah_portfolio_site/Production/frontend/src/components/ProjectDetail/components/OtherWorkCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './OtherWorkCards.css';\n\nfunction OtherWorkCards(props) {\n  _s();\n\n  const [currentProjectID, setCurrentProjectID] = useState(null);\n  const [pages, setPages] = useState(null);\n  const [cardsIsLoading, setCardsIsLoading] = useState(true);\n  useEffect(() => {\n    // setCardsIsLoading(true)\n    // fetchCurrentProjectID();\n    // fetchPages();\n    // setCardsIsLoading(false)\n    let isMounted = true;\n    fetch(`https://sarah-ryder-backend.herokuapp.com/api/v2/pages/?slug=${props.project}`).then(response => {\n      if (isMounted) response.json();\n    }).then(json => setCurrentProjectID(json.items[0].id)).catch(function () {\n      console.log(\"Error: Failed to fetch data from API\");\n    });\n    fetch('https://sarah-ryder-backend.herokuapp.com/api/v2/pages/?type=portfolio.Project&fields=client,card_image,card_description').then(response => response.json()).then(json => setPages(json.items));\n    return () => {\n      isMounted = false;\n    };\n  }, [props]);\n\n  function fetchCurrentProjectID() {\n    fetch(`https://sarah-ryder-backend.herokuapp.com/api/v2/pages/?slug=${props.project}`).then(response => response.json()).then(json => setCurrentProjectID(json.items[0].id)).catch(function () {\n      console.log(\"Error: Failed to fetch data from API\");\n    });\n  }\n\n  function fetchPages() {\n    fetch('https://sarah-ryder-backend.herokuapp.com/api/v2/pages/?type=portfolio.Project&fields=client,card_image,card_description').then(response => response.json()).then(json => setPages(json.items));\n  }\n\n  if (!cardsIsLoading && pages) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-holder\",\n      children: pages.map((page, index) => {\n        if (page.id !== currentProjectID) {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\" + page.meta.slug,\n            className: \"project-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: 'https://sarah-ryder-backend.s3-us-west-2.amazonaws.com/original_images/' + page.card_image.title,\n                alt: page.card_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"detail-page-card-client\",\n                children: page.client\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"detail-page-card-description\",\n                children: page.card_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OtherWorkCards, \"kGCvWxdMYHMPt0n+DcNIDURzOew=\");\n\n_c = OtherWorkCards;\nexport default OtherWorkCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherWorkCards\");","map":{"version":3,"sources":["/Users/robertpage/Documents/Programming/Projects/sarah_portfolio_site/Production/frontend/src/components/ProjectDetail/components/OtherWorkCards.js"],"names":["React","useState","useEffect","Link","OtherWorkCards","props","currentProjectID","setCurrentProjectID","pages","setPages","cardsIsLoading","setCardsIsLoading","isMounted","fetch","project","then","response","json","items","id","catch","console","log","fetchCurrentProjectID","fetchPages","map","page","index","meta","slug","card_image","title","card_description","client"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './OtherWorkCards.css';\n\nfunction OtherWorkCards(props) {\n    const [currentProjectID, setCurrentProjectID] = useState(null)\n    const [pages, setPages] = useState(null)\n    const [cardsIsLoading, setCardsIsLoading] = useState(true)\n    \n    useEffect(() => {\n        // setCardsIsLoading(true)\n        // fetchCurrentProjectID();\n        // fetchPages();\n        // setCardsIsLoading(false)\n        let isMounted = true\n\n        fetch(`https://sarah-ryder-backend.herokuapp.com/api/v2/pages/?slug=${props.project}`)\n        .then(response => {\n            if (isMounted) response.json()\n        })\n        .then(json => setCurrentProjectID(json.items[0].id))\n        .catch(function() {\n            console.log(\"Error: Failed to fetch data from API\")\n        })\n\n        fetch('https://sarah-ryder-backend.herokuapp.com/api/v2/pages/?type=portfolio.Project&fields=client,card_image,card_description')\n        .then(response => response.json())\n        .then(json => setPages(json.items))\n\n        return () => { isMounted = false }\n      }, [props]);\n      \n    function fetchCurrentProjectID() {\n        fetch(`https://sarah-ryder-backend.herokuapp.com/api/v2/pages/?slug=${props.project}`)\n        .then(response => response.json())\n        .then(json => setCurrentProjectID(json.items[0].id))\n        .catch(function() {\n            console.log(\"Error: Failed to fetch data from API\")\n        })\n    }\n      \n    function fetchPages() {\n        fetch('https://sarah-ryder-backend.herokuapp.com/api/v2/pages/?type=portfolio.Project&fields=client,card_image,card_description')\n        .then(response => response.json())\n        .then(json => setPages(json.items))\n    }\n\n    if (!cardsIsLoading && pages) {\n        return(\n            <div className=\"card-holder\">\n                {pages.map((page, index) => {\n                    if (page.id !== currentProjectID) {\n                        return (\n                            <Link to={\"/\" + page.meta.slug} key={index} className=\"project-card\" >\n                                <div className=\"card-image\">\n                                    <img\n                                        src={'https://sarah-ryder-backend.s3-us-west-2.amazonaws.com/original_images/' + page.card_image.title}\n                                        alt={page.card_description}\n                                    />\n                                </div>\n                                <div className=\"card-text\">\n                                    <p className=\"detail-page-card-client\">{page.client}</p>\n                                    <p className=\"detail-page-card-description\">{page.card_description}</p>\n                                </div>\n                            </Link>\n                        )\n                    }\n                }\n                )}\n            </div>\n        )\n    } else return (\n        <div/>\n    )\n    \n}\n\nexport default OtherWorkCards;"]},"metadata":{},"sourceType":"module"}